
ICU_DRIVE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000020b2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000022  00800060  000020b2  00002146  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000005e  00800082  00800082  00002168  2**0
                  ALLOC
  3 .stab         000015cc  00000000  00000000  00002168  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000d13  00000000  00000000  00003734  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 00000140  00000000  00000000  00004447  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 00000170  00000000  00000000  00004587  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00001c49  00000000  00000000  000046f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00000eeb  00000000  00000000  00006340  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00000dad  00000000  00000000  0000722b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00000160  00000000  00000000  00007fd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000028d  00000000  00000000  00008138  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000007ce  00000000  00000000  000083c5  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000050  00000000  00000000  00008b93  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
       c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 67 0c 	jmp	0x18ce	; 0x18ce <__vector_9>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 eb       	ldi	r30, 0xB2	; 178
      68:	f0 e2       	ldi	r31, 0x20	; 32
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a2 38       	cpi	r26, 0x82	; 130
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	a2 e8       	ldi	r26, 0x82	; 130
      7a:	b0 e0       	ldi	r27, 0x00	; 0
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	a0 3e       	cpi	r26, 0xE0	; 224
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 9a 0c 	call	0x1934	; 0x1934 <main>
      8a:	0c 94 57 10 	jmp	0x20ae	; 0x20ae <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__fixunssfsi>:
      92:	ef 92       	push	r14
      94:	ff 92       	push	r15
      96:	0f 93       	push	r16
      98:	1f 93       	push	r17
      9a:	7b 01       	movw	r14, r22
      9c:	8c 01       	movw	r16, r24
      9e:	20 e0       	ldi	r18, 0x00	; 0
      a0:	30 e0       	ldi	r19, 0x00	; 0
      a2:	40 e0       	ldi	r20, 0x00	; 0
      a4:	5f e4       	ldi	r21, 0x4F	; 79
      a6:	0e 94 49 03 	call	0x692	; 0x692 <__gesf2>
      aa:	88 23       	and	r24, r24
      ac:	8c f0       	brlt	.+34     	; 0xd0 <__fixunssfsi+0x3e>
      ae:	c8 01       	movw	r24, r16
      b0:	b7 01       	movw	r22, r14
      b2:	20 e0       	ldi	r18, 0x00	; 0
      b4:	30 e0       	ldi	r19, 0x00	; 0
      b6:	40 e0       	ldi	r20, 0x00	; 0
      b8:	5f e4       	ldi	r21, 0x4F	; 79
      ba:	0e 94 c1 01 	call	0x382	; 0x382 <__subsf3>
      be:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      c2:	9b 01       	movw	r18, r22
      c4:	ac 01       	movw	r20, r24
      c6:	20 50       	subi	r18, 0x00	; 0
      c8:	30 40       	sbci	r19, 0x00	; 0
      ca:	40 40       	sbci	r20, 0x00	; 0
      cc:	50 48       	sbci	r21, 0x80	; 128
      ce:	06 c0       	rjmp	.+12     	; 0xdc <__fixunssfsi+0x4a>
      d0:	c8 01       	movw	r24, r16
      d2:	b7 01       	movw	r22, r14
      d4:	0e 94 a9 03 	call	0x752	; 0x752 <__fixsfsi>
      d8:	9b 01       	movw	r18, r22
      da:	ac 01       	movw	r20, r24
      dc:	b9 01       	movw	r22, r18
      de:	ca 01       	movw	r24, r20
      e0:	1f 91       	pop	r17
      e2:	0f 91       	pop	r16
      e4:	ff 90       	pop	r15
      e6:	ef 90       	pop	r14
      e8:	08 95       	ret

000000ea <_fpadd_parts>:
      ea:	a0 e0       	ldi	r26, 0x00	; 0
      ec:	b0 e0       	ldi	r27, 0x00	; 0
      ee:	eb e7       	ldi	r30, 0x7B	; 123
      f0:	f0 e0       	ldi	r31, 0x00	; 0
      f2:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__prologue_saves__>
      f6:	dc 01       	movw	r26, r24
      f8:	2b 01       	movw	r4, r22
      fa:	fa 01       	movw	r30, r20
      fc:	9c 91       	ld	r25, X
      fe:	92 30       	cpi	r25, 0x02	; 2
     100:	08 f4       	brcc	.+2      	; 0x104 <_fpadd_parts+0x1a>
     102:	39 c1       	rjmp	.+626    	; 0x376 <_fpadd_parts+0x28c>
     104:	eb 01       	movw	r28, r22
     106:	88 81       	ld	r24, Y
     108:	82 30       	cpi	r24, 0x02	; 2
     10a:	08 f4       	brcc	.+2      	; 0x10e <_fpadd_parts+0x24>
     10c:	33 c1       	rjmp	.+614    	; 0x374 <_fpadd_parts+0x28a>
     10e:	94 30       	cpi	r25, 0x04	; 4
     110:	69 f4       	brne	.+26     	; 0x12c <_fpadd_parts+0x42>
     112:	84 30       	cpi	r24, 0x04	; 4
     114:	09 f0       	breq	.+2      	; 0x118 <_fpadd_parts+0x2e>
     116:	2f c1       	rjmp	.+606    	; 0x376 <_fpadd_parts+0x28c>
     118:	11 96       	adiw	r26, 0x01	; 1
     11a:	9c 91       	ld	r25, X
     11c:	11 97       	sbiw	r26, 0x01	; 1
     11e:	89 81       	ldd	r24, Y+1	; 0x01
     120:	98 17       	cp	r25, r24
     122:	09 f4       	brne	.+2      	; 0x126 <_fpadd_parts+0x3c>
     124:	28 c1       	rjmp	.+592    	; 0x376 <_fpadd_parts+0x28c>
     126:	a9 e7       	ldi	r26, 0x79	; 121
     128:	b0 e0       	ldi	r27, 0x00	; 0
     12a:	25 c1       	rjmp	.+586    	; 0x376 <_fpadd_parts+0x28c>
     12c:	84 30       	cpi	r24, 0x04	; 4
     12e:	09 f4       	brne	.+2      	; 0x132 <_fpadd_parts+0x48>
     130:	21 c1       	rjmp	.+578    	; 0x374 <_fpadd_parts+0x28a>
     132:	82 30       	cpi	r24, 0x02	; 2
     134:	a9 f4       	brne	.+42     	; 0x160 <_fpadd_parts+0x76>
     136:	92 30       	cpi	r25, 0x02	; 2
     138:	09 f0       	breq	.+2      	; 0x13c <_fpadd_parts+0x52>
     13a:	1d c1       	rjmp	.+570    	; 0x376 <_fpadd_parts+0x28c>
     13c:	9a 01       	movw	r18, r20
     13e:	ad 01       	movw	r20, r26
     140:	88 e0       	ldi	r24, 0x08	; 8
     142:	ea 01       	movw	r28, r20
     144:	09 90       	ld	r0, Y+
     146:	ae 01       	movw	r20, r28
     148:	e9 01       	movw	r28, r18
     14a:	09 92       	st	Y+, r0
     14c:	9e 01       	movw	r18, r28
     14e:	81 50       	subi	r24, 0x01	; 1
     150:	c1 f7       	brne	.-16     	; 0x142 <_fpadd_parts+0x58>
     152:	e2 01       	movw	r28, r4
     154:	89 81       	ldd	r24, Y+1	; 0x01
     156:	11 96       	adiw	r26, 0x01	; 1
     158:	9c 91       	ld	r25, X
     15a:	89 23       	and	r24, r25
     15c:	81 83       	std	Z+1, r24	; 0x01
     15e:	08 c1       	rjmp	.+528    	; 0x370 <_fpadd_parts+0x286>
     160:	92 30       	cpi	r25, 0x02	; 2
     162:	09 f4       	brne	.+2      	; 0x166 <_fpadd_parts+0x7c>
     164:	07 c1       	rjmp	.+526    	; 0x374 <_fpadd_parts+0x28a>
     166:	12 96       	adiw	r26, 0x02	; 2
     168:	2d 90       	ld	r2, X+
     16a:	3c 90       	ld	r3, X
     16c:	13 97       	sbiw	r26, 0x03	; 3
     16e:	eb 01       	movw	r28, r22
     170:	8a 81       	ldd	r24, Y+2	; 0x02
     172:	9b 81       	ldd	r25, Y+3	; 0x03
     174:	14 96       	adiw	r26, 0x04	; 4
     176:	ad 90       	ld	r10, X+
     178:	bd 90       	ld	r11, X+
     17a:	cd 90       	ld	r12, X+
     17c:	dc 90       	ld	r13, X
     17e:	17 97       	sbiw	r26, 0x07	; 7
     180:	ec 80       	ldd	r14, Y+4	; 0x04
     182:	fd 80       	ldd	r15, Y+5	; 0x05
     184:	0e 81       	ldd	r16, Y+6	; 0x06
     186:	1f 81       	ldd	r17, Y+7	; 0x07
     188:	91 01       	movw	r18, r2
     18a:	28 1b       	sub	r18, r24
     18c:	39 0b       	sbc	r19, r25
     18e:	b9 01       	movw	r22, r18
     190:	37 ff       	sbrs	r19, 7
     192:	04 c0       	rjmp	.+8      	; 0x19c <_fpadd_parts+0xb2>
     194:	66 27       	eor	r22, r22
     196:	77 27       	eor	r23, r23
     198:	62 1b       	sub	r22, r18
     19a:	73 0b       	sbc	r23, r19
     19c:	60 32       	cpi	r22, 0x20	; 32
     19e:	71 05       	cpc	r23, r1
     1a0:	0c f0       	brlt	.+2      	; 0x1a4 <_fpadd_parts+0xba>
     1a2:	61 c0       	rjmp	.+194    	; 0x266 <_fpadd_parts+0x17c>
     1a4:	12 16       	cp	r1, r18
     1a6:	13 06       	cpc	r1, r19
     1a8:	6c f5       	brge	.+90     	; 0x204 <_fpadd_parts+0x11a>
     1aa:	37 01       	movw	r6, r14
     1ac:	48 01       	movw	r8, r16
     1ae:	06 2e       	mov	r0, r22
     1b0:	04 c0       	rjmp	.+8      	; 0x1ba <_fpadd_parts+0xd0>
     1b2:	96 94       	lsr	r9
     1b4:	87 94       	ror	r8
     1b6:	77 94       	ror	r7
     1b8:	67 94       	ror	r6
     1ba:	0a 94       	dec	r0
     1bc:	d2 f7       	brpl	.-12     	; 0x1b2 <_fpadd_parts+0xc8>
     1be:	21 e0       	ldi	r18, 0x01	; 1
     1c0:	30 e0       	ldi	r19, 0x00	; 0
     1c2:	40 e0       	ldi	r20, 0x00	; 0
     1c4:	50 e0       	ldi	r21, 0x00	; 0
     1c6:	04 c0       	rjmp	.+8      	; 0x1d0 <_fpadd_parts+0xe6>
     1c8:	22 0f       	add	r18, r18
     1ca:	33 1f       	adc	r19, r19
     1cc:	44 1f       	adc	r20, r20
     1ce:	55 1f       	adc	r21, r21
     1d0:	6a 95       	dec	r22
     1d2:	d2 f7       	brpl	.-12     	; 0x1c8 <_fpadd_parts+0xde>
     1d4:	21 50       	subi	r18, 0x01	; 1
     1d6:	30 40       	sbci	r19, 0x00	; 0
     1d8:	40 40       	sbci	r20, 0x00	; 0
     1da:	50 40       	sbci	r21, 0x00	; 0
     1dc:	2e 21       	and	r18, r14
     1de:	3f 21       	and	r19, r15
     1e0:	40 23       	and	r20, r16
     1e2:	51 23       	and	r21, r17
     1e4:	21 15       	cp	r18, r1
     1e6:	31 05       	cpc	r19, r1
     1e8:	41 05       	cpc	r20, r1
     1ea:	51 05       	cpc	r21, r1
     1ec:	21 f0       	breq	.+8      	; 0x1f6 <_fpadd_parts+0x10c>
     1ee:	21 e0       	ldi	r18, 0x01	; 1
     1f0:	30 e0       	ldi	r19, 0x00	; 0
     1f2:	40 e0       	ldi	r20, 0x00	; 0
     1f4:	50 e0       	ldi	r21, 0x00	; 0
     1f6:	79 01       	movw	r14, r18
     1f8:	8a 01       	movw	r16, r20
     1fa:	e6 28       	or	r14, r6
     1fc:	f7 28       	or	r15, r7
     1fe:	08 29       	or	r16, r8
     200:	19 29       	or	r17, r9
     202:	3c c0       	rjmp	.+120    	; 0x27c <_fpadd_parts+0x192>
     204:	23 2b       	or	r18, r19
     206:	d1 f1       	breq	.+116    	; 0x27c <_fpadd_parts+0x192>
     208:	26 0e       	add	r2, r22
     20a:	37 1e       	adc	r3, r23
     20c:	35 01       	movw	r6, r10
     20e:	46 01       	movw	r8, r12
     210:	06 2e       	mov	r0, r22
     212:	04 c0       	rjmp	.+8      	; 0x21c <_fpadd_parts+0x132>
     214:	96 94       	lsr	r9
     216:	87 94       	ror	r8
     218:	77 94       	ror	r7
     21a:	67 94       	ror	r6
     21c:	0a 94       	dec	r0
     21e:	d2 f7       	brpl	.-12     	; 0x214 <_fpadd_parts+0x12a>
     220:	21 e0       	ldi	r18, 0x01	; 1
     222:	30 e0       	ldi	r19, 0x00	; 0
     224:	40 e0       	ldi	r20, 0x00	; 0
     226:	50 e0       	ldi	r21, 0x00	; 0
     228:	04 c0       	rjmp	.+8      	; 0x232 <_fpadd_parts+0x148>
     22a:	22 0f       	add	r18, r18
     22c:	33 1f       	adc	r19, r19
     22e:	44 1f       	adc	r20, r20
     230:	55 1f       	adc	r21, r21
     232:	6a 95       	dec	r22
     234:	d2 f7       	brpl	.-12     	; 0x22a <_fpadd_parts+0x140>
     236:	21 50       	subi	r18, 0x01	; 1
     238:	30 40       	sbci	r19, 0x00	; 0
     23a:	40 40       	sbci	r20, 0x00	; 0
     23c:	50 40       	sbci	r21, 0x00	; 0
     23e:	2a 21       	and	r18, r10
     240:	3b 21       	and	r19, r11
     242:	4c 21       	and	r20, r12
     244:	5d 21       	and	r21, r13
     246:	21 15       	cp	r18, r1
     248:	31 05       	cpc	r19, r1
     24a:	41 05       	cpc	r20, r1
     24c:	51 05       	cpc	r21, r1
     24e:	21 f0       	breq	.+8      	; 0x258 <_fpadd_parts+0x16e>
     250:	21 e0       	ldi	r18, 0x01	; 1
     252:	30 e0       	ldi	r19, 0x00	; 0
     254:	40 e0       	ldi	r20, 0x00	; 0
     256:	50 e0       	ldi	r21, 0x00	; 0
     258:	59 01       	movw	r10, r18
     25a:	6a 01       	movw	r12, r20
     25c:	a6 28       	or	r10, r6
     25e:	b7 28       	or	r11, r7
     260:	c8 28       	or	r12, r8
     262:	d9 28       	or	r13, r9
     264:	0b c0       	rjmp	.+22     	; 0x27c <_fpadd_parts+0x192>
     266:	82 15       	cp	r24, r2
     268:	93 05       	cpc	r25, r3
     26a:	2c f0       	brlt	.+10     	; 0x276 <_fpadd_parts+0x18c>
     26c:	1c 01       	movw	r2, r24
     26e:	aa 24       	eor	r10, r10
     270:	bb 24       	eor	r11, r11
     272:	65 01       	movw	r12, r10
     274:	03 c0       	rjmp	.+6      	; 0x27c <_fpadd_parts+0x192>
     276:	ee 24       	eor	r14, r14
     278:	ff 24       	eor	r15, r15
     27a:	87 01       	movw	r16, r14
     27c:	11 96       	adiw	r26, 0x01	; 1
     27e:	9c 91       	ld	r25, X
     280:	d2 01       	movw	r26, r4
     282:	11 96       	adiw	r26, 0x01	; 1
     284:	8c 91       	ld	r24, X
     286:	98 17       	cp	r25, r24
     288:	09 f4       	brne	.+2      	; 0x28c <_fpadd_parts+0x1a2>
     28a:	45 c0       	rjmp	.+138    	; 0x316 <_fpadd_parts+0x22c>
     28c:	99 23       	and	r25, r25
     28e:	39 f0       	breq	.+14     	; 0x29e <_fpadd_parts+0x1b4>
     290:	a8 01       	movw	r20, r16
     292:	97 01       	movw	r18, r14
     294:	2a 19       	sub	r18, r10
     296:	3b 09       	sbc	r19, r11
     298:	4c 09       	sbc	r20, r12
     29a:	5d 09       	sbc	r21, r13
     29c:	06 c0       	rjmp	.+12     	; 0x2aa <_fpadd_parts+0x1c0>
     29e:	a6 01       	movw	r20, r12
     2a0:	95 01       	movw	r18, r10
     2a2:	2e 19       	sub	r18, r14
     2a4:	3f 09       	sbc	r19, r15
     2a6:	40 0b       	sbc	r20, r16
     2a8:	51 0b       	sbc	r21, r17
     2aa:	57 fd       	sbrc	r21, 7
     2ac:	08 c0       	rjmp	.+16     	; 0x2be <_fpadd_parts+0x1d4>
     2ae:	11 82       	std	Z+1, r1	; 0x01
     2b0:	33 82       	std	Z+3, r3	; 0x03
     2b2:	22 82       	std	Z+2, r2	; 0x02
     2b4:	24 83       	std	Z+4, r18	; 0x04
     2b6:	35 83       	std	Z+5, r19	; 0x05
     2b8:	46 83       	std	Z+6, r20	; 0x06
     2ba:	57 83       	std	Z+7, r21	; 0x07
     2bc:	1d c0       	rjmp	.+58     	; 0x2f8 <_fpadd_parts+0x20e>
     2be:	81 e0       	ldi	r24, 0x01	; 1
     2c0:	81 83       	std	Z+1, r24	; 0x01
     2c2:	33 82       	std	Z+3, r3	; 0x03
     2c4:	22 82       	std	Z+2, r2	; 0x02
     2c6:	88 27       	eor	r24, r24
     2c8:	99 27       	eor	r25, r25
     2ca:	dc 01       	movw	r26, r24
     2cc:	82 1b       	sub	r24, r18
     2ce:	93 0b       	sbc	r25, r19
     2d0:	a4 0b       	sbc	r26, r20
     2d2:	b5 0b       	sbc	r27, r21
     2d4:	84 83       	std	Z+4, r24	; 0x04
     2d6:	95 83       	std	Z+5, r25	; 0x05
     2d8:	a6 83       	std	Z+6, r26	; 0x06
     2da:	b7 83       	std	Z+7, r27	; 0x07
     2dc:	0d c0       	rjmp	.+26     	; 0x2f8 <_fpadd_parts+0x20e>
     2de:	22 0f       	add	r18, r18
     2e0:	33 1f       	adc	r19, r19
     2e2:	44 1f       	adc	r20, r20
     2e4:	55 1f       	adc	r21, r21
     2e6:	24 83       	std	Z+4, r18	; 0x04
     2e8:	35 83       	std	Z+5, r19	; 0x05
     2ea:	46 83       	std	Z+6, r20	; 0x06
     2ec:	57 83       	std	Z+7, r21	; 0x07
     2ee:	82 81       	ldd	r24, Z+2	; 0x02
     2f0:	93 81       	ldd	r25, Z+3	; 0x03
     2f2:	01 97       	sbiw	r24, 0x01	; 1
     2f4:	93 83       	std	Z+3, r25	; 0x03
     2f6:	82 83       	std	Z+2, r24	; 0x02
     2f8:	24 81       	ldd	r18, Z+4	; 0x04
     2fa:	35 81       	ldd	r19, Z+5	; 0x05
     2fc:	46 81       	ldd	r20, Z+6	; 0x06
     2fe:	57 81       	ldd	r21, Z+7	; 0x07
     300:	da 01       	movw	r26, r20
     302:	c9 01       	movw	r24, r18
     304:	01 97       	sbiw	r24, 0x01	; 1
     306:	a1 09       	sbc	r26, r1
     308:	b1 09       	sbc	r27, r1
     30a:	8f 5f       	subi	r24, 0xFF	; 255
     30c:	9f 4f       	sbci	r25, 0xFF	; 255
     30e:	af 4f       	sbci	r26, 0xFF	; 255
     310:	bf 43       	sbci	r27, 0x3F	; 63
     312:	28 f3       	brcs	.-54     	; 0x2de <_fpadd_parts+0x1f4>
     314:	0b c0       	rjmp	.+22     	; 0x32c <_fpadd_parts+0x242>
     316:	91 83       	std	Z+1, r25	; 0x01
     318:	33 82       	std	Z+3, r3	; 0x03
     31a:	22 82       	std	Z+2, r2	; 0x02
     31c:	ea 0c       	add	r14, r10
     31e:	fb 1c       	adc	r15, r11
     320:	0c 1d       	adc	r16, r12
     322:	1d 1d       	adc	r17, r13
     324:	e4 82       	std	Z+4, r14	; 0x04
     326:	f5 82       	std	Z+5, r15	; 0x05
     328:	06 83       	std	Z+6, r16	; 0x06
     32a:	17 83       	std	Z+7, r17	; 0x07
     32c:	83 e0       	ldi	r24, 0x03	; 3
     32e:	80 83       	st	Z, r24
     330:	24 81       	ldd	r18, Z+4	; 0x04
     332:	35 81       	ldd	r19, Z+5	; 0x05
     334:	46 81       	ldd	r20, Z+6	; 0x06
     336:	57 81       	ldd	r21, Z+7	; 0x07
     338:	57 ff       	sbrs	r21, 7
     33a:	1a c0       	rjmp	.+52     	; 0x370 <_fpadd_parts+0x286>
     33c:	c9 01       	movw	r24, r18
     33e:	aa 27       	eor	r26, r26
     340:	97 fd       	sbrc	r25, 7
     342:	a0 95       	com	r26
     344:	ba 2f       	mov	r27, r26
     346:	81 70       	andi	r24, 0x01	; 1
     348:	90 70       	andi	r25, 0x00	; 0
     34a:	a0 70       	andi	r26, 0x00	; 0
     34c:	b0 70       	andi	r27, 0x00	; 0
     34e:	56 95       	lsr	r21
     350:	47 95       	ror	r20
     352:	37 95       	ror	r19
     354:	27 95       	ror	r18
     356:	82 2b       	or	r24, r18
     358:	93 2b       	or	r25, r19
     35a:	a4 2b       	or	r26, r20
     35c:	b5 2b       	or	r27, r21
     35e:	84 83       	std	Z+4, r24	; 0x04
     360:	95 83       	std	Z+5, r25	; 0x05
     362:	a6 83       	std	Z+6, r26	; 0x06
     364:	b7 83       	std	Z+7, r27	; 0x07
     366:	82 81       	ldd	r24, Z+2	; 0x02
     368:	93 81       	ldd	r25, Z+3	; 0x03
     36a:	01 96       	adiw	r24, 0x01	; 1
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	82 83       	std	Z+2, r24	; 0x02
     370:	df 01       	movw	r26, r30
     372:	01 c0       	rjmp	.+2      	; 0x376 <_fpadd_parts+0x28c>
     374:	d2 01       	movw	r26, r4
     376:	cd 01       	movw	r24, r26
     378:	cd b7       	in	r28, 0x3d	; 61
     37a:	de b7       	in	r29, 0x3e	; 62
     37c:	e2 e1       	ldi	r30, 0x12	; 18
     37e:	0c 94 9b 0d 	jmp	0x1b36	; 0x1b36 <__epilogue_restores__>

00000382 <__subsf3>:
     382:	a0 e2       	ldi	r26, 0x20	; 32
     384:	b0 e0       	ldi	r27, 0x00	; 0
     386:	e7 ec       	ldi	r30, 0xC7	; 199
     388:	f1 e0       	ldi	r31, 0x01	; 1
     38a:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
     38e:	69 83       	std	Y+1, r22	; 0x01
     390:	7a 83       	std	Y+2, r23	; 0x02
     392:	8b 83       	std	Y+3, r24	; 0x03
     394:	9c 83       	std	Y+4, r25	; 0x04
     396:	2d 83       	std	Y+5, r18	; 0x05
     398:	3e 83       	std	Y+6, r19	; 0x06
     39a:	4f 83       	std	Y+7, r20	; 0x07
     39c:	58 87       	std	Y+8, r21	; 0x08
     39e:	e9 e0       	ldi	r30, 0x09	; 9
     3a0:	ee 2e       	mov	r14, r30
     3a2:	f1 2c       	mov	r15, r1
     3a4:	ec 0e       	add	r14, r28
     3a6:	fd 1e       	adc	r15, r29
     3a8:	ce 01       	movw	r24, r28
     3aa:	01 96       	adiw	r24, 0x01	; 1
     3ac:	b7 01       	movw	r22, r14
     3ae:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3b2:	8e 01       	movw	r16, r28
     3b4:	0f 5e       	subi	r16, 0xEF	; 239
     3b6:	1f 4f       	sbci	r17, 0xFF	; 255
     3b8:	ce 01       	movw	r24, r28
     3ba:	05 96       	adiw	r24, 0x05	; 5
     3bc:	b8 01       	movw	r22, r16
     3be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     3c2:	8a 89       	ldd	r24, Y+18	; 0x12
     3c4:	91 e0       	ldi	r25, 0x01	; 1
     3c6:	89 27       	eor	r24, r25
     3c8:	8a 8b       	std	Y+18, r24	; 0x12
     3ca:	c7 01       	movw	r24, r14
     3cc:	b8 01       	movw	r22, r16
     3ce:	ae 01       	movw	r20, r28
     3d0:	47 5e       	subi	r20, 0xE7	; 231
     3d2:	5f 4f       	sbci	r21, 0xFF	; 255
     3d4:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     3d8:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     3dc:	a0 96       	adiw	r28, 0x20	; 32
     3de:	e6 e0       	ldi	r30, 0x06	; 6
     3e0:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

000003e4 <__addsf3>:
     3e4:	a0 e2       	ldi	r26, 0x20	; 32
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	e8 ef       	ldi	r30, 0xF8	; 248
     3ea:	f1 e0       	ldi	r31, 0x01	; 1
     3ec:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
     3f0:	69 83       	std	Y+1, r22	; 0x01
     3f2:	7a 83       	std	Y+2, r23	; 0x02
     3f4:	8b 83       	std	Y+3, r24	; 0x03
     3f6:	9c 83       	std	Y+4, r25	; 0x04
     3f8:	2d 83       	std	Y+5, r18	; 0x05
     3fa:	3e 83       	std	Y+6, r19	; 0x06
     3fc:	4f 83       	std	Y+7, r20	; 0x07
     3fe:	58 87       	std	Y+8, r21	; 0x08
     400:	f9 e0       	ldi	r31, 0x09	; 9
     402:	ef 2e       	mov	r14, r31
     404:	f1 2c       	mov	r15, r1
     406:	ec 0e       	add	r14, r28
     408:	fd 1e       	adc	r15, r29
     40a:	ce 01       	movw	r24, r28
     40c:	01 96       	adiw	r24, 0x01	; 1
     40e:	b7 01       	movw	r22, r14
     410:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     414:	8e 01       	movw	r16, r28
     416:	0f 5e       	subi	r16, 0xEF	; 239
     418:	1f 4f       	sbci	r17, 0xFF	; 255
     41a:	ce 01       	movw	r24, r28
     41c:	05 96       	adiw	r24, 0x05	; 5
     41e:	b8 01       	movw	r22, r16
     420:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     424:	c7 01       	movw	r24, r14
     426:	b8 01       	movw	r22, r16
     428:	ae 01       	movw	r20, r28
     42a:	47 5e       	subi	r20, 0xE7	; 231
     42c:	5f 4f       	sbci	r21, 0xFF	; 255
     42e:	0e 94 75 00 	call	0xea	; 0xea <_fpadd_parts>
     432:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     436:	a0 96       	adiw	r28, 0x20	; 32
     438:	e6 e0       	ldi	r30, 0x06	; 6
     43a:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

0000043e <__mulsf3>:
     43e:	a0 e2       	ldi	r26, 0x20	; 32
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__prologue_saves__>
     44a:	69 83       	std	Y+1, r22	; 0x01
     44c:	7a 83       	std	Y+2, r23	; 0x02
     44e:	8b 83       	std	Y+3, r24	; 0x03
     450:	9c 83       	std	Y+4, r25	; 0x04
     452:	2d 83       	std	Y+5, r18	; 0x05
     454:	3e 83       	std	Y+6, r19	; 0x06
     456:	4f 83       	std	Y+7, r20	; 0x07
     458:	58 87       	std	Y+8, r21	; 0x08
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	be 01       	movw	r22, r28
     460:	67 5f       	subi	r22, 0xF7	; 247
     462:	7f 4f       	sbci	r23, 0xFF	; 255
     464:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     468:	ce 01       	movw	r24, r28
     46a:	05 96       	adiw	r24, 0x05	; 5
     46c:	be 01       	movw	r22, r28
     46e:	6f 5e       	subi	r22, 0xEF	; 239
     470:	7f 4f       	sbci	r23, 0xFF	; 255
     472:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     476:	99 85       	ldd	r25, Y+9	; 0x09
     478:	92 30       	cpi	r25, 0x02	; 2
     47a:	88 f0       	brcs	.+34     	; 0x49e <__mulsf3+0x60>
     47c:	89 89       	ldd	r24, Y+17	; 0x11
     47e:	82 30       	cpi	r24, 0x02	; 2
     480:	c8 f0       	brcs	.+50     	; 0x4b4 <__mulsf3+0x76>
     482:	94 30       	cpi	r25, 0x04	; 4
     484:	19 f4       	brne	.+6      	; 0x48c <__mulsf3+0x4e>
     486:	82 30       	cpi	r24, 0x02	; 2
     488:	51 f4       	brne	.+20     	; 0x49e <__mulsf3+0x60>
     48a:	04 c0       	rjmp	.+8      	; 0x494 <__mulsf3+0x56>
     48c:	84 30       	cpi	r24, 0x04	; 4
     48e:	29 f4       	brne	.+10     	; 0x49a <__mulsf3+0x5c>
     490:	92 30       	cpi	r25, 0x02	; 2
     492:	81 f4       	brne	.+32     	; 0x4b4 <__mulsf3+0x76>
     494:	89 e7       	ldi	r24, 0x79	; 121
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	c6 c0       	rjmp	.+396    	; 0x626 <__mulsf3+0x1e8>
     49a:	92 30       	cpi	r25, 0x02	; 2
     49c:	49 f4       	brne	.+18     	; 0x4b0 <__mulsf3+0x72>
     49e:	20 e0       	ldi	r18, 0x00	; 0
     4a0:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a2:	8a 89       	ldd	r24, Y+18	; 0x12
     4a4:	98 13       	cpse	r25, r24
     4a6:	21 e0       	ldi	r18, 0x01	; 1
     4a8:	2a 87       	std	Y+10, r18	; 0x0a
     4aa:	ce 01       	movw	r24, r28
     4ac:	09 96       	adiw	r24, 0x09	; 9
     4ae:	bb c0       	rjmp	.+374    	; 0x626 <__mulsf3+0x1e8>
     4b0:	82 30       	cpi	r24, 0x02	; 2
     4b2:	49 f4       	brne	.+18     	; 0x4c6 <__mulsf3+0x88>
     4b4:	20 e0       	ldi	r18, 0x00	; 0
     4b6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4b8:	8a 89       	ldd	r24, Y+18	; 0x12
     4ba:	98 13       	cpse	r25, r24
     4bc:	21 e0       	ldi	r18, 0x01	; 1
     4be:	2a 8b       	std	Y+18, r18	; 0x12
     4c0:	ce 01       	movw	r24, r28
     4c2:	41 96       	adiw	r24, 0x11	; 17
     4c4:	b0 c0       	rjmp	.+352    	; 0x626 <__mulsf3+0x1e8>
     4c6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4c8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ca:	4f 84       	ldd	r4, Y+15	; 0x0f
     4cc:	58 88       	ldd	r5, Y+16	; 0x10
     4ce:	6d 88       	ldd	r6, Y+21	; 0x15
     4d0:	7e 88       	ldd	r7, Y+22	; 0x16
     4d2:	8f 88       	ldd	r8, Y+23	; 0x17
     4d4:	98 8c       	ldd	r9, Y+24	; 0x18
     4d6:	ee 24       	eor	r14, r14
     4d8:	ff 24       	eor	r15, r15
     4da:	87 01       	movw	r16, r14
     4dc:	aa 24       	eor	r10, r10
     4de:	bb 24       	eor	r11, r11
     4e0:	65 01       	movw	r12, r10
     4e2:	40 e0       	ldi	r20, 0x00	; 0
     4e4:	50 e0       	ldi	r21, 0x00	; 0
     4e6:	60 e0       	ldi	r22, 0x00	; 0
     4e8:	70 e0       	ldi	r23, 0x00	; 0
     4ea:	e0 e0       	ldi	r30, 0x00	; 0
     4ec:	f0 e0       	ldi	r31, 0x00	; 0
     4ee:	c1 01       	movw	r24, r2
     4f0:	81 70       	andi	r24, 0x01	; 1
     4f2:	90 70       	andi	r25, 0x00	; 0
     4f4:	89 2b       	or	r24, r25
     4f6:	e9 f0       	breq	.+58     	; 0x532 <__mulsf3+0xf4>
     4f8:	e6 0c       	add	r14, r6
     4fa:	f7 1c       	adc	r15, r7
     4fc:	08 1d       	adc	r16, r8
     4fe:	19 1d       	adc	r17, r9
     500:	9a 01       	movw	r18, r20
     502:	ab 01       	movw	r20, r22
     504:	2a 0d       	add	r18, r10
     506:	3b 1d       	adc	r19, r11
     508:	4c 1d       	adc	r20, r12
     50a:	5d 1d       	adc	r21, r13
     50c:	80 e0       	ldi	r24, 0x00	; 0
     50e:	90 e0       	ldi	r25, 0x00	; 0
     510:	a0 e0       	ldi	r26, 0x00	; 0
     512:	b0 e0       	ldi	r27, 0x00	; 0
     514:	e6 14       	cp	r14, r6
     516:	f7 04       	cpc	r15, r7
     518:	08 05       	cpc	r16, r8
     51a:	19 05       	cpc	r17, r9
     51c:	20 f4       	brcc	.+8      	; 0x526 <__mulsf3+0xe8>
     51e:	81 e0       	ldi	r24, 0x01	; 1
     520:	90 e0       	ldi	r25, 0x00	; 0
     522:	a0 e0       	ldi	r26, 0x00	; 0
     524:	b0 e0       	ldi	r27, 0x00	; 0
     526:	ba 01       	movw	r22, r20
     528:	a9 01       	movw	r20, r18
     52a:	48 0f       	add	r20, r24
     52c:	59 1f       	adc	r21, r25
     52e:	6a 1f       	adc	r22, r26
     530:	7b 1f       	adc	r23, r27
     532:	aa 0c       	add	r10, r10
     534:	bb 1c       	adc	r11, r11
     536:	cc 1c       	adc	r12, r12
     538:	dd 1c       	adc	r13, r13
     53a:	97 fe       	sbrs	r9, 7
     53c:	08 c0       	rjmp	.+16     	; 0x54e <__mulsf3+0x110>
     53e:	81 e0       	ldi	r24, 0x01	; 1
     540:	90 e0       	ldi	r25, 0x00	; 0
     542:	a0 e0       	ldi	r26, 0x00	; 0
     544:	b0 e0       	ldi	r27, 0x00	; 0
     546:	a8 2a       	or	r10, r24
     548:	b9 2a       	or	r11, r25
     54a:	ca 2a       	or	r12, r26
     54c:	db 2a       	or	r13, r27
     54e:	31 96       	adiw	r30, 0x01	; 1
     550:	e0 32       	cpi	r30, 0x20	; 32
     552:	f1 05       	cpc	r31, r1
     554:	49 f0       	breq	.+18     	; 0x568 <__mulsf3+0x12a>
     556:	66 0c       	add	r6, r6
     558:	77 1c       	adc	r7, r7
     55a:	88 1c       	adc	r8, r8
     55c:	99 1c       	adc	r9, r9
     55e:	56 94       	lsr	r5
     560:	47 94       	ror	r4
     562:	37 94       	ror	r3
     564:	27 94       	ror	r2
     566:	c3 cf       	rjmp	.-122    	; 0x4ee <__mulsf3+0xb0>
     568:	fa 85       	ldd	r31, Y+10	; 0x0a
     56a:	ea 89       	ldd	r30, Y+18	; 0x12
     56c:	2b 89       	ldd	r18, Y+19	; 0x13
     56e:	3c 89       	ldd	r19, Y+20	; 0x14
     570:	8b 85       	ldd	r24, Y+11	; 0x0b
     572:	9c 85       	ldd	r25, Y+12	; 0x0c
     574:	28 0f       	add	r18, r24
     576:	39 1f       	adc	r19, r25
     578:	2e 5f       	subi	r18, 0xFE	; 254
     57a:	3f 4f       	sbci	r19, 0xFF	; 255
     57c:	17 c0       	rjmp	.+46     	; 0x5ac <__mulsf3+0x16e>
     57e:	ca 01       	movw	r24, r20
     580:	81 70       	andi	r24, 0x01	; 1
     582:	90 70       	andi	r25, 0x00	; 0
     584:	89 2b       	or	r24, r25
     586:	61 f0       	breq	.+24     	; 0x5a0 <__mulsf3+0x162>
     588:	16 95       	lsr	r17
     58a:	07 95       	ror	r16
     58c:	f7 94       	ror	r15
     58e:	e7 94       	ror	r14
     590:	80 e0       	ldi	r24, 0x00	; 0
     592:	90 e0       	ldi	r25, 0x00	; 0
     594:	a0 e0       	ldi	r26, 0x00	; 0
     596:	b0 e8       	ldi	r27, 0x80	; 128
     598:	e8 2a       	or	r14, r24
     59a:	f9 2a       	or	r15, r25
     59c:	0a 2b       	or	r16, r26
     59e:	1b 2b       	or	r17, r27
     5a0:	76 95       	lsr	r23
     5a2:	67 95       	ror	r22
     5a4:	57 95       	ror	r21
     5a6:	47 95       	ror	r20
     5a8:	2f 5f       	subi	r18, 0xFF	; 255
     5aa:	3f 4f       	sbci	r19, 0xFF	; 255
     5ac:	77 fd       	sbrc	r23, 7
     5ae:	e7 cf       	rjmp	.-50     	; 0x57e <__mulsf3+0x140>
     5b0:	0c c0       	rjmp	.+24     	; 0x5ca <__mulsf3+0x18c>
     5b2:	44 0f       	add	r20, r20
     5b4:	55 1f       	adc	r21, r21
     5b6:	66 1f       	adc	r22, r22
     5b8:	77 1f       	adc	r23, r23
     5ba:	17 fd       	sbrc	r17, 7
     5bc:	41 60       	ori	r20, 0x01	; 1
     5be:	ee 0c       	add	r14, r14
     5c0:	ff 1c       	adc	r15, r15
     5c2:	00 1f       	adc	r16, r16
     5c4:	11 1f       	adc	r17, r17
     5c6:	21 50       	subi	r18, 0x01	; 1
     5c8:	30 40       	sbci	r19, 0x00	; 0
     5ca:	40 30       	cpi	r20, 0x00	; 0
     5cc:	90 e0       	ldi	r25, 0x00	; 0
     5ce:	59 07       	cpc	r21, r25
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	69 07       	cpc	r22, r25
     5d4:	90 e4       	ldi	r25, 0x40	; 64
     5d6:	79 07       	cpc	r23, r25
     5d8:	60 f3       	brcs	.-40     	; 0x5b2 <__mulsf3+0x174>
     5da:	2b 8f       	std	Y+27, r18	; 0x1b
     5dc:	3c 8f       	std	Y+28, r19	; 0x1c
     5de:	db 01       	movw	r26, r22
     5e0:	ca 01       	movw	r24, r20
     5e2:	8f 77       	andi	r24, 0x7F	; 127
     5e4:	90 70       	andi	r25, 0x00	; 0
     5e6:	a0 70       	andi	r26, 0x00	; 0
     5e8:	b0 70       	andi	r27, 0x00	; 0
     5ea:	80 34       	cpi	r24, 0x40	; 64
     5ec:	91 05       	cpc	r25, r1
     5ee:	a1 05       	cpc	r26, r1
     5f0:	b1 05       	cpc	r27, r1
     5f2:	61 f4       	brne	.+24     	; 0x60c <__mulsf3+0x1ce>
     5f4:	47 fd       	sbrc	r20, 7
     5f6:	0a c0       	rjmp	.+20     	; 0x60c <__mulsf3+0x1ce>
     5f8:	e1 14       	cp	r14, r1
     5fa:	f1 04       	cpc	r15, r1
     5fc:	01 05       	cpc	r16, r1
     5fe:	11 05       	cpc	r17, r1
     600:	29 f0       	breq	.+10     	; 0x60c <__mulsf3+0x1ce>
     602:	40 5c       	subi	r20, 0xC0	; 192
     604:	5f 4f       	sbci	r21, 0xFF	; 255
     606:	6f 4f       	sbci	r22, 0xFF	; 255
     608:	7f 4f       	sbci	r23, 0xFF	; 255
     60a:	40 78       	andi	r20, 0x80	; 128
     60c:	1a 8e       	std	Y+26, r1	; 0x1a
     60e:	fe 17       	cp	r31, r30
     610:	11 f0       	breq	.+4      	; 0x616 <__mulsf3+0x1d8>
     612:	81 e0       	ldi	r24, 0x01	; 1
     614:	8a 8f       	std	Y+26, r24	; 0x1a
     616:	4d 8f       	std	Y+29, r20	; 0x1d
     618:	5e 8f       	std	Y+30, r21	; 0x1e
     61a:	6f 8f       	std	Y+31, r22	; 0x1f
     61c:	78 a3       	std	Y+32, r23	; 0x20
     61e:	83 e0       	ldi	r24, 0x03	; 3
     620:	89 8f       	std	Y+25, r24	; 0x19
     622:	ce 01       	movw	r24, r28
     624:	49 96       	adiw	r24, 0x19	; 25
     626:	0e 94 fd 03 	call	0x7fa	; 0x7fa <__pack_f>
     62a:	a0 96       	adiw	r28, 0x20	; 32
     62c:	e2 e1       	ldi	r30, 0x12	; 18
     62e:	0c 94 9b 0d 	jmp	0x1b36	; 0x1b36 <__epilogue_restores__>

00000632 <__gtsf2>:
     632:	a8 e1       	ldi	r26, 0x18	; 24
     634:	b0 e0       	ldi	r27, 0x00	; 0
     636:	ef e1       	ldi	r30, 0x1F	; 31
     638:	f3 e0       	ldi	r31, 0x03	; 3
     63a:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
     63e:	69 83       	std	Y+1, r22	; 0x01
     640:	7a 83       	std	Y+2, r23	; 0x02
     642:	8b 83       	std	Y+3, r24	; 0x03
     644:	9c 83       	std	Y+4, r25	; 0x04
     646:	2d 83       	std	Y+5, r18	; 0x05
     648:	3e 83       	std	Y+6, r19	; 0x06
     64a:	4f 83       	std	Y+7, r20	; 0x07
     64c:	58 87       	std	Y+8, r21	; 0x08
     64e:	89 e0       	ldi	r24, 0x09	; 9
     650:	e8 2e       	mov	r14, r24
     652:	f1 2c       	mov	r15, r1
     654:	ec 0e       	add	r14, r28
     656:	fd 1e       	adc	r15, r29
     658:	ce 01       	movw	r24, r28
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	b7 01       	movw	r22, r14
     65e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     662:	8e 01       	movw	r16, r28
     664:	0f 5e       	subi	r16, 0xEF	; 239
     666:	1f 4f       	sbci	r17, 0xFF	; 255
     668:	ce 01       	movw	r24, r28
     66a:	05 96       	adiw	r24, 0x05	; 5
     66c:	b8 01       	movw	r22, r16
     66e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	82 30       	cpi	r24, 0x02	; 2
     676:	40 f0       	brcs	.+16     	; 0x688 <__gtsf2+0x56>
     678:	89 89       	ldd	r24, Y+17	; 0x11
     67a:	82 30       	cpi	r24, 0x02	; 2
     67c:	28 f0       	brcs	.+10     	; 0x688 <__gtsf2+0x56>
     67e:	c7 01       	movw	r24, r14
     680:	b8 01       	movw	r22, r16
     682:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     686:	01 c0       	rjmp	.+2      	; 0x68a <__gtsf2+0x58>
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	68 96       	adiw	r28, 0x18	; 24
     68c:	e6 e0       	ldi	r30, 0x06	; 6
     68e:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

00000692 <__gesf2>:
     692:	a8 e1       	ldi	r26, 0x18	; 24
     694:	b0 e0       	ldi	r27, 0x00	; 0
     696:	ef e4       	ldi	r30, 0x4F	; 79
     698:	f3 e0       	ldi	r31, 0x03	; 3
     69a:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
     69e:	69 83       	std	Y+1, r22	; 0x01
     6a0:	7a 83       	std	Y+2, r23	; 0x02
     6a2:	8b 83       	std	Y+3, r24	; 0x03
     6a4:	9c 83       	std	Y+4, r25	; 0x04
     6a6:	2d 83       	std	Y+5, r18	; 0x05
     6a8:	3e 83       	std	Y+6, r19	; 0x06
     6aa:	4f 83       	std	Y+7, r20	; 0x07
     6ac:	58 87       	std	Y+8, r21	; 0x08
     6ae:	89 e0       	ldi	r24, 0x09	; 9
     6b0:	e8 2e       	mov	r14, r24
     6b2:	f1 2c       	mov	r15, r1
     6b4:	ec 0e       	add	r14, r28
     6b6:	fd 1e       	adc	r15, r29
     6b8:	ce 01       	movw	r24, r28
     6ba:	01 96       	adiw	r24, 0x01	; 1
     6bc:	b7 01       	movw	r22, r14
     6be:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6c2:	8e 01       	movw	r16, r28
     6c4:	0f 5e       	subi	r16, 0xEF	; 239
     6c6:	1f 4f       	sbci	r17, 0xFF	; 255
     6c8:	ce 01       	movw	r24, r28
     6ca:	05 96       	adiw	r24, 0x05	; 5
     6cc:	b8 01       	movw	r22, r16
     6ce:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     6d2:	89 85       	ldd	r24, Y+9	; 0x09
     6d4:	82 30       	cpi	r24, 0x02	; 2
     6d6:	40 f0       	brcs	.+16     	; 0x6e8 <__gesf2+0x56>
     6d8:	89 89       	ldd	r24, Y+17	; 0x11
     6da:	82 30       	cpi	r24, 0x02	; 2
     6dc:	28 f0       	brcs	.+10     	; 0x6e8 <__gesf2+0x56>
     6de:	c7 01       	movw	r24, r14
     6e0:	b8 01       	movw	r22, r16
     6e2:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     6e6:	01 c0       	rjmp	.+2      	; 0x6ea <__gesf2+0x58>
     6e8:	8f ef       	ldi	r24, 0xFF	; 255
     6ea:	68 96       	adiw	r28, 0x18	; 24
     6ec:	e6 e0       	ldi	r30, 0x06	; 6
     6ee:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

000006f2 <__ltsf2>:
     6f2:	a8 e1       	ldi	r26, 0x18	; 24
     6f4:	b0 e0       	ldi	r27, 0x00	; 0
     6f6:	ef e7       	ldi	r30, 0x7F	; 127
     6f8:	f3 e0       	ldi	r31, 0x03	; 3
     6fa:	0c 94 8b 0d 	jmp	0x1b16	; 0x1b16 <__prologue_saves__+0x18>
     6fe:	69 83       	std	Y+1, r22	; 0x01
     700:	7a 83       	std	Y+2, r23	; 0x02
     702:	8b 83       	std	Y+3, r24	; 0x03
     704:	9c 83       	std	Y+4, r25	; 0x04
     706:	2d 83       	std	Y+5, r18	; 0x05
     708:	3e 83       	std	Y+6, r19	; 0x06
     70a:	4f 83       	std	Y+7, r20	; 0x07
     70c:	58 87       	std	Y+8, r21	; 0x08
     70e:	89 e0       	ldi	r24, 0x09	; 9
     710:	e8 2e       	mov	r14, r24
     712:	f1 2c       	mov	r15, r1
     714:	ec 0e       	add	r14, r28
     716:	fd 1e       	adc	r15, r29
     718:	ce 01       	movw	r24, r28
     71a:	01 96       	adiw	r24, 0x01	; 1
     71c:	b7 01       	movw	r22, r14
     71e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     722:	8e 01       	movw	r16, r28
     724:	0f 5e       	subi	r16, 0xEF	; 239
     726:	1f 4f       	sbci	r17, 0xFF	; 255
     728:	ce 01       	movw	r24, r28
     72a:	05 96       	adiw	r24, 0x05	; 5
     72c:	b8 01       	movw	r22, r16
     72e:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     732:	89 85       	ldd	r24, Y+9	; 0x09
     734:	82 30       	cpi	r24, 0x02	; 2
     736:	40 f0       	brcs	.+16     	; 0x748 <__ltsf2+0x56>
     738:	89 89       	ldd	r24, Y+17	; 0x11
     73a:	82 30       	cpi	r24, 0x02	; 2
     73c:	28 f0       	brcs	.+10     	; 0x748 <__ltsf2+0x56>
     73e:	c7 01       	movw	r24, r14
     740:	b8 01       	movw	r22, r16
     742:	0e 94 4a 05 	call	0xa94	; 0xa94 <__fpcmp_parts_f>
     746:	01 c0       	rjmp	.+2      	; 0x74a <__ltsf2+0x58>
     748:	81 e0       	ldi	r24, 0x01	; 1
     74a:	68 96       	adiw	r28, 0x18	; 24
     74c:	e6 e0       	ldi	r30, 0x06	; 6
     74e:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__epilogue_restores__+0x18>

00000752 <__fixsfsi>:
     752:	ac e0       	ldi	r26, 0x0C	; 12
     754:	b0 e0       	ldi	r27, 0x00	; 0
     756:	ef ea       	ldi	r30, 0xAF	; 175
     758:	f3 e0       	ldi	r31, 0x03	; 3
     75a:	0c 94 8f 0d 	jmp	0x1b1e	; 0x1b1e <__prologue_saves__+0x20>
     75e:	69 83       	std	Y+1, r22	; 0x01
     760:	7a 83       	std	Y+2, r23	; 0x02
     762:	8b 83       	std	Y+3, r24	; 0x03
     764:	9c 83       	std	Y+4, r25	; 0x04
     766:	ce 01       	movw	r24, r28
     768:	01 96       	adiw	r24, 0x01	; 1
     76a:	be 01       	movw	r22, r28
     76c:	6b 5f       	subi	r22, 0xFB	; 251
     76e:	7f 4f       	sbci	r23, 0xFF	; 255
     770:	0e 94 d2 04 	call	0x9a4	; 0x9a4 <__unpack_f>
     774:	8d 81       	ldd	r24, Y+5	; 0x05
     776:	82 30       	cpi	r24, 0x02	; 2
     778:	61 f1       	breq	.+88     	; 0x7d2 <__fixsfsi+0x80>
     77a:	82 30       	cpi	r24, 0x02	; 2
     77c:	50 f1       	brcs	.+84     	; 0x7d2 <__fixsfsi+0x80>
     77e:	84 30       	cpi	r24, 0x04	; 4
     780:	21 f4       	brne	.+8      	; 0x78a <__fixsfsi+0x38>
     782:	8e 81       	ldd	r24, Y+6	; 0x06
     784:	88 23       	and	r24, r24
     786:	51 f1       	breq	.+84     	; 0x7dc <__fixsfsi+0x8a>
     788:	2e c0       	rjmp	.+92     	; 0x7e6 <__fixsfsi+0x94>
     78a:	2f 81       	ldd	r18, Y+7	; 0x07
     78c:	38 85       	ldd	r19, Y+8	; 0x08
     78e:	37 fd       	sbrc	r19, 7
     790:	20 c0       	rjmp	.+64     	; 0x7d2 <__fixsfsi+0x80>
     792:	6e 81       	ldd	r22, Y+6	; 0x06
     794:	2f 31       	cpi	r18, 0x1F	; 31
     796:	31 05       	cpc	r19, r1
     798:	1c f0       	brlt	.+6      	; 0x7a0 <__fixsfsi+0x4e>
     79a:	66 23       	and	r22, r22
     79c:	f9 f0       	breq	.+62     	; 0x7dc <__fixsfsi+0x8a>
     79e:	23 c0       	rjmp	.+70     	; 0x7e6 <__fixsfsi+0x94>
     7a0:	8e e1       	ldi	r24, 0x1E	; 30
     7a2:	90 e0       	ldi	r25, 0x00	; 0
     7a4:	82 1b       	sub	r24, r18
     7a6:	93 0b       	sbc	r25, r19
     7a8:	29 85       	ldd	r18, Y+9	; 0x09
     7aa:	3a 85       	ldd	r19, Y+10	; 0x0a
     7ac:	4b 85       	ldd	r20, Y+11	; 0x0b
     7ae:	5c 85       	ldd	r21, Y+12	; 0x0c
     7b0:	04 c0       	rjmp	.+8      	; 0x7ba <__fixsfsi+0x68>
     7b2:	56 95       	lsr	r21
     7b4:	47 95       	ror	r20
     7b6:	37 95       	ror	r19
     7b8:	27 95       	ror	r18
     7ba:	8a 95       	dec	r24
     7bc:	d2 f7       	brpl	.-12     	; 0x7b2 <__fixsfsi+0x60>
     7be:	66 23       	and	r22, r22
     7c0:	b1 f0       	breq	.+44     	; 0x7ee <__fixsfsi+0x9c>
     7c2:	50 95       	com	r21
     7c4:	40 95       	com	r20
     7c6:	30 95       	com	r19
     7c8:	21 95       	neg	r18
     7ca:	3f 4f       	sbci	r19, 0xFF	; 255
     7cc:	4f 4f       	sbci	r20, 0xFF	; 255
     7ce:	5f 4f       	sbci	r21, 0xFF	; 255
     7d0:	0e c0       	rjmp	.+28     	; 0x7ee <__fixsfsi+0x9c>
     7d2:	20 e0       	ldi	r18, 0x00	; 0
     7d4:	30 e0       	ldi	r19, 0x00	; 0
     7d6:	40 e0       	ldi	r20, 0x00	; 0
     7d8:	50 e0       	ldi	r21, 0x00	; 0
     7da:	09 c0       	rjmp	.+18     	; 0x7ee <__fixsfsi+0x9c>
     7dc:	2f ef       	ldi	r18, 0xFF	; 255
     7de:	3f ef       	ldi	r19, 0xFF	; 255
     7e0:	4f ef       	ldi	r20, 0xFF	; 255
     7e2:	5f e7       	ldi	r21, 0x7F	; 127
     7e4:	04 c0       	rjmp	.+8      	; 0x7ee <__fixsfsi+0x9c>
     7e6:	20 e0       	ldi	r18, 0x00	; 0
     7e8:	30 e0       	ldi	r19, 0x00	; 0
     7ea:	40 e0       	ldi	r20, 0x00	; 0
     7ec:	50 e8       	ldi	r21, 0x80	; 128
     7ee:	b9 01       	movw	r22, r18
     7f0:	ca 01       	movw	r24, r20
     7f2:	2c 96       	adiw	r28, 0x0c	; 12
     7f4:	e2 e0       	ldi	r30, 0x02	; 2
     7f6:	0c 94 ab 0d 	jmp	0x1b56	; 0x1b56 <__epilogue_restores__+0x20>

000007fa <__pack_f>:
     7fa:	df 92       	push	r13
     7fc:	ef 92       	push	r14
     7fe:	ff 92       	push	r15
     800:	0f 93       	push	r16
     802:	1f 93       	push	r17
     804:	fc 01       	movw	r30, r24
     806:	e4 80       	ldd	r14, Z+4	; 0x04
     808:	f5 80       	ldd	r15, Z+5	; 0x05
     80a:	06 81       	ldd	r16, Z+6	; 0x06
     80c:	17 81       	ldd	r17, Z+7	; 0x07
     80e:	d1 80       	ldd	r13, Z+1	; 0x01
     810:	80 81       	ld	r24, Z
     812:	82 30       	cpi	r24, 0x02	; 2
     814:	48 f4       	brcc	.+18     	; 0x828 <__pack_f+0x2e>
     816:	80 e0       	ldi	r24, 0x00	; 0
     818:	90 e0       	ldi	r25, 0x00	; 0
     81a:	a0 e1       	ldi	r26, 0x10	; 16
     81c:	b0 e0       	ldi	r27, 0x00	; 0
     81e:	e8 2a       	or	r14, r24
     820:	f9 2a       	or	r15, r25
     822:	0a 2b       	or	r16, r26
     824:	1b 2b       	or	r17, r27
     826:	a5 c0       	rjmp	.+330    	; 0x972 <__stack+0x113>
     828:	84 30       	cpi	r24, 0x04	; 4
     82a:	09 f4       	brne	.+2      	; 0x82e <__pack_f+0x34>
     82c:	9f c0       	rjmp	.+318    	; 0x96c <__stack+0x10d>
     82e:	82 30       	cpi	r24, 0x02	; 2
     830:	21 f4       	brne	.+8      	; 0x83a <__pack_f+0x40>
     832:	ee 24       	eor	r14, r14
     834:	ff 24       	eor	r15, r15
     836:	87 01       	movw	r16, r14
     838:	05 c0       	rjmp	.+10     	; 0x844 <__pack_f+0x4a>
     83a:	e1 14       	cp	r14, r1
     83c:	f1 04       	cpc	r15, r1
     83e:	01 05       	cpc	r16, r1
     840:	11 05       	cpc	r17, r1
     842:	19 f4       	brne	.+6      	; 0x84a <__pack_f+0x50>
     844:	e0 e0       	ldi	r30, 0x00	; 0
     846:	f0 e0       	ldi	r31, 0x00	; 0
     848:	96 c0       	rjmp	.+300    	; 0x976 <__stack+0x117>
     84a:	62 81       	ldd	r22, Z+2	; 0x02
     84c:	73 81       	ldd	r23, Z+3	; 0x03
     84e:	9f ef       	ldi	r25, 0xFF	; 255
     850:	62 38       	cpi	r22, 0x82	; 130
     852:	79 07       	cpc	r23, r25
     854:	0c f0       	brlt	.+2      	; 0x858 <__pack_f+0x5e>
     856:	5b c0       	rjmp	.+182    	; 0x90e <__stack+0xaf>
     858:	22 e8       	ldi	r18, 0x82	; 130
     85a:	3f ef       	ldi	r19, 0xFF	; 255
     85c:	26 1b       	sub	r18, r22
     85e:	37 0b       	sbc	r19, r23
     860:	2a 31       	cpi	r18, 0x1A	; 26
     862:	31 05       	cpc	r19, r1
     864:	2c f0       	brlt	.+10     	; 0x870 <__stack+0x11>
     866:	20 e0       	ldi	r18, 0x00	; 0
     868:	30 e0       	ldi	r19, 0x00	; 0
     86a:	40 e0       	ldi	r20, 0x00	; 0
     86c:	50 e0       	ldi	r21, 0x00	; 0
     86e:	2a c0       	rjmp	.+84     	; 0x8c4 <__stack+0x65>
     870:	b8 01       	movw	r22, r16
     872:	a7 01       	movw	r20, r14
     874:	02 2e       	mov	r0, r18
     876:	04 c0       	rjmp	.+8      	; 0x880 <__stack+0x21>
     878:	76 95       	lsr	r23
     87a:	67 95       	ror	r22
     87c:	57 95       	ror	r21
     87e:	47 95       	ror	r20
     880:	0a 94       	dec	r0
     882:	d2 f7       	brpl	.-12     	; 0x878 <__stack+0x19>
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	a0 e0       	ldi	r26, 0x00	; 0
     88a:	b0 e0       	ldi	r27, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <__stack+0x37>
     88e:	88 0f       	add	r24, r24
     890:	99 1f       	adc	r25, r25
     892:	aa 1f       	adc	r26, r26
     894:	bb 1f       	adc	r27, r27
     896:	2a 95       	dec	r18
     898:	d2 f7       	brpl	.-12     	; 0x88e <__stack+0x2f>
     89a:	01 97       	sbiw	r24, 0x01	; 1
     89c:	a1 09       	sbc	r26, r1
     89e:	b1 09       	sbc	r27, r1
     8a0:	8e 21       	and	r24, r14
     8a2:	9f 21       	and	r25, r15
     8a4:	a0 23       	and	r26, r16
     8a6:	b1 23       	and	r27, r17
     8a8:	00 97       	sbiw	r24, 0x00	; 0
     8aa:	a1 05       	cpc	r26, r1
     8ac:	b1 05       	cpc	r27, r1
     8ae:	21 f0       	breq	.+8      	; 0x8b8 <__stack+0x59>
     8b0:	81 e0       	ldi	r24, 0x01	; 1
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	a0 e0       	ldi	r26, 0x00	; 0
     8b6:	b0 e0       	ldi	r27, 0x00	; 0
     8b8:	9a 01       	movw	r18, r20
     8ba:	ab 01       	movw	r20, r22
     8bc:	28 2b       	or	r18, r24
     8be:	39 2b       	or	r19, r25
     8c0:	4a 2b       	or	r20, r26
     8c2:	5b 2b       	or	r21, r27
     8c4:	da 01       	movw	r26, r20
     8c6:	c9 01       	movw	r24, r18
     8c8:	8f 77       	andi	r24, 0x7F	; 127
     8ca:	90 70       	andi	r25, 0x00	; 0
     8cc:	a0 70       	andi	r26, 0x00	; 0
     8ce:	b0 70       	andi	r27, 0x00	; 0
     8d0:	80 34       	cpi	r24, 0x40	; 64
     8d2:	91 05       	cpc	r25, r1
     8d4:	a1 05       	cpc	r26, r1
     8d6:	b1 05       	cpc	r27, r1
     8d8:	39 f4       	brne	.+14     	; 0x8e8 <__stack+0x89>
     8da:	27 ff       	sbrs	r18, 7
     8dc:	09 c0       	rjmp	.+18     	; 0x8f0 <__stack+0x91>
     8de:	20 5c       	subi	r18, 0xC0	; 192
     8e0:	3f 4f       	sbci	r19, 0xFF	; 255
     8e2:	4f 4f       	sbci	r20, 0xFF	; 255
     8e4:	5f 4f       	sbci	r21, 0xFF	; 255
     8e6:	04 c0       	rjmp	.+8      	; 0x8f0 <__stack+0x91>
     8e8:	21 5c       	subi	r18, 0xC1	; 193
     8ea:	3f 4f       	sbci	r19, 0xFF	; 255
     8ec:	4f 4f       	sbci	r20, 0xFF	; 255
     8ee:	5f 4f       	sbci	r21, 0xFF	; 255
     8f0:	e0 e0       	ldi	r30, 0x00	; 0
     8f2:	f0 e0       	ldi	r31, 0x00	; 0
     8f4:	20 30       	cpi	r18, 0x00	; 0
     8f6:	a0 e0       	ldi	r26, 0x00	; 0
     8f8:	3a 07       	cpc	r19, r26
     8fa:	a0 e0       	ldi	r26, 0x00	; 0
     8fc:	4a 07       	cpc	r20, r26
     8fe:	a0 e4       	ldi	r26, 0x40	; 64
     900:	5a 07       	cpc	r21, r26
     902:	10 f0       	brcs	.+4      	; 0x908 <__stack+0xa9>
     904:	e1 e0       	ldi	r30, 0x01	; 1
     906:	f0 e0       	ldi	r31, 0x00	; 0
     908:	79 01       	movw	r14, r18
     90a:	8a 01       	movw	r16, r20
     90c:	27 c0       	rjmp	.+78     	; 0x95c <__stack+0xfd>
     90e:	60 38       	cpi	r22, 0x80	; 128
     910:	71 05       	cpc	r23, r1
     912:	64 f5       	brge	.+88     	; 0x96c <__stack+0x10d>
     914:	fb 01       	movw	r30, r22
     916:	e1 58       	subi	r30, 0x81	; 129
     918:	ff 4f       	sbci	r31, 0xFF	; 255
     91a:	d8 01       	movw	r26, r16
     91c:	c7 01       	movw	r24, r14
     91e:	8f 77       	andi	r24, 0x7F	; 127
     920:	90 70       	andi	r25, 0x00	; 0
     922:	a0 70       	andi	r26, 0x00	; 0
     924:	b0 70       	andi	r27, 0x00	; 0
     926:	80 34       	cpi	r24, 0x40	; 64
     928:	91 05       	cpc	r25, r1
     92a:	a1 05       	cpc	r26, r1
     92c:	b1 05       	cpc	r27, r1
     92e:	39 f4       	brne	.+14     	; 0x93e <__stack+0xdf>
     930:	e7 fe       	sbrs	r14, 7
     932:	0d c0       	rjmp	.+26     	; 0x94e <__stack+0xef>
     934:	80 e4       	ldi	r24, 0x40	; 64
     936:	90 e0       	ldi	r25, 0x00	; 0
     938:	a0 e0       	ldi	r26, 0x00	; 0
     93a:	b0 e0       	ldi	r27, 0x00	; 0
     93c:	04 c0       	rjmp	.+8      	; 0x946 <__stack+0xe7>
     93e:	8f e3       	ldi	r24, 0x3F	; 63
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	a0 e0       	ldi	r26, 0x00	; 0
     944:	b0 e0       	ldi	r27, 0x00	; 0
     946:	e8 0e       	add	r14, r24
     948:	f9 1e       	adc	r15, r25
     94a:	0a 1f       	adc	r16, r26
     94c:	1b 1f       	adc	r17, r27
     94e:	17 ff       	sbrs	r17, 7
     950:	05 c0       	rjmp	.+10     	; 0x95c <__stack+0xfd>
     952:	16 95       	lsr	r17
     954:	07 95       	ror	r16
     956:	f7 94       	ror	r15
     958:	e7 94       	ror	r14
     95a:	31 96       	adiw	r30, 0x01	; 1
     95c:	87 e0       	ldi	r24, 0x07	; 7
     95e:	16 95       	lsr	r17
     960:	07 95       	ror	r16
     962:	f7 94       	ror	r15
     964:	e7 94       	ror	r14
     966:	8a 95       	dec	r24
     968:	d1 f7       	brne	.-12     	; 0x95e <__stack+0xff>
     96a:	05 c0       	rjmp	.+10     	; 0x976 <__stack+0x117>
     96c:	ee 24       	eor	r14, r14
     96e:	ff 24       	eor	r15, r15
     970:	87 01       	movw	r16, r14
     972:	ef ef       	ldi	r30, 0xFF	; 255
     974:	f0 e0       	ldi	r31, 0x00	; 0
     976:	6e 2f       	mov	r22, r30
     978:	67 95       	ror	r22
     97a:	66 27       	eor	r22, r22
     97c:	67 95       	ror	r22
     97e:	90 2f       	mov	r25, r16
     980:	9f 77       	andi	r25, 0x7F	; 127
     982:	d7 94       	ror	r13
     984:	dd 24       	eor	r13, r13
     986:	d7 94       	ror	r13
     988:	8e 2f       	mov	r24, r30
     98a:	86 95       	lsr	r24
     98c:	49 2f       	mov	r20, r25
     98e:	46 2b       	or	r20, r22
     990:	58 2f       	mov	r21, r24
     992:	5d 29       	or	r21, r13
     994:	b7 01       	movw	r22, r14
     996:	ca 01       	movw	r24, r20
     998:	1f 91       	pop	r17
     99a:	0f 91       	pop	r16
     99c:	ff 90       	pop	r15
     99e:	ef 90       	pop	r14
     9a0:	df 90       	pop	r13
     9a2:	08 95       	ret

000009a4 <__unpack_f>:
     9a4:	fc 01       	movw	r30, r24
     9a6:	db 01       	movw	r26, r22
     9a8:	40 81       	ld	r20, Z
     9aa:	51 81       	ldd	r21, Z+1	; 0x01
     9ac:	22 81       	ldd	r18, Z+2	; 0x02
     9ae:	62 2f       	mov	r22, r18
     9b0:	6f 77       	andi	r22, 0x7F	; 127
     9b2:	70 e0       	ldi	r23, 0x00	; 0
     9b4:	22 1f       	adc	r18, r18
     9b6:	22 27       	eor	r18, r18
     9b8:	22 1f       	adc	r18, r18
     9ba:	93 81       	ldd	r25, Z+3	; 0x03
     9bc:	89 2f       	mov	r24, r25
     9be:	88 0f       	add	r24, r24
     9c0:	82 2b       	or	r24, r18
     9c2:	28 2f       	mov	r18, r24
     9c4:	30 e0       	ldi	r19, 0x00	; 0
     9c6:	99 1f       	adc	r25, r25
     9c8:	99 27       	eor	r25, r25
     9ca:	99 1f       	adc	r25, r25
     9cc:	11 96       	adiw	r26, 0x01	; 1
     9ce:	9c 93       	st	X, r25
     9d0:	11 97       	sbiw	r26, 0x01	; 1
     9d2:	21 15       	cp	r18, r1
     9d4:	31 05       	cpc	r19, r1
     9d6:	a9 f5       	brne	.+106    	; 0xa42 <__unpack_f+0x9e>
     9d8:	41 15       	cp	r20, r1
     9da:	51 05       	cpc	r21, r1
     9dc:	61 05       	cpc	r22, r1
     9de:	71 05       	cpc	r23, r1
     9e0:	11 f4       	brne	.+4      	; 0x9e6 <__unpack_f+0x42>
     9e2:	82 e0       	ldi	r24, 0x02	; 2
     9e4:	37 c0       	rjmp	.+110    	; 0xa54 <__unpack_f+0xb0>
     9e6:	82 e8       	ldi	r24, 0x82	; 130
     9e8:	9f ef       	ldi	r25, 0xFF	; 255
     9ea:	13 96       	adiw	r26, 0x03	; 3
     9ec:	9c 93       	st	X, r25
     9ee:	8e 93       	st	-X, r24
     9f0:	12 97       	sbiw	r26, 0x02	; 2
     9f2:	9a 01       	movw	r18, r20
     9f4:	ab 01       	movw	r20, r22
     9f6:	67 e0       	ldi	r22, 0x07	; 7
     9f8:	22 0f       	add	r18, r18
     9fa:	33 1f       	adc	r19, r19
     9fc:	44 1f       	adc	r20, r20
     9fe:	55 1f       	adc	r21, r21
     a00:	6a 95       	dec	r22
     a02:	d1 f7       	brne	.-12     	; 0x9f8 <__unpack_f+0x54>
     a04:	83 e0       	ldi	r24, 0x03	; 3
     a06:	8c 93       	st	X, r24
     a08:	0d c0       	rjmp	.+26     	; 0xa24 <__unpack_f+0x80>
     a0a:	22 0f       	add	r18, r18
     a0c:	33 1f       	adc	r19, r19
     a0e:	44 1f       	adc	r20, r20
     a10:	55 1f       	adc	r21, r21
     a12:	12 96       	adiw	r26, 0x02	; 2
     a14:	8d 91       	ld	r24, X+
     a16:	9c 91       	ld	r25, X
     a18:	13 97       	sbiw	r26, 0x03	; 3
     a1a:	01 97       	sbiw	r24, 0x01	; 1
     a1c:	13 96       	adiw	r26, 0x03	; 3
     a1e:	9c 93       	st	X, r25
     a20:	8e 93       	st	-X, r24
     a22:	12 97       	sbiw	r26, 0x02	; 2
     a24:	20 30       	cpi	r18, 0x00	; 0
     a26:	80 e0       	ldi	r24, 0x00	; 0
     a28:	38 07       	cpc	r19, r24
     a2a:	80 e0       	ldi	r24, 0x00	; 0
     a2c:	48 07       	cpc	r20, r24
     a2e:	80 e4       	ldi	r24, 0x40	; 64
     a30:	58 07       	cpc	r21, r24
     a32:	58 f3       	brcs	.-42     	; 0xa0a <__unpack_f+0x66>
     a34:	14 96       	adiw	r26, 0x04	; 4
     a36:	2d 93       	st	X+, r18
     a38:	3d 93       	st	X+, r19
     a3a:	4d 93       	st	X+, r20
     a3c:	5c 93       	st	X, r21
     a3e:	17 97       	sbiw	r26, 0x07	; 7
     a40:	08 95       	ret
     a42:	2f 3f       	cpi	r18, 0xFF	; 255
     a44:	31 05       	cpc	r19, r1
     a46:	79 f4       	brne	.+30     	; 0xa66 <__unpack_f+0xc2>
     a48:	41 15       	cp	r20, r1
     a4a:	51 05       	cpc	r21, r1
     a4c:	61 05       	cpc	r22, r1
     a4e:	71 05       	cpc	r23, r1
     a50:	19 f4       	brne	.+6      	; 0xa58 <__unpack_f+0xb4>
     a52:	84 e0       	ldi	r24, 0x04	; 4
     a54:	8c 93       	st	X, r24
     a56:	08 95       	ret
     a58:	64 ff       	sbrs	r22, 4
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__unpack_f+0xbe>
     a5c:	81 e0       	ldi	r24, 0x01	; 1
     a5e:	8c 93       	st	X, r24
     a60:	12 c0       	rjmp	.+36     	; 0xa86 <__unpack_f+0xe2>
     a62:	1c 92       	st	X, r1
     a64:	10 c0       	rjmp	.+32     	; 0xa86 <__unpack_f+0xe2>
     a66:	2f 57       	subi	r18, 0x7F	; 127
     a68:	30 40       	sbci	r19, 0x00	; 0
     a6a:	13 96       	adiw	r26, 0x03	; 3
     a6c:	3c 93       	st	X, r19
     a6e:	2e 93       	st	-X, r18
     a70:	12 97       	sbiw	r26, 0x02	; 2
     a72:	83 e0       	ldi	r24, 0x03	; 3
     a74:	8c 93       	st	X, r24
     a76:	87 e0       	ldi	r24, 0x07	; 7
     a78:	44 0f       	add	r20, r20
     a7a:	55 1f       	adc	r21, r21
     a7c:	66 1f       	adc	r22, r22
     a7e:	77 1f       	adc	r23, r23
     a80:	8a 95       	dec	r24
     a82:	d1 f7       	brne	.-12     	; 0xa78 <__unpack_f+0xd4>
     a84:	70 64       	ori	r23, 0x40	; 64
     a86:	14 96       	adiw	r26, 0x04	; 4
     a88:	4d 93       	st	X+, r20
     a8a:	5d 93       	st	X+, r21
     a8c:	6d 93       	st	X+, r22
     a8e:	7c 93       	st	X, r23
     a90:	17 97       	sbiw	r26, 0x07	; 7
     a92:	08 95       	ret

00000a94 <__fpcmp_parts_f>:
     a94:	1f 93       	push	r17
     a96:	dc 01       	movw	r26, r24
     a98:	fb 01       	movw	r30, r22
     a9a:	9c 91       	ld	r25, X
     a9c:	92 30       	cpi	r25, 0x02	; 2
     a9e:	08 f4       	brcc	.+2      	; 0xaa2 <__fpcmp_parts_f+0xe>
     aa0:	47 c0       	rjmp	.+142    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aa2:	80 81       	ld	r24, Z
     aa4:	82 30       	cpi	r24, 0x02	; 2
     aa6:	08 f4       	brcc	.+2      	; 0xaaa <__fpcmp_parts_f+0x16>
     aa8:	43 c0       	rjmp	.+134    	; 0xb30 <__fpcmp_parts_f+0x9c>
     aaa:	94 30       	cpi	r25, 0x04	; 4
     aac:	51 f4       	brne	.+20     	; 0xac2 <__fpcmp_parts_f+0x2e>
     aae:	11 96       	adiw	r26, 0x01	; 1
     ab0:	1c 91       	ld	r17, X
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	99 f5       	brne	.+102    	; 0xb1c <__fpcmp_parts_f+0x88>
     ab6:	81 81       	ldd	r24, Z+1	; 0x01
     ab8:	68 2f       	mov	r22, r24
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	61 1b       	sub	r22, r17
     abe:	71 09       	sbc	r23, r1
     ac0:	3f c0       	rjmp	.+126    	; 0xb40 <__fpcmp_parts_f+0xac>
     ac2:	84 30       	cpi	r24, 0x04	; 4
     ac4:	21 f0       	breq	.+8      	; 0xace <__fpcmp_parts_f+0x3a>
     ac6:	92 30       	cpi	r25, 0x02	; 2
     ac8:	31 f4       	brne	.+12     	; 0xad6 <__fpcmp_parts_f+0x42>
     aca:	82 30       	cpi	r24, 0x02	; 2
     acc:	b9 f1       	breq	.+110    	; 0xb3c <__fpcmp_parts_f+0xa8>
     ace:	81 81       	ldd	r24, Z+1	; 0x01
     ad0:	88 23       	and	r24, r24
     ad2:	89 f1       	breq	.+98     	; 0xb36 <__fpcmp_parts_f+0xa2>
     ad4:	2d c0       	rjmp	.+90     	; 0xb30 <__fpcmp_parts_f+0x9c>
     ad6:	11 96       	adiw	r26, 0x01	; 1
     ad8:	1c 91       	ld	r17, X
     ada:	11 97       	sbiw	r26, 0x01	; 1
     adc:	82 30       	cpi	r24, 0x02	; 2
     ade:	f1 f0       	breq	.+60     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae0:	81 81       	ldd	r24, Z+1	; 0x01
     ae2:	18 17       	cp	r17, r24
     ae4:	d9 f4       	brne	.+54     	; 0xb1c <__fpcmp_parts_f+0x88>
     ae6:	12 96       	adiw	r26, 0x02	; 2
     ae8:	2d 91       	ld	r18, X+
     aea:	3c 91       	ld	r19, X
     aec:	13 97       	sbiw	r26, 0x03	; 3
     aee:	82 81       	ldd	r24, Z+2	; 0x02
     af0:	93 81       	ldd	r25, Z+3	; 0x03
     af2:	82 17       	cp	r24, r18
     af4:	93 07       	cpc	r25, r19
     af6:	94 f0       	brlt	.+36     	; 0xb1c <__fpcmp_parts_f+0x88>
     af8:	28 17       	cp	r18, r24
     afa:	39 07       	cpc	r19, r25
     afc:	bc f0       	brlt	.+46     	; 0xb2c <__fpcmp_parts_f+0x98>
     afe:	14 96       	adiw	r26, 0x04	; 4
     b00:	8d 91       	ld	r24, X+
     b02:	9d 91       	ld	r25, X+
     b04:	0d 90       	ld	r0, X+
     b06:	bc 91       	ld	r27, X
     b08:	a0 2d       	mov	r26, r0
     b0a:	24 81       	ldd	r18, Z+4	; 0x04
     b0c:	35 81       	ldd	r19, Z+5	; 0x05
     b0e:	46 81       	ldd	r20, Z+6	; 0x06
     b10:	57 81       	ldd	r21, Z+7	; 0x07
     b12:	28 17       	cp	r18, r24
     b14:	39 07       	cpc	r19, r25
     b16:	4a 07       	cpc	r20, r26
     b18:	5b 07       	cpc	r21, r27
     b1a:	18 f4       	brcc	.+6      	; 0xb22 <__fpcmp_parts_f+0x8e>
     b1c:	11 23       	and	r17, r17
     b1e:	41 f0       	breq	.+16     	; 0xb30 <__fpcmp_parts_f+0x9c>
     b20:	0a c0       	rjmp	.+20     	; 0xb36 <__fpcmp_parts_f+0xa2>
     b22:	82 17       	cp	r24, r18
     b24:	93 07       	cpc	r25, r19
     b26:	a4 07       	cpc	r26, r20
     b28:	b5 07       	cpc	r27, r21
     b2a:	40 f4       	brcc	.+16     	; 0xb3c <__fpcmp_parts_f+0xa8>
     b2c:	11 23       	and	r17, r17
     b2e:	19 f0       	breq	.+6      	; 0xb36 <__fpcmp_parts_f+0xa2>
     b30:	61 e0       	ldi	r22, 0x01	; 1
     b32:	70 e0       	ldi	r23, 0x00	; 0
     b34:	05 c0       	rjmp	.+10     	; 0xb40 <__fpcmp_parts_f+0xac>
     b36:	6f ef       	ldi	r22, 0xFF	; 255
     b38:	7f ef       	ldi	r23, 0xFF	; 255
     b3a:	02 c0       	rjmp	.+4      	; 0xb40 <__fpcmp_parts_f+0xac>
     b3c:	60 e0       	ldi	r22, 0x00	; 0
     b3e:	70 e0       	ldi	r23, 0x00	; 0
     b40:	cb 01       	movw	r24, r22
     b42:	1f 91       	pop	r17
     b44:	08 95       	ret

00000b46 <CLCD_VidSendCommand>:
#include "DIO_interface.h"
#include "CLCD_config.h"
#include"avr/delay.h"


void CLCD_VidSendCommand(u8 Copy_u8Command){
     b46:	df 93       	push	r29
     b48:	cf 93       	push	r28
     b4a:	cd b7       	in	r28, 0x3d	; 61
     b4c:	de b7       	in	r29, 0x3e	; 62
     b4e:	2f 97       	sbiw	r28, 0x0f	; 15
     b50:	0f b6       	in	r0, 0x3f	; 63
     b52:	f8 94       	cli
     b54:	de bf       	out	0x3e, r29	; 62
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	cd bf       	out	0x3d, r28	; 61
     b5a:	8f 87       	std	Y+15, r24	; 0x0f
	/*Set RS pin as low*/
	DIO_VidSetPinValue(CLCD_CTRL_PORT,low,CLCD_RS_PIN);
     b5c:	82 e0       	ldi	r24, 0x02	; 2
     b5e:	60 e0       	ldi	r22, 0x00	; 0
     b60:	40 e0       	ldi	r20, 0x00	; 0
     b62:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>

	/*Set RW pin as low to write*/
	DIO_VidSetPinValue(CLCD_CTRL_PORT,low,CLCD_RW_PIN);
     b66:	82 e0       	ldi	r24, 0x02	; 2
     b68:	60 e0       	ldi	r22, 0x00	; 0
     b6a:	41 e0       	ldi	r20, 0x01	; 1
     b6c:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>
	/*Send command to data pin D0 to D7*/
	DIO_VidSetPortValue(CLCD_DATA_PORT,Copy_u8Command);
     b70:	84 e0       	ldi	r24, 0x04	; 4
     b72:	6f 85       	ldd	r22, Y+15	; 0x0f
     b74:	0e 94 ad 0a 	call	0x155a	; 0x155a <DIO_VidSetPortValue>

	/*Set Enable Pin */
	DIO_VidSetPinValue(CLCD_CTRL_PORT,high,CLCD_E_PIN);
     b78:	82 e0       	ldi	r24, 0x02	; 2
     b7a:	61 e0       	ldi	r22, 0x01	; 1
     b7c:	42 e0       	ldi	r20, 0x02	; 2
     b7e:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>
     b82:	80 e0       	ldi	r24, 0x00	; 0
     b84:	90 e0       	ldi	r25, 0x00	; 0
     b86:	a0 e4       	ldi	r26, 0x40	; 64
     b88:	b0 e4       	ldi	r27, 0x40	; 64
     b8a:	8b 87       	std	Y+11, r24	; 0x0b
     b8c:	9c 87       	std	Y+12, r25	; 0x0c
     b8e:	ad 87       	std	Y+13, r26	; 0x0d
     b90:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     b92:	6b 85       	ldd	r22, Y+11	; 0x0b
     b94:	7c 85       	ldd	r23, Y+12	; 0x0c
     b96:	8d 85       	ldd	r24, Y+13	; 0x0d
     b98:	9e 85       	ldd	r25, Y+14	; 0x0e
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	4a ef       	ldi	r20, 0xFA	; 250
     ba0:	54 e4       	ldi	r21, 0x44	; 68
     ba2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ba6:	dc 01       	movw	r26, r24
     ba8:	cb 01       	movw	r24, r22
     baa:	8f 83       	std	Y+7, r24	; 0x07
     bac:	98 87       	std	Y+8, r25	; 0x08
     bae:	a9 87       	std	Y+9, r26	; 0x09
     bb0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     bb2:	6f 81       	ldd	r22, Y+7	; 0x07
     bb4:	78 85       	ldd	r23, Y+8	; 0x08
     bb6:	89 85       	ldd	r24, Y+9	; 0x09
     bb8:	9a 85       	ldd	r25, Y+10	; 0x0a
     bba:	20 e0       	ldi	r18, 0x00	; 0
     bbc:	30 e0       	ldi	r19, 0x00	; 0
     bbe:	40 e8       	ldi	r20, 0x80	; 128
     bc0:	5f e3       	ldi	r21, 0x3F	; 63
     bc2:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     bc6:	88 23       	and	r24, r24
     bc8:	2c f4       	brge	.+10     	; 0xbd4 <CLCD_VidSendCommand+0x8e>
		__ticks = 1;
     bca:	81 e0       	ldi	r24, 0x01	; 1
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	9e 83       	std	Y+6, r25	; 0x06
     bd0:	8d 83       	std	Y+5, r24	; 0x05
     bd2:	3f c0       	rjmp	.+126    	; 0xc52 <CLCD_VidSendCommand+0x10c>
	else if (__tmp > 65535)
     bd4:	6f 81       	ldd	r22, Y+7	; 0x07
     bd6:	78 85       	ldd	r23, Y+8	; 0x08
     bd8:	89 85       	ldd	r24, Y+9	; 0x09
     bda:	9a 85       	ldd	r25, Y+10	; 0x0a
     bdc:	20 e0       	ldi	r18, 0x00	; 0
     bde:	3f ef       	ldi	r19, 0xFF	; 255
     be0:	4f e7       	ldi	r20, 0x7F	; 127
     be2:	57 e4       	ldi	r21, 0x47	; 71
     be4:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     be8:	18 16       	cp	r1, r24
     bea:	4c f5       	brge	.+82     	; 0xc3e <CLCD_VidSendCommand+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     bec:	6b 85       	ldd	r22, Y+11	; 0x0b
     bee:	7c 85       	ldd	r23, Y+12	; 0x0c
     bf0:	8d 85       	ldd	r24, Y+13	; 0x0d
     bf2:	9e 85       	ldd	r25, Y+14	; 0x0e
     bf4:	20 e0       	ldi	r18, 0x00	; 0
     bf6:	30 e0       	ldi	r19, 0x00	; 0
     bf8:	40 e2       	ldi	r20, 0x20	; 32
     bfa:	51 e4       	ldi	r21, 0x41	; 65
     bfc:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     c00:	dc 01       	movw	r26, r24
     c02:	cb 01       	movw	r24, r22
     c04:	bc 01       	movw	r22, r24
     c06:	cd 01       	movw	r24, r26
     c08:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c0c:	dc 01       	movw	r26, r24
     c0e:	cb 01       	movw	r24, r22
     c10:	9e 83       	std	Y+6, r25	; 0x06
     c12:	8d 83       	std	Y+5, r24	; 0x05
     c14:	0f c0       	rjmp	.+30     	; 0xc34 <CLCD_VidSendCommand+0xee>
     c16:	88 ec       	ldi	r24, 0xC8	; 200
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	9c 83       	std	Y+4, r25	; 0x04
     c1c:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     c1e:	8b 81       	ldd	r24, Y+3	; 0x03
     c20:	9c 81       	ldd	r25, Y+4	; 0x04
     c22:	01 97       	sbiw	r24, 0x01	; 1
     c24:	f1 f7       	brne	.-4      	; 0xc22 <CLCD_VidSendCommand+0xdc>
     c26:	9c 83       	std	Y+4, r25	; 0x04
     c28:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     c2a:	8d 81       	ldd	r24, Y+5	; 0x05
     c2c:	9e 81       	ldd	r25, Y+6	; 0x06
     c2e:	01 97       	sbiw	r24, 0x01	; 1
     c30:	9e 83       	std	Y+6, r25	; 0x06
     c32:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     c34:	8d 81       	ldd	r24, Y+5	; 0x05
     c36:	9e 81       	ldd	r25, Y+6	; 0x06
     c38:	00 97       	sbiw	r24, 0x00	; 0
     c3a:	69 f7       	brne	.-38     	; 0xc16 <CLCD_VidSendCommand+0xd0>
     c3c:	14 c0       	rjmp	.+40     	; 0xc66 <CLCD_VidSendCommand+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     c3e:	6f 81       	ldd	r22, Y+7	; 0x07
     c40:	78 85       	ldd	r23, Y+8	; 0x08
     c42:	89 85       	ldd	r24, Y+9	; 0x09
     c44:	9a 85       	ldd	r25, Y+10	; 0x0a
     c46:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     c4a:	dc 01       	movw	r26, r24
     c4c:	cb 01       	movw	r24, r22
     c4e:	9e 83       	std	Y+6, r25	; 0x06
     c50:	8d 83       	std	Y+5, r24	; 0x05
     c52:	8d 81       	ldd	r24, Y+5	; 0x05
     c54:	9e 81       	ldd	r25, Y+6	; 0x06
     c56:	9a 83       	std	Y+2, r25	; 0x02
     c58:	89 83       	std	Y+1, r24	; 0x01
     c5a:	89 81       	ldd	r24, Y+1	; 0x01
     c5c:	9a 81       	ldd	r25, Y+2	; 0x02
     c5e:	01 97       	sbiw	r24, 0x01	; 1
     c60:	f1 f7       	brne	.-4      	; 0xc5e <CLCD_VidSendCommand+0x118>
     c62:	9a 83       	std	Y+2, r25	; 0x02
     c64:	89 83       	std	Y+1, r24	; 0x01

	/*Set delay */
	_delay_ms(3);
	DIO_VidSetPinValue(CLCD_CTRL_PORT,low,CLCD_E_PIN);
     c66:	82 e0       	ldi	r24, 0x02	; 2
     c68:	60 e0       	ldi	r22, 0x00	; 0
     c6a:	42 e0       	ldi	r20, 0x02	; 2
     c6c:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>

}
     c70:	2f 96       	adiw	r28, 0x0f	; 15
     c72:	0f b6       	in	r0, 0x3f	; 63
     c74:	f8 94       	cli
     c76:	de bf       	out	0x3e, r29	; 62
     c78:	0f be       	out	0x3f, r0	; 63
     c7a:	cd bf       	out	0x3d, r28	; 61
     c7c:	cf 91       	pop	r28
     c7e:	df 91       	pop	r29
     c80:	08 95       	ret

00000c82 <CLCD_VidSendData>:
void CLCD_VidSendData(u8 Copy_u8Data){
     c82:	df 93       	push	r29
     c84:	cf 93       	push	r28
     c86:	cd b7       	in	r28, 0x3d	; 61
     c88:	de b7       	in	r29, 0x3e	; 62
     c8a:	2f 97       	sbiw	r28, 0x0f	; 15
     c8c:	0f b6       	in	r0, 0x3f	; 63
     c8e:	f8 94       	cli
     c90:	de bf       	out	0x3e, r29	; 62
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	cd bf       	out	0x3d, r28	; 61
     c96:	8f 87       	std	Y+15, r24	; 0x0f
	/*Set RS pin as low*/
		DIO_VidSetPinValue(CLCD_CTRL_PORT,high,CLCD_RS_PIN);
     c98:	82 e0       	ldi	r24, 0x02	; 2
     c9a:	61 e0       	ldi	r22, 0x01	; 1
     c9c:	40 e0       	ldi	r20, 0x00	; 0
     c9e:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>

		/*Set RW pin as low to write*/
		DIO_VidSetPinValue(CLCD_CTRL_PORT,low,CLCD_RW_PIN);
     ca2:	82 e0       	ldi	r24, 0x02	; 2
     ca4:	60 e0       	ldi	r22, 0x00	; 0
     ca6:	41 e0       	ldi	r20, 0x01	; 1
     ca8:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>

		/*Send command to data pin D0 to D7*/

		DIO_VidSetPortValue(CLCD_DATA_PORT,Copy_u8Data);
     cac:	84 e0       	ldi	r24, 0x04	; 4
     cae:	6f 85       	ldd	r22, Y+15	; 0x0f
     cb0:	0e 94 ad 0a 	call	0x155a	; 0x155a <DIO_VidSetPortValue>

		/*Set Enable Pin */
		DIO_VidSetPinValue(CLCD_CTRL_PORT,high ,CLCD_E_PIN);
     cb4:	82 e0       	ldi	r24, 0x02	; 2
     cb6:	61 e0       	ldi	r22, 0x01	; 1
     cb8:	42 e0       	ldi	r20, 0x02	; 2
     cba:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	a0 e4       	ldi	r26, 0x40	; 64
     cc4:	b0 e4       	ldi	r27, 0x40	; 64
     cc6:	8b 87       	std	Y+11, r24	; 0x0b
     cc8:	9c 87       	std	Y+12, r25	; 0x0c
     cca:	ad 87       	std	Y+13, r26	; 0x0d
     ccc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cce:	6b 85       	ldd	r22, Y+11	; 0x0b
     cd0:	7c 85       	ldd	r23, Y+12	; 0x0c
     cd2:	8d 85       	ldd	r24, Y+13	; 0x0d
     cd4:	9e 85       	ldd	r25, Y+14	; 0x0e
     cd6:	20 e0       	ldi	r18, 0x00	; 0
     cd8:	30 e0       	ldi	r19, 0x00	; 0
     cda:	4a ef       	ldi	r20, 0xFA	; 250
     cdc:	54 e4       	ldi	r21, 0x44	; 68
     cde:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     ce2:	dc 01       	movw	r26, r24
     ce4:	cb 01       	movw	r24, r22
     ce6:	8f 83       	std	Y+7, r24	; 0x07
     ce8:	98 87       	std	Y+8, r25	; 0x08
     cea:	a9 87       	std	Y+9, r26	; 0x09
     cec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     cee:	6f 81       	ldd	r22, Y+7	; 0x07
     cf0:	78 85       	ldd	r23, Y+8	; 0x08
     cf2:	89 85       	ldd	r24, Y+9	; 0x09
     cf4:	9a 85       	ldd	r25, Y+10	; 0x0a
     cf6:	20 e0       	ldi	r18, 0x00	; 0
     cf8:	30 e0       	ldi	r19, 0x00	; 0
     cfa:	40 e8       	ldi	r20, 0x80	; 128
     cfc:	5f e3       	ldi	r21, 0x3F	; 63
     cfe:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     d02:	88 23       	and	r24, r24
     d04:	2c f4       	brge	.+10     	; 0xd10 <CLCD_VidSendData+0x8e>
		__ticks = 1;
     d06:	81 e0       	ldi	r24, 0x01	; 1
     d08:	90 e0       	ldi	r25, 0x00	; 0
     d0a:	9e 83       	std	Y+6, r25	; 0x06
     d0c:	8d 83       	std	Y+5, r24	; 0x05
     d0e:	3f c0       	rjmp	.+126    	; 0xd8e <CLCD_VidSendData+0x10c>
	else if (__tmp > 65535)
     d10:	6f 81       	ldd	r22, Y+7	; 0x07
     d12:	78 85       	ldd	r23, Y+8	; 0x08
     d14:	89 85       	ldd	r24, Y+9	; 0x09
     d16:	9a 85       	ldd	r25, Y+10	; 0x0a
     d18:	20 e0       	ldi	r18, 0x00	; 0
     d1a:	3f ef       	ldi	r19, 0xFF	; 255
     d1c:	4f e7       	ldi	r20, 0x7F	; 127
     d1e:	57 e4       	ldi	r21, 0x47	; 71
     d20:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     d24:	18 16       	cp	r1, r24
     d26:	4c f5       	brge	.+82     	; 0xd7a <CLCD_VidSendData+0xf8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d28:	6b 85       	ldd	r22, Y+11	; 0x0b
     d2a:	7c 85       	ldd	r23, Y+12	; 0x0c
     d2c:	8d 85       	ldd	r24, Y+13	; 0x0d
     d2e:	9e 85       	ldd	r25, Y+14	; 0x0e
     d30:	20 e0       	ldi	r18, 0x00	; 0
     d32:	30 e0       	ldi	r19, 0x00	; 0
     d34:	40 e2       	ldi	r20, 0x20	; 32
     d36:	51 e4       	ldi	r21, 0x41	; 65
     d38:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     d3c:	dc 01       	movw	r26, r24
     d3e:	cb 01       	movw	r24, r22
     d40:	bc 01       	movw	r22, r24
     d42:	cd 01       	movw	r24, r26
     d44:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d48:	dc 01       	movw	r26, r24
     d4a:	cb 01       	movw	r24, r22
     d4c:	9e 83       	std	Y+6, r25	; 0x06
     d4e:	8d 83       	std	Y+5, r24	; 0x05
     d50:	0f c0       	rjmp	.+30     	; 0xd70 <CLCD_VidSendData+0xee>
     d52:	88 ec       	ldi	r24, 0xC8	; 200
     d54:	90 e0       	ldi	r25, 0x00	; 0
     d56:	9c 83       	std	Y+4, r25	; 0x04
     d58:	8b 83       	std	Y+3, r24	; 0x03
     d5a:	8b 81       	ldd	r24, Y+3	; 0x03
     d5c:	9c 81       	ldd	r25, Y+4	; 0x04
     d5e:	01 97       	sbiw	r24, 0x01	; 1
     d60:	f1 f7       	brne	.-4      	; 0xd5e <CLCD_VidSendData+0xdc>
     d62:	9c 83       	std	Y+4, r25	; 0x04
     d64:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     d66:	8d 81       	ldd	r24, Y+5	; 0x05
     d68:	9e 81       	ldd	r25, Y+6	; 0x06
     d6a:	01 97       	sbiw	r24, 0x01	; 1
     d6c:	9e 83       	std	Y+6, r25	; 0x06
     d6e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     d70:	8d 81       	ldd	r24, Y+5	; 0x05
     d72:	9e 81       	ldd	r25, Y+6	; 0x06
     d74:	00 97       	sbiw	r24, 0x00	; 0
     d76:	69 f7       	brne	.-38     	; 0xd52 <CLCD_VidSendData+0xd0>
     d78:	14 c0       	rjmp	.+40     	; 0xda2 <CLCD_VidSendData+0x120>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     d7a:	6f 81       	ldd	r22, Y+7	; 0x07
     d7c:	78 85       	ldd	r23, Y+8	; 0x08
     d7e:	89 85       	ldd	r24, Y+9	; 0x09
     d80:	9a 85       	ldd	r25, Y+10	; 0x0a
     d82:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     d86:	dc 01       	movw	r26, r24
     d88:	cb 01       	movw	r24, r22
     d8a:	9e 83       	std	Y+6, r25	; 0x06
     d8c:	8d 83       	std	Y+5, r24	; 0x05
     d8e:	8d 81       	ldd	r24, Y+5	; 0x05
     d90:	9e 81       	ldd	r25, Y+6	; 0x06
     d92:	9a 83       	std	Y+2, r25	; 0x02
     d94:	89 83       	std	Y+1, r24	; 0x01
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	9a 81       	ldd	r25, Y+2	; 0x02
     d9a:	01 97       	sbiw	r24, 0x01	; 1
     d9c:	f1 f7       	brne	.-4      	; 0xd9a <CLCD_VidSendData+0x118>
     d9e:	9a 83       	std	Y+2, r25	; 0x02
     da0:	89 83       	std	Y+1, r24	; 0x01

		/*Set delay */
		_delay_ms(3);

		DIO_VidSetPinValue(CLCD_CTRL_PORT,low,CLCD_E_PIN);
     da2:	82 e0       	ldi	r24, 0x02	; 2
     da4:	60 e0       	ldi	r22, 0x00	; 0
     da6:	42 e0       	ldi	r20, 0x02	; 2
     da8:	0e 94 25 08 	call	0x104a	; 0x104a <DIO_VidSetPinValue>


}
     dac:	2f 96       	adiw	r28, 0x0f	; 15
     dae:	0f b6       	in	r0, 0x3f	; 63
     db0:	f8 94       	cli
     db2:	de bf       	out	0x3e, r29	; 62
     db4:	0f be       	out	0x3f, r0	; 63
     db6:	cd bf       	out	0x3d, r28	; 61
     db8:	cf 91       	pop	r28
     dba:	df 91       	pop	r29
     dbc:	08 95       	ret

00000dbe <CLCD_VidInit>:
void CLCD_VidInit(void){
     dbe:	df 93       	push	r29
     dc0:	cf 93       	push	r28
     dc2:	cd b7       	in	r28, 0x3d	; 61
     dc4:	de b7       	in	r29, 0x3e	; 62
     dc6:	2e 97       	sbiw	r28, 0x0e	; 14
     dc8:	0f b6       	in	r0, 0x3f	; 63
     dca:	f8 94       	cli
     dcc:	de bf       	out	0x3e, r29	; 62
     dce:	0f be       	out	0x3f, r0	; 63
     dd0:	cd bf       	out	0x3d, r28	; 61
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	a0 e2       	ldi	r26, 0x20	; 32
     dd8:	b2 e4       	ldi	r27, 0x42	; 66
     dda:	8b 87       	std	Y+11, r24	; 0x0b
     ddc:	9c 87       	std	Y+12, r25	; 0x0c
     dde:	ad 87       	std	Y+13, r26	; 0x0d
     de0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     de2:	6b 85       	ldd	r22, Y+11	; 0x0b
     de4:	7c 85       	ldd	r23, Y+12	; 0x0c
     de6:	8d 85       	ldd	r24, Y+13	; 0x0d
     de8:	9e 85       	ldd	r25, Y+14	; 0x0e
     dea:	20 e0       	ldi	r18, 0x00	; 0
     dec:	30 e0       	ldi	r19, 0x00	; 0
     dee:	4a ef       	ldi	r20, 0xFA	; 250
     df0:	54 e4       	ldi	r21, 0x44	; 68
     df2:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     df6:	dc 01       	movw	r26, r24
     df8:	cb 01       	movw	r24, r22
     dfa:	8f 83       	std	Y+7, r24	; 0x07
     dfc:	98 87       	std	Y+8, r25	; 0x08
     dfe:	a9 87       	std	Y+9, r26	; 0x09
     e00:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
     e02:	6f 81       	ldd	r22, Y+7	; 0x07
     e04:	78 85       	ldd	r23, Y+8	; 0x08
     e06:	89 85       	ldd	r24, Y+9	; 0x09
     e08:	9a 85       	ldd	r25, Y+10	; 0x0a
     e0a:	20 e0       	ldi	r18, 0x00	; 0
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	40 e8       	ldi	r20, 0x80	; 128
     e10:	5f e3       	ldi	r21, 0x3F	; 63
     e12:	0e 94 79 03 	call	0x6f2	; 0x6f2 <__ltsf2>
     e16:	88 23       	and	r24, r24
     e18:	2c f4       	brge	.+10     	; 0xe24 <CLCD_VidInit+0x66>
		__ticks = 1;
     e1a:	81 e0       	ldi	r24, 0x01	; 1
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	9e 83       	std	Y+6, r25	; 0x06
     e20:	8d 83       	std	Y+5, r24	; 0x05
     e22:	3f c0       	rjmp	.+126    	; 0xea2 <CLCD_VidInit+0xe4>
	else if (__tmp > 65535)
     e24:	6f 81       	ldd	r22, Y+7	; 0x07
     e26:	78 85       	ldd	r23, Y+8	; 0x08
     e28:	89 85       	ldd	r24, Y+9	; 0x09
     e2a:	9a 85       	ldd	r25, Y+10	; 0x0a
     e2c:	20 e0       	ldi	r18, 0x00	; 0
     e2e:	3f ef       	ldi	r19, 0xFF	; 255
     e30:	4f e7       	ldi	r20, 0x7F	; 127
     e32:	57 e4       	ldi	r21, 0x47	; 71
     e34:	0e 94 19 03 	call	0x632	; 0x632 <__gtsf2>
     e38:	18 16       	cp	r1, r24
     e3a:	4c f5       	brge	.+82     	; 0xe8e <CLCD_VidInit+0xd0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     e3c:	6b 85       	ldd	r22, Y+11	; 0x0b
     e3e:	7c 85       	ldd	r23, Y+12	; 0x0c
     e40:	8d 85       	ldd	r24, Y+13	; 0x0d
     e42:	9e 85       	ldd	r25, Y+14	; 0x0e
     e44:	20 e0       	ldi	r18, 0x00	; 0
     e46:	30 e0       	ldi	r19, 0x00	; 0
     e48:	40 e2       	ldi	r20, 0x20	; 32
     e4a:	51 e4       	ldi	r21, 0x41	; 65
     e4c:	0e 94 1f 02 	call	0x43e	; 0x43e <__mulsf3>
     e50:	dc 01       	movw	r26, r24
     e52:	cb 01       	movw	r24, r22
     e54:	bc 01       	movw	r22, r24
     e56:	cd 01       	movw	r24, r26
     e58:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e5c:	dc 01       	movw	r26, r24
     e5e:	cb 01       	movw	r24, r22
     e60:	9e 83       	std	Y+6, r25	; 0x06
     e62:	8d 83       	std	Y+5, r24	; 0x05
     e64:	0f c0       	rjmp	.+30     	; 0xe84 <CLCD_VidInit+0xc6>
     e66:	88 ec       	ldi	r24, 0xC8	; 200
     e68:	90 e0       	ldi	r25, 0x00	; 0
     e6a:	9c 83       	std	Y+4, r25	; 0x04
     e6c:	8b 83       	std	Y+3, r24	; 0x03
     e6e:	8b 81       	ldd	r24, Y+3	; 0x03
     e70:	9c 81       	ldd	r25, Y+4	; 0x04
     e72:	01 97       	sbiw	r24, 0x01	; 1
     e74:	f1 f7       	brne	.-4      	; 0xe72 <CLCD_VidInit+0xb4>
     e76:	9c 83       	std	Y+4, r25	; 0x04
     e78:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     e7a:	8d 81       	ldd	r24, Y+5	; 0x05
     e7c:	9e 81       	ldd	r25, Y+6	; 0x06
     e7e:	01 97       	sbiw	r24, 0x01	; 1
     e80:	9e 83       	std	Y+6, r25	; 0x06
     e82:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     e84:	8d 81       	ldd	r24, Y+5	; 0x05
     e86:	9e 81       	ldd	r25, Y+6	; 0x06
     e88:	00 97       	sbiw	r24, 0x00	; 0
     e8a:	69 f7       	brne	.-38     	; 0xe66 <CLCD_VidInit+0xa8>
     e8c:	14 c0       	rjmp	.+40     	; 0xeb6 <CLCD_VidInit+0xf8>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     e8e:	6f 81       	ldd	r22, Y+7	; 0x07
     e90:	78 85       	ldd	r23, Y+8	; 0x08
     e92:	89 85       	ldd	r24, Y+9	; 0x09
     e94:	9a 85       	ldd	r25, Y+10	; 0x0a
     e96:	0e 94 49 00 	call	0x92	; 0x92 <__fixunssfsi>
     e9a:	dc 01       	movw	r26, r24
     e9c:	cb 01       	movw	r24, r22
     e9e:	9e 83       	std	Y+6, r25	; 0x06
     ea0:	8d 83       	std	Y+5, r24	; 0x05
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	9e 81       	ldd	r25, Y+6	; 0x06
     ea6:	9a 83       	std	Y+2, r25	; 0x02
     ea8:	89 83       	std	Y+1, r24	; 0x01
     eaa:	89 81       	ldd	r24, Y+1	; 0x01
     eac:	9a 81       	ldd	r25, Y+2	; 0x02
     eae:	01 97       	sbiw	r24, 0x01	; 1
     eb0:	f1 f7       	brne	.-4      	; 0xeae <CLCD_VidInit+0xf0>
     eb2:	9a 83       	std	Y+2, r25	; 0x02
     eb4:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(40);
	/*function Set*/
	CLCD_VidSendCommand(0b00111111);
     eb6:	8f e3       	ldi	r24, 0x3F	; 63
     eb8:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>
	/*Display on off*/
	CLCD_VidSendCommand(0b00001100);
     ebc:	8c e0       	ldi	r24, 0x0C	; 12
     ebe:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>
	/*Display clear*/
	CLCD_VidSendCommand(1);
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>

}
     ec8:	2e 96       	adiw	r28, 0x0e	; 14
     eca:	0f b6       	in	r0, 0x3f	; 63
     ecc:	f8 94       	cli
     ece:	de bf       	out	0x3e, r29	; 62
     ed0:	0f be       	out	0x3f, r0	; 63
     ed2:	cd bf       	out	0x3d, r28	; 61
     ed4:	cf 91       	pop	r28
     ed6:	df 91       	pop	r29
     ed8:	08 95       	ret

00000eda <CLCD_VidGotoXY>:
void CLCD_VidGotoXY(u8 Copy_u8Xpos,u8 Copy_u8YPos){
     eda:	df 93       	push	r29
     edc:	cf 93       	push	r28
     ede:	00 d0       	rcall	.+0      	; 0xee0 <CLCD_VidGotoXY+0x6>
     ee0:	0f 92       	push	r0
     ee2:	cd b7       	in	r28, 0x3d	; 61
     ee4:	de b7       	in	r29, 0x3e	; 62
     ee6:	8a 83       	std	Y+2, r24	; 0x02
     ee8:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8address =0;
     eea:	19 82       	std	Y+1, r1	; 0x01
	if(Copy_u8Xpos==0){
     eec:	8a 81       	ldd	r24, Y+2	; 0x02
     eee:	88 23       	and	r24, r24
     ef0:	19 f4       	brne	.+6      	; 0xef8 <CLCD_VidGotoXY+0x1e>
		Local_u8address=Copy_u8YPos;
     ef2:	8b 81       	ldd	r24, Y+3	; 0x03
     ef4:	89 83       	std	Y+1, r24	; 0x01
     ef6:	06 c0       	rjmp	.+12     	; 0xf04 <CLCD_VidGotoXY+0x2a>

	}
	else if(Copy_u8Xpos==1){
     ef8:	8a 81       	ldd	r24, Y+2	; 0x02
     efa:	81 30       	cpi	r24, 0x01	; 1
     efc:	19 f4       	brne	.+6      	; 0xf04 <CLCD_VidGotoXY+0x2a>

		Local_u8address=0x40 + Copy_u8YPos;
     efe:	8b 81       	ldd	r24, Y+3	; 0x03
     f00:	80 5c       	subi	r24, 0xC0	; 192
     f02:	89 83       	std	Y+1, r24	; 0x01



	}
	CLCD_VidSendCommand(0b10000000+Local_u8address);
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	80 58       	subi	r24, 0x80	; 128
     f08:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>


}
     f0c:	0f 90       	pop	r0
     f0e:	0f 90       	pop	r0
     f10:	0f 90       	pop	r0
     f12:	cf 91       	pop	r28
     f14:	df 91       	pop	r29
     f16:	08 95       	ret

00000f18 <CLCD_String>:
void CLCD_String (u8 *str){
     f18:	df 93       	push	r29
     f1a:	cf 93       	push	r28
     f1c:	00 d0       	rcall	.+0      	; 0xf1e <CLCD_String+0x6>
     f1e:	0f 92       	push	r0
     f20:	cd b7       	in	r28, 0x3d	; 61
     f22:	de b7       	in	r29, 0x3e	; 62
     f24:	9b 83       	std	Y+3, r25	; 0x03
     f26:	8a 83       	std	Y+2, r24	; 0x02
	u8 i =0;
     f28:	19 82       	std	Y+1, r1	; 0x01
	for (i=0;str[i]!=0;i++){
     f2a:	19 82       	std	Y+1, r1	; 0x01
     f2c:	0e c0       	rjmp	.+28     	; 0xf4a <CLCD_String+0x32>
	CLCD_VidSendData(str[i]);
     f2e:	89 81       	ldd	r24, Y+1	; 0x01
     f30:	28 2f       	mov	r18, r24
     f32:	30 e0       	ldi	r19, 0x00	; 0
     f34:	8a 81       	ldd	r24, Y+2	; 0x02
     f36:	9b 81       	ldd	r25, Y+3	; 0x03
     f38:	fc 01       	movw	r30, r24
     f3a:	e2 0f       	add	r30, r18
     f3c:	f3 1f       	adc	r31, r19
     f3e:	80 81       	ld	r24, Z
     f40:	0e 94 41 06 	call	0xc82	; 0xc82 <CLCD_VidSendData>


}
void CLCD_String (u8 *str){
	u8 i =0;
	for (i=0;str[i]!=0;i++){
     f44:	89 81       	ldd	r24, Y+1	; 0x01
     f46:	8f 5f       	subi	r24, 0xFF	; 255
     f48:	89 83       	std	Y+1, r24	; 0x01
     f4a:	89 81       	ldd	r24, Y+1	; 0x01
     f4c:	28 2f       	mov	r18, r24
     f4e:	30 e0       	ldi	r19, 0x00	; 0
     f50:	8a 81       	ldd	r24, Y+2	; 0x02
     f52:	9b 81       	ldd	r25, Y+3	; 0x03
     f54:	fc 01       	movw	r30, r24
     f56:	e2 0f       	add	r30, r18
     f58:	f3 1f       	adc	r31, r19
     f5a:	80 81       	ld	r24, Z
     f5c:	88 23       	and	r24, r24
     f5e:	39 f7       	brne	.-50     	; 0xf2e <CLCD_String+0x16>
	CLCD_VidSendData(str[i]);
	}
}
     f60:	0f 90       	pop	r0
     f62:	0f 90       	pop	r0
     f64:	0f 90       	pop	r0
     f66:	cf 91       	pop	r28
     f68:	df 91       	pop	r29
     f6a:	08 95       	ret

00000f6c <CLCD_String2>:
void CLCD_String2 (u8 *str){
     f6c:	df 93       	push	r29
     f6e:	cf 93       	push	r28
     f70:	00 d0       	rcall	.+0      	; 0xf72 <CLCD_String2+0x6>
     f72:	0f 92       	push	r0
     f74:	cd b7       	in	r28, 0x3d	; 61
     f76:	de b7       	in	r29, 0x3e	; 62
     f78:	9b 83       	std	Y+3, r25	; 0x03
     f7a:	8a 83       	std	Y+2, r24	; 0x02
	for (u8 i=0;i<8;i++)
     f7c:	19 82       	std	Y+1, r1	; 0x01
     f7e:	0e c0       	rjmp	.+28     	; 0xf9c <CLCD_String2+0x30>
			{
				CLCD_VidSendData(str[i]);
     f80:	89 81       	ldd	r24, Y+1	; 0x01
     f82:	28 2f       	mov	r18, r24
     f84:	30 e0       	ldi	r19, 0x00	; 0
     f86:	8a 81       	ldd	r24, Y+2	; 0x02
     f88:	9b 81       	ldd	r25, Y+3	; 0x03
     f8a:	fc 01       	movw	r30, r24
     f8c:	e2 0f       	add	r30, r18
     f8e:	f3 1f       	adc	r31, r19
     f90:	80 81       	ld	r24, Z
     f92:	0e 94 41 06 	call	0xc82	; 0xc82 <CLCD_VidSendData>
	for (i=0;str[i]!=0;i++){
	CLCD_VidSendData(str[i]);
	}
}
void CLCD_String2 (u8 *str){
	for (u8 i=0;i<8;i++)
     f96:	89 81       	ldd	r24, Y+1	; 0x01
     f98:	8f 5f       	subi	r24, 0xFF	; 255
     f9a:	89 83       	std	Y+1, r24	; 0x01
     f9c:	89 81       	ldd	r24, Y+1	; 0x01
     f9e:	88 30       	cpi	r24, 0x08	; 8
     fa0:	78 f3       	brcs	.-34     	; 0xf80 <CLCD_String2+0x14>
			{
				CLCD_VidSendData(str[i]);
			}
}
     fa2:	0f 90       	pop	r0
     fa4:	0f 90       	pop	r0
     fa6:	0f 90       	pop	r0
     fa8:	cf 91       	pop	r28
     faa:	df 91       	pop	r29
     fac:	08 95       	ret

00000fae <CLCD_Clear>:

void CLCD_Clear(){
     fae:	df 93       	push	r29
     fb0:	cf 93       	push	r28
     fb2:	cd b7       	in	r28, 0x3d	; 61
     fb4:	de b7       	in	r29, 0x3e	; 62
	CLCD_VidSendCommand (0x01);		/* clear display */
     fb6:	81 e0       	ldi	r24, 0x01	; 1
     fb8:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>
	CLCD_VidSendCommand (0x80);		/* cursor at home position */
     fbc:	80 e8       	ldi	r24, 0x80	; 128
     fbe:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>


}
     fc2:	cf 91       	pop	r28
     fc4:	df 91       	pop	r29
     fc6:	08 95       	ret

00000fc8 <CLCD_VidWriteSpecialCharacter>:
CLCD_VidWriteSpecialCharacter(u8 * copy_pu8pattern,u8 Copy_Patternnumber ,u8 Copy_u8Xpos,u8 Copy_u8YPos){
     fc8:	df 93       	push	r29
     fca:	cf 93       	push	r28
     fcc:	cd b7       	in	r28, 0x3d	; 61
     fce:	de b7       	in	r29, 0x3e	; 62
     fd0:	29 97       	sbiw	r28, 0x09	; 9
     fd2:	0f b6       	in	r0, 0x3f	; 63
     fd4:	f8 94       	cli
     fd6:	de bf       	out	0x3e, r29	; 62
     fd8:	0f be       	out	0x3f, r0	; 63
     fda:	cd bf       	out	0x3d, r28	; 61
     fdc:	9c 83       	std	Y+4, r25	; 0x04
     fde:	8b 83       	std	Y+3, r24	; 0x03
     fe0:	6d 83       	std	Y+5, r22	; 0x05
     fe2:	4e 83       	std	Y+6, r20	; 0x06
     fe4:	2f 83       	std	Y+7, r18	; 0x07
	u8 Local_u8address =0;
     fe6:	1a 82       	std	Y+2, r1	; 0x02
	Local_u8address=8* Copy_Patternnumber;
     fe8:	8d 81       	ldd	r24, Y+5	; 0x05
     fea:	88 2f       	mov	r24, r24
     fec:	90 e0       	ldi	r25, 0x00	; 0
     fee:	88 0f       	add	r24, r24
     ff0:	99 1f       	adc	r25, r25
     ff2:	88 0f       	add	r24, r24
     ff4:	99 1f       	adc	r25, r25
     ff6:	88 0f       	add	r24, r24
     ff8:	99 1f       	adc	r25, r25
     ffa:	8a 83       	std	Y+2, r24	; 0x02
	CLCD_VidSendCommand(64+Local_u8address);
     ffc:	8a 81       	ldd	r24, Y+2	; 0x02
     ffe:	80 5c       	subi	r24, 0xC0	; 192
    1000:	0e 94 a3 05 	call	0xb46	; 0xb46 <CLCD_VidSendCommand>
	for (u8 i=0;i<8 ;i++){
    1004:	19 82       	std	Y+1, r1	; 0x01
    1006:	0e c0       	rjmp	.+28     	; 0x1024 <CLCD_VidWriteSpecialCharacter+0x5c>
		CLCD_VidSendData(copy_pu8pattern[i]);
    1008:	89 81       	ldd	r24, Y+1	; 0x01
    100a:	28 2f       	mov	r18, r24
    100c:	30 e0       	ldi	r19, 0x00	; 0
    100e:	8b 81       	ldd	r24, Y+3	; 0x03
    1010:	9c 81       	ldd	r25, Y+4	; 0x04
    1012:	fc 01       	movw	r30, r24
    1014:	e2 0f       	add	r30, r18
    1016:	f3 1f       	adc	r31, r19
    1018:	80 81       	ld	r24, Z
    101a:	0e 94 41 06 	call	0xc82	; 0xc82 <CLCD_VidSendData>
}
CLCD_VidWriteSpecialCharacter(u8 * copy_pu8pattern,u8 Copy_Patternnumber ,u8 Copy_u8Xpos,u8 Copy_u8YPos){
	u8 Local_u8address =0;
	Local_u8address=8* Copy_Patternnumber;
	CLCD_VidSendCommand(64+Local_u8address);
	for (u8 i=0;i<8 ;i++){
    101e:	89 81       	ldd	r24, Y+1	; 0x01
    1020:	8f 5f       	subi	r24, 0xFF	; 255
    1022:	89 83       	std	Y+1, r24	; 0x01
    1024:	89 81       	ldd	r24, Y+1	; 0x01
    1026:	88 30       	cpi	r24, 0x08	; 8
    1028:	78 f3       	brcs	.-34     	; 0x1008 <CLCD_VidWriteSpecialCharacter+0x40>
		CLCD_VidSendData(copy_pu8pattern[i]);
	}
	CLCD_VidGotoXY(Copy_u8Xpos,Copy_u8YPos);
    102a:	8e 81       	ldd	r24, Y+6	; 0x06
    102c:	6f 81       	ldd	r22, Y+7	; 0x07
    102e:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_VidGotoXY>
	CLCD_VidSendData(Copy_Patternnumber);
    1032:	8d 81       	ldd	r24, Y+5	; 0x05
    1034:	0e 94 41 06 	call	0xc82	; 0xc82 <CLCD_VidSendData>
}
    1038:	29 96       	adiw	r28, 0x09	; 9
    103a:	0f b6       	in	r0, 0x3f	; 63
    103c:	f8 94       	cli
    103e:	de bf       	out	0x3e, r29	; 62
    1040:	0f be       	out	0x3f, r0	; 63
    1042:	cd bf       	out	0x3d, r28	; 61
    1044:	cf 91       	pop	r28
    1046:	df 91       	pop	r29
    1048:	08 95       	ret

0000104a <DIO_VidSetPinValue>:
#include"lib/STD_TYPES.h"
#include"lib/BIT_MATH.h"
#include"DIO_private.h"
#include "DIO_interface.h"

void DIO_VidSetPinValue(u8 copy_u8port , u8 Copy_u8PinNumber , u8 Copy_u8Value){
    104a:	df 93       	push	r29
    104c:	cf 93       	push	r28
    104e:	cd b7       	in	r28, 0x3d	; 61
    1050:	de b7       	in	r29, 0x3e	; 62
    1052:	27 97       	sbiw	r28, 0x07	; 7
    1054:	0f b6       	in	r0, 0x3f	; 63
    1056:	f8 94       	cli
    1058:	de bf       	out	0x3e, r29	; 62
    105a:	0f be       	out	0x3f, r0	; 63
    105c:	cd bf       	out	0x3d, r28	; 61
    105e:	89 83       	std	Y+1, r24	; 0x01
    1060:	6a 83       	std	Y+2, r22	; 0x02
    1062:	4b 83       	std	Y+3, r20	; 0x03
	if (Copy_u8Value == high){
    1064:	8b 81       	ldd	r24, Y+3	; 0x03
    1066:	81 30       	cpi	r24, 0x01	; 1
    1068:	09 f0       	breq	.+2      	; 0x106c <DIO_VidSetPinValue+0x22>
    106a:	70 c0       	rjmp	.+224    	; 0x114c <DIO_VidSetPinValue+0x102>
		switch (copy_u8port)
    106c:	89 81       	ldd	r24, Y+1	; 0x01
    106e:	28 2f       	mov	r18, r24
    1070:	30 e0       	ldi	r19, 0x00	; 0
    1072:	3f 83       	std	Y+7, r19	; 0x07
    1074:	2e 83       	std	Y+6, r18	; 0x06
    1076:	8e 81       	ldd	r24, Y+6	; 0x06
    1078:	9f 81       	ldd	r25, Y+7	; 0x07
    107a:	83 30       	cpi	r24, 0x03	; 3
    107c:	91 05       	cpc	r25, r1
    107e:	51 f1       	breq	.+84     	; 0x10d4 <DIO_VidSetPinValue+0x8a>
    1080:	2e 81       	ldd	r18, Y+6	; 0x06
    1082:	3f 81       	ldd	r19, Y+7	; 0x07
    1084:	24 30       	cpi	r18, 0x04	; 4
    1086:	31 05       	cpc	r19, r1
    1088:	34 f4       	brge	.+12     	; 0x1096 <DIO_VidSetPinValue+0x4c>
    108a:	8e 81       	ldd	r24, Y+6	; 0x06
    108c:	9f 81       	ldd	r25, Y+7	; 0x07
    108e:	82 30       	cpi	r24, 0x02	; 2
    1090:	91 05       	cpc	r25, r1
    1092:	61 f0       	breq	.+24     	; 0x10ac <DIO_VidSetPinValue+0x62>
    1094:	d3 c0       	rjmp	.+422    	; 0x123c <DIO_VidSetPinValue+0x1f2>
    1096:	2e 81       	ldd	r18, Y+6	; 0x06
    1098:	3f 81       	ldd	r19, Y+7	; 0x07
    109a:	24 30       	cpi	r18, 0x04	; 4
    109c:	31 05       	cpc	r19, r1
    109e:	71 f1       	breq	.+92     	; 0x10fc <DIO_VidSetPinValue+0xb2>
    10a0:	8e 81       	ldd	r24, Y+6	; 0x06
    10a2:	9f 81       	ldd	r25, Y+7	; 0x07
    10a4:	85 30       	cpi	r24, 0x05	; 5
    10a6:	91 05       	cpc	r25, r1
    10a8:	e9 f1       	breq	.+122    	; 0x1124 <DIO_VidSetPinValue+0xda>
    10aa:	c8 c0       	rjmp	.+400    	; 0x123c <DIO_VidSetPinValue+0x1f2>
				{
				case(Port_A) :SET_BIT(PORTA,Copy_u8PinNumber);break;
    10ac:	ab e3       	ldi	r26, 0x3B	; 59
    10ae:	b0 e0       	ldi	r27, 0x00	; 0
    10b0:	eb e3       	ldi	r30, 0x3B	; 59
    10b2:	f0 e0       	ldi	r31, 0x00	; 0
    10b4:	80 81       	ld	r24, Z
    10b6:	48 2f       	mov	r20, r24
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	90 e0       	ldi	r25, 0x00	; 0
    10c2:	02 2e       	mov	r0, r18
    10c4:	02 c0       	rjmp	.+4      	; 0x10ca <DIO_VidSetPinValue+0x80>
    10c6:	88 0f       	add	r24, r24
    10c8:	99 1f       	adc	r25, r25
    10ca:	0a 94       	dec	r0
    10cc:	e2 f7       	brpl	.-8      	; 0x10c6 <DIO_VidSetPinValue+0x7c>
    10ce:	84 2b       	or	r24, r20
    10d0:	8c 93       	st	X, r24
    10d2:	b4 c0       	rjmp	.+360    	; 0x123c <DIO_VidSetPinValue+0x1f2>
				case(Port_B) :SET_BIT(PORTB,Copy_u8PinNumber);break;
    10d4:	a8 e3       	ldi	r26, 0x38	; 56
    10d6:	b0 e0       	ldi	r27, 0x00	; 0
    10d8:	e8 e3       	ldi	r30, 0x38	; 56
    10da:	f0 e0       	ldi	r31, 0x00	; 0
    10dc:	80 81       	ld	r24, Z
    10de:	48 2f       	mov	r20, r24
    10e0:	8a 81       	ldd	r24, Y+2	; 0x02
    10e2:	28 2f       	mov	r18, r24
    10e4:	30 e0       	ldi	r19, 0x00	; 0
    10e6:	81 e0       	ldi	r24, 0x01	; 1
    10e8:	90 e0       	ldi	r25, 0x00	; 0
    10ea:	02 2e       	mov	r0, r18
    10ec:	02 c0       	rjmp	.+4      	; 0x10f2 <DIO_VidSetPinValue+0xa8>
    10ee:	88 0f       	add	r24, r24
    10f0:	99 1f       	adc	r25, r25
    10f2:	0a 94       	dec	r0
    10f4:	e2 f7       	brpl	.-8      	; 0x10ee <DIO_VidSetPinValue+0xa4>
    10f6:	84 2b       	or	r24, r20
    10f8:	8c 93       	st	X, r24
    10fa:	a0 c0       	rjmp	.+320    	; 0x123c <DIO_VidSetPinValue+0x1f2>
				case(Port_C) :SET_BIT(PORTC,Copy_u8PinNumber);break;
    10fc:	a5 e3       	ldi	r26, 0x35	; 53
    10fe:	b0 e0       	ldi	r27, 0x00	; 0
    1100:	e5 e3       	ldi	r30, 0x35	; 53
    1102:	f0 e0       	ldi	r31, 0x00	; 0
    1104:	80 81       	ld	r24, Z
    1106:	48 2f       	mov	r20, r24
    1108:	8a 81       	ldd	r24, Y+2	; 0x02
    110a:	28 2f       	mov	r18, r24
    110c:	30 e0       	ldi	r19, 0x00	; 0
    110e:	81 e0       	ldi	r24, 0x01	; 1
    1110:	90 e0       	ldi	r25, 0x00	; 0
    1112:	02 2e       	mov	r0, r18
    1114:	02 c0       	rjmp	.+4      	; 0x111a <DIO_VidSetPinValue+0xd0>
    1116:	88 0f       	add	r24, r24
    1118:	99 1f       	adc	r25, r25
    111a:	0a 94       	dec	r0
    111c:	e2 f7       	brpl	.-8      	; 0x1116 <DIO_VidSetPinValue+0xcc>
    111e:	84 2b       	or	r24, r20
    1120:	8c 93       	st	X, r24
    1122:	8c c0       	rjmp	.+280    	; 0x123c <DIO_VidSetPinValue+0x1f2>
				case(Port_D) :SET_BIT(PORTD,Copy_u8PinNumber);break;
    1124:	a2 e3       	ldi	r26, 0x32	; 50
    1126:	b0 e0       	ldi	r27, 0x00	; 0
    1128:	e2 e3       	ldi	r30, 0x32	; 50
    112a:	f0 e0       	ldi	r31, 0x00	; 0
    112c:	80 81       	ld	r24, Z
    112e:	48 2f       	mov	r20, r24
    1130:	8a 81       	ldd	r24, Y+2	; 0x02
    1132:	28 2f       	mov	r18, r24
    1134:	30 e0       	ldi	r19, 0x00	; 0
    1136:	81 e0       	ldi	r24, 0x01	; 1
    1138:	90 e0       	ldi	r25, 0x00	; 0
    113a:	02 2e       	mov	r0, r18
    113c:	02 c0       	rjmp	.+4      	; 0x1142 <DIO_VidSetPinValue+0xf8>
    113e:	88 0f       	add	r24, r24
    1140:	99 1f       	adc	r25, r25
    1142:	0a 94       	dec	r0
    1144:	e2 f7       	brpl	.-8      	; 0x113e <DIO_VidSetPinValue+0xf4>
    1146:	84 2b       	or	r24, r20
    1148:	8c 93       	st	X, r24
    114a:	78 c0       	rjmp	.+240    	; 0x123c <DIO_VidSetPinValue+0x1f2>
				}
	}
	else if(Copy_u8Value == low){
    114c:	8b 81       	ldd	r24, Y+3	; 0x03
    114e:	88 23       	and	r24, r24
    1150:	09 f0       	breq	.+2      	; 0x1154 <DIO_VidSetPinValue+0x10a>
    1152:	74 c0       	rjmp	.+232    	; 0x123c <DIO_VidSetPinValue+0x1f2>
		switch (copy_u8port)
    1154:	89 81       	ldd	r24, Y+1	; 0x01
    1156:	28 2f       	mov	r18, r24
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	3d 83       	std	Y+5, r19	; 0x05
    115c:	2c 83       	std	Y+4, r18	; 0x04
    115e:	8c 81       	ldd	r24, Y+4	; 0x04
    1160:	9d 81       	ldd	r25, Y+5	; 0x05
    1162:	83 30       	cpi	r24, 0x03	; 3
    1164:	91 05       	cpc	r25, r1
    1166:	61 f1       	breq	.+88     	; 0x11c0 <DIO_VidSetPinValue+0x176>
    1168:	2c 81       	ldd	r18, Y+4	; 0x04
    116a:	3d 81       	ldd	r19, Y+5	; 0x05
    116c:	24 30       	cpi	r18, 0x04	; 4
    116e:	31 05       	cpc	r19, r1
    1170:	34 f4       	brge	.+12     	; 0x117e <DIO_VidSetPinValue+0x134>
    1172:	8c 81       	ldd	r24, Y+4	; 0x04
    1174:	9d 81       	ldd	r25, Y+5	; 0x05
    1176:	82 30       	cpi	r24, 0x02	; 2
    1178:	91 05       	cpc	r25, r1
    117a:	69 f0       	breq	.+26     	; 0x1196 <DIO_VidSetPinValue+0x14c>
    117c:	5f c0       	rjmp	.+190    	; 0x123c <DIO_VidSetPinValue+0x1f2>
    117e:	2c 81       	ldd	r18, Y+4	; 0x04
    1180:	3d 81       	ldd	r19, Y+5	; 0x05
    1182:	24 30       	cpi	r18, 0x04	; 4
    1184:	31 05       	cpc	r19, r1
    1186:	89 f1       	breq	.+98     	; 0x11ea <DIO_VidSetPinValue+0x1a0>
    1188:	8c 81       	ldd	r24, Y+4	; 0x04
    118a:	9d 81       	ldd	r25, Y+5	; 0x05
    118c:	85 30       	cpi	r24, 0x05	; 5
    118e:	91 05       	cpc	r25, r1
    1190:	09 f4       	brne	.+2      	; 0x1194 <DIO_VidSetPinValue+0x14a>
    1192:	40 c0       	rjmp	.+128    	; 0x1214 <DIO_VidSetPinValue+0x1ca>
    1194:	53 c0       	rjmp	.+166    	; 0x123c <DIO_VidSetPinValue+0x1f2>
						{
						case(Port_A) :CLEAR_BIT(PORTA,Copy_u8PinNumber);break;
    1196:	ab e3       	ldi	r26, 0x3B	; 59
    1198:	b0 e0       	ldi	r27, 0x00	; 0
    119a:	eb e3       	ldi	r30, 0x3B	; 59
    119c:	f0 e0       	ldi	r31, 0x00	; 0
    119e:	80 81       	ld	r24, Z
    11a0:	48 2f       	mov	r20, r24
    11a2:	8a 81       	ldd	r24, Y+2	; 0x02
    11a4:	28 2f       	mov	r18, r24
    11a6:	30 e0       	ldi	r19, 0x00	; 0
    11a8:	81 e0       	ldi	r24, 0x01	; 1
    11aa:	90 e0       	ldi	r25, 0x00	; 0
    11ac:	02 2e       	mov	r0, r18
    11ae:	02 c0       	rjmp	.+4      	; 0x11b4 <DIO_VidSetPinValue+0x16a>
    11b0:	88 0f       	add	r24, r24
    11b2:	99 1f       	adc	r25, r25
    11b4:	0a 94       	dec	r0
    11b6:	e2 f7       	brpl	.-8      	; 0x11b0 <DIO_VidSetPinValue+0x166>
    11b8:	80 95       	com	r24
    11ba:	84 23       	and	r24, r20
    11bc:	8c 93       	st	X, r24
    11be:	3e c0       	rjmp	.+124    	; 0x123c <DIO_VidSetPinValue+0x1f2>
						case(Port_B) :CLEAR_BIT(PORTB,Copy_u8PinNumber);break;
    11c0:	a8 e3       	ldi	r26, 0x38	; 56
    11c2:	b0 e0       	ldi	r27, 0x00	; 0
    11c4:	e8 e3       	ldi	r30, 0x38	; 56
    11c6:	f0 e0       	ldi	r31, 0x00	; 0
    11c8:	80 81       	ld	r24, Z
    11ca:	48 2f       	mov	r20, r24
    11cc:	8a 81       	ldd	r24, Y+2	; 0x02
    11ce:	28 2f       	mov	r18, r24
    11d0:	30 e0       	ldi	r19, 0x00	; 0
    11d2:	81 e0       	ldi	r24, 0x01	; 1
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	02 2e       	mov	r0, r18
    11d8:	02 c0       	rjmp	.+4      	; 0x11de <DIO_VidSetPinValue+0x194>
    11da:	88 0f       	add	r24, r24
    11dc:	99 1f       	adc	r25, r25
    11de:	0a 94       	dec	r0
    11e0:	e2 f7       	brpl	.-8      	; 0x11da <DIO_VidSetPinValue+0x190>
    11e2:	80 95       	com	r24
    11e4:	84 23       	and	r24, r20
    11e6:	8c 93       	st	X, r24
    11e8:	29 c0       	rjmp	.+82     	; 0x123c <DIO_VidSetPinValue+0x1f2>
						case(Port_C) :CLEAR_BIT(PORTC,Copy_u8PinNumber);break;
    11ea:	a5 e3       	ldi	r26, 0x35	; 53
    11ec:	b0 e0       	ldi	r27, 0x00	; 0
    11ee:	e5 e3       	ldi	r30, 0x35	; 53
    11f0:	f0 e0       	ldi	r31, 0x00	; 0
    11f2:	80 81       	ld	r24, Z
    11f4:	48 2f       	mov	r20, r24
    11f6:	8a 81       	ldd	r24, Y+2	; 0x02
    11f8:	28 2f       	mov	r18, r24
    11fa:	30 e0       	ldi	r19, 0x00	; 0
    11fc:	81 e0       	ldi	r24, 0x01	; 1
    11fe:	90 e0       	ldi	r25, 0x00	; 0
    1200:	02 2e       	mov	r0, r18
    1202:	02 c0       	rjmp	.+4      	; 0x1208 <DIO_VidSetPinValue+0x1be>
    1204:	88 0f       	add	r24, r24
    1206:	99 1f       	adc	r25, r25
    1208:	0a 94       	dec	r0
    120a:	e2 f7       	brpl	.-8      	; 0x1204 <DIO_VidSetPinValue+0x1ba>
    120c:	80 95       	com	r24
    120e:	84 23       	and	r24, r20
    1210:	8c 93       	st	X, r24
    1212:	14 c0       	rjmp	.+40     	; 0x123c <DIO_VidSetPinValue+0x1f2>
						case(Port_D) :CLEAR_BIT(PORTD,Copy_u8PinNumber);break;
    1214:	a2 e3       	ldi	r26, 0x32	; 50
    1216:	b0 e0       	ldi	r27, 0x00	; 0
    1218:	e2 e3       	ldi	r30, 0x32	; 50
    121a:	f0 e0       	ldi	r31, 0x00	; 0
    121c:	80 81       	ld	r24, Z
    121e:	48 2f       	mov	r20, r24
    1220:	8a 81       	ldd	r24, Y+2	; 0x02
    1222:	28 2f       	mov	r18, r24
    1224:	30 e0       	ldi	r19, 0x00	; 0
    1226:	81 e0       	ldi	r24, 0x01	; 1
    1228:	90 e0       	ldi	r25, 0x00	; 0
    122a:	02 2e       	mov	r0, r18
    122c:	02 c0       	rjmp	.+4      	; 0x1232 <DIO_VidSetPinValue+0x1e8>
    122e:	88 0f       	add	r24, r24
    1230:	99 1f       	adc	r25, r25
    1232:	0a 94       	dec	r0
    1234:	e2 f7       	brpl	.-8      	; 0x122e <DIO_VidSetPinValue+0x1e4>
    1236:	80 95       	com	r24
    1238:	84 23       	and	r24, r20
    123a:	8c 93       	st	X, r24
						}

	}

}
    123c:	27 96       	adiw	r28, 0x07	; 7
    123e:	0f b6       	in	r0, 0x3f	; 63
    1240:	f8 94       	cli
    1242:	de bf       	out	0x3e, r29	; 62
    1244:	0f be       	out	0x3f, r0	; 63
    1246:	cd bf       	out	0x3d, r28	; 61
    1248:	cf 91       	pop	r28
    124a:	df 91       	pop	r29
    124c:	08 95       	ret

0000124e <DIO_VidSetPinDirection>:
void DIO_VidSetPinDirection(u8 copy_u8port , u8 Copy_u8PinNumber , u8 Copy_u8PinDeriction)
{
    124e:	df 93       	push	r29
    1250:	cf 93       	push	r28
    1252:	cd b7       	in	r28, 0x3d	; 61
    1254:	de b7       	in	r29, 0x3e	; 62
    1256:	27 97       	sbiw	r28, 0x07	; 7
    1258:	0f b6       	in	r0, 0x3f	; 63
    125a:	f8 94       	cli
    125c:	de bf       	out	0x3e, r29	; 62
    125e:	0f be       	out	0x3f, r0	; 63
    1260:	cd bf       	out	0x3d, r28	; 61
    1262:	89 83       	std	Y+1, r24	; 0x01
    1264:	6a 83       	std	Y+2, r22	; 0x02
    1266:	4b 83       	std	Y+3, r20	; 0x03
	if(Copy_u8PinDeriction == input )
    1268:	8b 81       	ldd	r24, Y+3	; 0x03
    126a:	88 23       	and	r24, r24
    126c:	09 f0       	breq	.+2      	; 0x1270 <DIO_VidSetPinDirection+0x22>
    126e:	75 c0       	rjmp	.+234    	; 0x135a <DIO_VidSetPinDirection+0x10c>
	{
		switch (copy_u8port)
    1270:	89 81       	ldd	r24, Y+1	; 0x01
    1272:	28 2f       	mov	r18, r24
    1274:	30 e0       	ldi	r19, 0x00	; 0
    1276:	3f 83       	std	Y+7, r19	; 0x07
    1278:	2e 83       	std	Y+6, r18	; 0x06
    127a:	8e 81       	ldd	r24, Y+6	; 0x06
    127c:	9f 81       	ldd	r25, Y+7	; 0x07
    127e:	83 30       	cpi	r24, 0x03	; 3
    1280:	91 05       	cpc	r25, r1
    1282:	61 f1       	breq	.+88     	; 0x12dc <DIO_VidSetPinDirection+0x8e>
    1284:	2e 81       	ldd	r18, Y+6	; 0x06
    1286:	3f 81       	ldd	r19, Y+7	; 0x07
    1288:	24 30       	cpi	r18, 0x04	; 4
    128a:	31 05       	cpc	r19, r1
    128c:	34 f4       	brge	.+12     	; 0x129a <DIO_VidSetPinDirection+0x4c>
    128e:	8e 81       	ldd	r24, Y+6	; 0x06
    1290:	9f 81       	ldd	r25, Y+7	; 0x07
    1292:	82 30       	cpi	r24, 0x02	; 2
    1294:	91 05       	cpc	r25, r1
    1296:	69 f0       	breq	.+26     	; 0x12b2 <DIO_VidSetPinDirection+0x64>
    1298:	d3 c0       	rjmp	.+422    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
    129a:	2e 81       	ldd	r18, Y+6	; 0x06
    129c:	3f 81       	ldd	r19, Y+7	; 0x07
    129e:	24 30       	cpi	r18, 0x04	; 4
    12a0:	31 05       	cpc	r19, r1
    12a2:	89 f1       	breq	.+98     	; 0x1306 <DIO_VidSetPinDirection+0xb8>
    12a4:	8e 81       	ldd	r24, Y+6	; 0x06
    12a6:	9f 81       	ldd	r25, Y+7	; 0x07
    12a8:	85 30       	cpi	r24, 0x05	; 5
    12aa:	91 05       	cpc	r25, r1
    12ac:	09 f4       	brne	.+2      	; 0x12b0 <DIO_VidSetPinDirection+0x62>
    12ae:	40 c0       	rjmp	.+128    	; 0x1330 <DIO_VidSetPinDirection+0xe2>
    12b0:	c7 c0       	rjmp	.+398    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
		{
		case(Port_A) :CLEAR_BIT(DDRA,Copy_u8PinNumber);break;
    12b2:	aa e3       	ldi	r26, 0x3A	; 58
    12b4:	b0 e0       	ldi	r27, 0x00	; 0
    12b6:	ea e3       	ldi	r30, 0x3A	; 58
    12b8:	f0 e0       	ldi	r31, 0x00	; 0
    12ba:	80 81       	ld	r24, Z
    12bc:	48 2f       	mov	r20, r24
    12be:	8a 81       	ldd	r24, Y+2	; 0x02
    12c0:	28 2f       	mov	r18, r24
    12c2:	30 e0       	ldi	r19, 0x00	; 0
    12c4:	81 e0       	ldi	r24, 0x01	; 1
    12c6:	90 e0       	ldi	r25, 0x00	; 0
    12c8:	02 2e       	mov	r0, r18
    12ca:	02 c0       	rjmp	.+4      	; 0x12d0 <DIO_VidSetPinDirection+0x82>
    12cc:	88 0f       	add	r24, r24
    12ce:	99 1f       	adc	r25, r25
    12d0:	0a 94       	dec	r0
    12d2:	e2 f7       	brpl	.-8      	; 0x12cc <DIO_VidSetPinDirection+0x7e>
    12d4:	80 95       	com	r24
    12d6:	84 23       	and	r24, r20
    12d8:	8c 93       	st	X, r24
    12da:	b2 c0       	rjmp	.+356    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
		case(Port_B) :CLEAR_BIT(DDRB,Copy_u8PinNumber);break;
    12dc:	a7 e3       	ldi	r26, 0x37	; 55
    12de:	b0 e0       	ldi	r27, 0x00	; 0
    12e0:	e7 e3       	ldi	r30, 0x37	; 55
    12e2:	f0 e0       	ldi	r31, 0x00	; 0
    12e4:	80 81       	ld	r24, Z
    12e6:	48 2f       	mov	r20, r24
    12e8:	8a 81       	ldd	r24, Y+2	; 0x02
    12ea:	28 2f       	mov	r18, r24
    12ec:	30 e0       	ldi	r19, 0x00	; 0
    12ee:	81 e0       	ldi	r24, 0x01	; 1
    12f0:	90 e0       	ldi	r25, 0x00	; 0
    12f2:	02 2e       	mov	r0, r18
    12f4:	02 c0       	rjmp	.+4      	; 0x12fa <DIO_VidSetPinDirection+0xac>
    12f6:	88 0f       	add	r24, r24
    12f8:	99 1f       	adc	r25, r25
    12fa:	0a 94       	dec	r0
    12fc:	e2 f7       	brpl	.-8      	; 0x12f6 <DIO_VidSetPinDirection+0xa8>
    12fe:	80 95       	com	r24
    1300:	84 23       	and	r24, r20
    1302:	8c 93       	st	X, r24
    1304:	9d c0       	rjmp	.+314    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
		case(Port_C) :CLEAR_BIT(DDRC,Copy_u8PinNumber);break;
    1306:	a4 e3       	ldi	r26, 0x34	; 52
    1308:	b0 e0       	ldi	r27, 0x00	; 0
    130a:	e4 e3       	ldi	r30, 0x34	; 52
    130c:	f0 e0       	ldi	r31, 0x00	; 0
    130e:	80 81       	ld	r24, Z
    1310:	48 2f       	mov	r20, r24
    1312:	8a 81       	ldd	r24, Y+2	; 0x02
    1314:	28 2f       	mov	r18, r24
    1316:	30 e0       	ldi	r19, 0x00	; 0
    1318:	81 e0       	ldi	r24, 0x01	; 1
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	02 2e       	mov	r0, r18
    131e:	02 c0       	rjmp	.+4      	; 0x1324 <DIO_VidSetPinDirection+0xd6>
    1320:	88 0f       	add	r24, r24
    1322:	99 1f       	adc	r25, r25
    1324:	0a 94       	dec	r0
    1326:	e2 f7       	brpl	.-8      	; 0x1320 <DIO_VidSetPinDirection+0xd2>
    1328:	80 95       	com	r24
    132a:	84 23       	and	r24, r20
    132c:	8c 93       	st	X, r24
    132e:	88 c0       	rjmp	.+272    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
		case(Port_D) :CLEAR_BIT(DDRD,Copy_u8PinNumber);break;
    1330:	a1 e3       	ldi	r26, 0x31	; 49
    1332:	b0 e0       	ldi	r27, 0x00	; 0
    1334:	e1 e3       	ldi	r30, 0x31	; 49
    1336:	f0 e0       	ldi	r31, 0x00	; 0
    1338:	80 81       	ld	r24, Z
    133a:	48 2f       	mov	r20, r24
    133c:	8a 81       	ldd	r24, Y+2	; 0x02
    133e:	28 2f       	mov	r18, r24
    1340:	30 e0       	ldi	r19, 0x00	; 0
    1342:	81 e0       	ldi	r24, 0x01	; 1
    1344:	90 e0       	ldi	r25, 0x00	; 0
    1346:	02 2e       	mov	r0, r18
    1348:	02 c0       	rjmp	.+4      	; 0x134e <DIO_VidSetPinDirection+0x100>
    134a:	88 0f       	add	r24, r24
    134c:	99 1f       	adc	r25, r25
    134e:	0a 94       	dec	r0
    1350:	e2 f7       	brpl	.-8      	; 0x134a <DIO_VidSetPinDirection+0xfc>
    1352:	80 95       	com	r24
    1354:	84 23       	and	r24, r20
    1356:	8c 93       	st	X, r24
    1358:	73 c0       	rjmp	.+230    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
		}


	}
	else if(Copy_u8PinDeriction == output )
    135a:	8b 81       	ldd	r24, Y+3	; 0x03
    135c:	81 30       	cpi	r24, 0x01	; 1
    135e:	09 f0       	breq	.+2      	; 0x1362 <DIO_VidSetPinDirection+0x114>
    1360:	6f c0       	rjmp	.+222    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
	{
		switch (copy_u8port)
    1362:	89 81       	ldd	r24, Y+1	; 0x01
    1364:	28 2f       	mov	r18, r24
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	3d 83       	std	Y+5, r19	; 0x05
    136a:	2c 83       	std	Y+4, r18	; 0x04
    136c:	8c 81       	ldd	r24, Y+4	; 0x04
    136e:	9d 81       	ldd	r25, Y+5	; 0x05
    1370:	83 30       	cpi	r24, 0x03	; 3
    1372:	91 05       	cpc	r25, r1
    1374:	51 f1       	breq	.+84     	; 0x13ca <DIO_VidSetPinDirection+0x17c>
    1376:	2c 81       	ldd	r18, Y+4	; 0x04
    1378:	3d 81       	ldd	r19, Y+5	; 0x05
    137a:	24 30       	cpi	r18, 0x04	; 4
    137c:	31 05       	cpc	r19, r1
    137e:	34 f4       	brge	.+12     	; 0x138c <DIO_VidSetPinDirection+0x13e>
    1380:	8c 81       	ldd	r24, Y+4	; 0x04
    1382:	9d 81       	ldd	r25, Y+5	; 0x05
    1384:	82 30       	cpi	r24, 0x02	; 2
    1386:	91 05       	cpc	r25, r1
    1388:	61 f0       	breq	.+24     	; 0x13a2 <DIO_VidSetPinDirection+0x154>
    138a:	5a c0       	rjmp	.+180    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
    138c:	2c 81       	ldd	r18, Y+4	; 0x04
    138e:	3d 81       	ldd	r19, Y+5	; 0x05
    1390:	24 30       	cpi	r18, 0x04	; 4
    1392:	31 05       	cpc	r19, r1
    1394:	71 f1       	breq	.+92     	; 0x13f2 <DIO_VidSetPinDirection+0x1a4>
    1396:	8c 81       	ldd	r24, Y+4	; 0x04
    1398:	9d 81       	ldd	r25, Y+5	; 0x05
    139a:	85 30       	cpi	r24, 0x05	; 5
    139c:	91 05       	cpc	r25, r1
    139e:	e9 f1       	breq	.+122    	; 0x141a <DIO_VidSetPinDirection+0x1cc>
    13a0:	4f c0       	rjmp	.+158    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
				{
				case(Port_A) :SET_BIT(DDRA,Copy_u8PinNumber);break;
    13a2:	aa e3       	ldi	r26, 0x3A	; 58
    13a4:	b0 e0       	ldi	r27, 0x00	; 0
    13a6:	ea e3       	ldi	r30, 0x3A	; 58
    13a8:	f0 e0       	ldi	r31, 0x00	; 0
    13aa:	80 81       	ld	r24, Z
    13ac:	48 2f       	mov	r20, r24
    13ae:	8a 81       	ldd	r24, Y+2	; 0x02
    13b0:	28 2f       	mov	r18, r24
    13b2:	30 e0       	ldi	r19, 0x00	; 0
    13b4:	81 e0       	ldi	r24, 0x01	; 1
    13b6:	90 e0       	ldi	r25, 0x00	; 0
    13b8:	02 2e       	mov	r0, r18
    13ba:	02 c0       	rjmp	.+4      	; 0x13c0 <DIO_VidSetPinDirection+0x172>
    13bc:	88 0f       	add	r24, r24
    13be:	99 1f       	adc	r25, r25
    13c0:	0a 94       	dec	r0
    13c2:	e2 f7       	brpl	.-8      	; 0x13bc <DIO_VidSetPinDirection+0x16e>
    13c4:	84 2b       	or	r24, r20
    13c6:	8c 93       	st	X, r24
    13c8:	3b c0       	rjmp	.+118    	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
				case(Port_B) :SET_BIT(DDRB,Copy_u8PinNumber);break;
    13ca:	a7 e3       	ldi	r26, 0x37	; 55
    13cc:	b0 e0       	ldi	r27, 0x00	; 0
    13ce:	e7 e3       	ldi	r30, 0x37	; 55
    13d0:	f0 e0       	ldi	r31, 0x00	; 0
    13d2:	80 81       	ld	r24, Z
    13d4:	48 2f       	mov	r20, r24
    13d6:	8a 81       	ldd	r24, Y+2	; 0x02
    13d8:	28 2f       	mov	r18, r24
    13da:	30 e0       	ldi	r19, 0x00	; 0
    13dc:	81 e0       	ldi	r24, 0x01	; 1
    13de:	90 e0       	ldi	r25, 0x00	; 0
    13e0:	02 2e       	mov	r0, r18
    13e2:	02 c0       	rjmp	.+4      	; 0x13e8 <DIO_VidSetPinDirection+0x19a>
    13e4:	88 0f       	add	r24, r24
    13e6:	99 1f       	adc	r25, r25
    13e8:	0a 94       	dec	r0
    13ea:	e2 f7       	brpl	.-8      	; 0x13e4 <DIO_VidSetPinDirection+0x196>
    13ec:	84 2b       	or	r24, r20
    13ee:	8c 93       	st	X, r24
    13f0:	27 c0       	rjmp	.+78     	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
				case(Port_C) :SET_BIT(DDRC,Copy_u8PinNumber);break;
    13f2:	a4 e3       	ldi	r26, 0x34	; 52
    13f4:	b0 e0       	ldi	r27, 0x00	; 0
    13f6:	e4 e3       	ldi	r30, 0x34	; 52
    13f8:	f0 e0       	ldi	r31, 0x00	; 0
    13fa:	80 81       	ld	r24, Z
    13fc:	48 2f       	mov	r20, r24
    13fe:	8a 81       	ldd	r24, Y+2	; 0x02
    1400:	28 2f       	mov	r18, r24
    1402:	30 e0       	ldi	r19, 0x00	; 0
    1404:	81 e0       	ldi	r24, 0x01	; 1
    1406:	90 e0       	ldi	r25, 0x00	; 0
    1408:	02 2e       	mov	r0, r18
    140a:	02 c0       	rjmp	.+4      	; 0x1410 <DIO_VidSetPinDirection+0x1c2>
    140c:	88 0f       	add	r24, r24
    140e:	99 1f       	adc	r25, r25
    1410:	0a 94       	dec	r0
    1412:	e2 f7       	brpl	.-8      	; 0x140c <DIO_VidSetPinDirection+0x1be>
    1414:	84 2b       	or	r24, r20
    1416:	8c 93       	st	X, r24
    1418:	13 c0       	rjmp	.+38     	; 0x1440 <DIO_VidSetPinDirection+0x1f2>
				case(Port_D) :SET_BIT(DDRD,Copy_u8PinNumber);break;
    141a:	a1 e3       	ldi	r26, 0x31	; 49
    141c:	b0 e0       	ldi	r27, 0x00	; 0
    141e:	e1 e3       	ldi	r30, 0x31	; 49
    1420:	f0 e0       	ldi	r31, 0x00	; 0
    1422:	80 81       	ld	r24, Z
    1424:	48 2f       	mov	r20, r24
    1426:	8a 81       	ldd	r24, Y+2	; 0x02
    1428:	28 2f       	mov	r18, r24
    142a:	30 e0       	ldi	r19, 0x00	; 0
    142c:	81 e0       	ldi	r24, 0x01	; 1
    142e:	90 e0       	ldi	r25, 0x00	; 0
    1430:	02 2e       	mov	r0, r18
    1432:	02 c0       	rjmp	.+4      	; 0x1438 <DIO_VidSetPinDirection+0x1ea>
    1434:	88 0f       	add	r24, r24
    1436:	99 1f       	adc	r25, r25
    1438:	0a 94       	dec	r0
    143a:	e2 f7       	brpl	.-8      	; 0x1434 <DIO_VidSetPinDirection+0x1e6>
    143c:	84 2b       	or	r24, r20
    143e:	8c 93       	st	X, r24
				}
	}
}
    1440:	27 96       	adiw	r28, 0x07	; 7
    1442:	0f b6       	in	r0, 0x3f	; 63
    1444:	f8 94       	cli
    1446:	de bf       	out	0x3e, r29	; 62
    1448:	0f be       	out	0x3f, r0	; 63
    144a:	cd bf       	out	0x3d, r28	; 61
    144c:	cf 91       	pop	r28
    144e:	df 91       	pop	r29
    1450:	08 95       	ret

00001452 <DIO_VidGetPinValue>:

void DIO_VidGetPinValue(u8 copy_u8port , u8 Copy_u8PinNumber,u8 *Copy_pu8PinValue){
    1452:	df 93       	push	r29
    1454:	cf 93       	push	r28
    1456:	00 d0       	rcall	.+0      	; 0x1458 <DIO_VidGetPinValue+0x6>
    1458:	00 d0       	rcall	.+0      	; 0x145a <DIO_VidGetPinValue+0x8>
    145a:	00 d0       	rcall	.+0      	; 0x145c <DIO_VidGetPinValue+0xa>
    145c:	cd b7       	in	r28, 0x3d	; 61
    145e:	de b7       	in	r29, 0x3e	; 62
    1460:	89 83       	std	Y+1, r24	; 0x01
    1462:	6a 83       	std	Y+2, r22	; 0x02
    1464:	5c 83       	std	Y+4, r21	; 0x04
    1466:	4b 83       	std	Y+3, r20	; 0x03
	switch (copy_u8port)
    1468:	89 81       	ldd	r24, Y+1	; 0x01
    146a:	28 2f       	mov	r18, r24
    146c:	30 e0       	ldi	r19, 0x00	; 0
    146e:	3e 83       	std	Y+6, r19	; 0x06
    1470:	2d 83       	std	Y+5, r18	; 0x05
    1472:	4d 81       	ldd	r20, Y+5	; 0x05
    1474:	5e 81       	ldd	r21, Y+6	; 0x06
    1476:	43 30       	cpi	r20, 0x03	; 3
    1478:	51 05       	cpc	r21, r1
    147a:	59 f1       	breq	.+86     	; 0x14d2 <DIO_VidGetPinValue+0x80>
    147c:	8d 81       	ldd	r24, Y+5	; 0x05
    147e:	9e 81       	ldd	r25, Y+6	; 0x06
    1480:	84 30       	cpi	r24, 0x04	; 4
    1482:	91 05       	cpc	r25, r1
    1484:	34 f4       	brge	.+12     	; 0x1492 <DIO_VidGetPinValue+0x40>
    1486:	2d 81       	ldd	r18, Y+5	; 0x05
    1488:	3e 81       	ldd	r19, Y+6	; 0x06
    148a:	22 30       	cpi	r18, 0x02	; 2
    148c:	31 05       	cpc	r19, r1
    148e:	69 f0       	breq	.+26     	; 0x14aa <DIO_VidGetPinValue+0x58>
    1490:	5b c0       	rjmp	.+182    	; 0x1548 <DIO_VidGetPinValue+0xf6>
    1492:	4d 81       	ldd	r20, Y+5	; 0x05
    1494:	5e 81       	ldd	r21, Y+6	; 0x06
    1496:	44 30       	cpi	r20, 0x04	; 4
    1498:	51 05       	cpc	r21, r1
    149a:	79 f1       	breq	.+94     	; 0x14fa <DIO_VidGetPinValue+0xa8>
    149c:	8d 81       	ldd	r24, Y+5	; 0x05
    149e:	9e 81       	ldd	r25, Y+6	; 0x06
    14a0:	85 30       	cpi	r24, 0x05	; 5
    14a2:	91 05       	cpc	r25, r1
    14a4:	09 f4       	brne	.+2      	; 0x14a8 <DIO_VidGetPinValue+0x56>
    14a6:	3d c0       	rjmp	.+122    	; 0x1522 <DIO_VidGetPinValue+0xd0>
    14a8:	4f c0       	rjmp	.+158    	; 0x1548 <DIO_VidGetPinValue+0xf6>
			{
			case(Port_A) :*Copy_pu8PinValue= GET_BIT(PINA,Copy_u8PinNumber);break;
    14aa:	e9 e3       	ldi	r30, 0x39	; 57
    14ac:	f0 e0       	ldi	r31, 0x00	; 0
    14ae:	80 81       	ld	r24, Z
    14b0:	28 2f       	mov	r18, r24
    14b2:	30 e0       	ldi	r19, 0x00	; 0
    14b4:	8a 81       	ldd	r24, Y+2	; 0x02
    14b6:	88 2f       	mov	r24, r24
    14b8:	90 e0       	ldi	r25, 0x00	; 0
    14ba:	a9 01       	movw	r20, r18
    14bc:	02 c0       	rjmp	.+4      	; 0x14c2 <DIO_VidGetPinValue+0x70>
    14be:	55 95       	asr	r21
    14c0:	47 95       	ror	r20
    14c2:	8a 95       	dec	r24
    14c4:	e2 f7       	brpl	.-8      	; 0x14be <DIO_VidGetPinValue+0x6c>
    14c6:	ca 01       	movw	r24, r20
    14c8:	81 70       	andi	r24, 0x01	; 1
    14ca:	eb 81       	ldd	r30, Y+3	; 0x03
    14cc:	fc 81       	ldd	r31, Y+4	; 0x04
    14ce:	80 83       	st	Z, r24
    14d0:	3b c0       	rjmp	.+118    	; 0x1548 <DIO_VidGetPinValue+0xf6>
			case(Port_B) :*Copy_pu8PinValue= GET_BIT(PINB,Copy_u8PinNumber);break;
    14d2:	e6 e3       	ldi	r30, 0x36	; 54
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	28 2f       	mov	r18, r24
    14da:	30 e0       	ldi	r19, 0x00	; 0
    14dc:	8a 81       	ldd	r24, Y+2	; 0x02
    14de:	88 2f       	mov	r24, r24
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	a9 01       	movw	r20, r18
    14e4:	02 c0       	rjmp	.+4      	; 0x14ea <DIO_VidGetPinValue+0x98>
    14e6:	55 95       	asr	r21
    14e8:	47 95       	ror	r20
    14ea:	8a 95       	dec	r24
    14ec:	e2 f7       	brpl	.-8      	; 0x14e6 <DIO_VidGetPinValue+0x94>
    14ee:	ca 01       	movw	r24, r20
    14f0:	81 70       	andi	r24, 0x01	; 1
    14f2:	eb 81       	ldd	r30, Y+3	; 0x03
    14f4:	fc 81       	ldd	r31, Y+4	; 0x04
    14f6:	80 83       	st	Z, r24
    14f8:	27 c0       	rjmp	.+78     	; 0x1548 <DIO_VidGetPinValue+0xf6>
			case(Port_C) :*Copy_pu8PinValue= GET_BIT(PINC,Copy_u8PinNumber);break;
    14fa:	e3 e3       	ldi	r30, 0x33	; 51
    14fc:	f0 e0       	ldi	r31, 0x00	; 0
    14fe:	80 81       	ld	r24, Z
    1500:	28 2f       	mov	r18, r24
    1502:	30 e0       	ldi	r19, 0x00	; 0
    1504:	8a 81       	ldd	r24, Y+2	; 0x02
    1506:	88 2f       	mov	r24, r24
    1508:	90 e0       	ldi	r25, 0x00	; 0
    150a:	a9 01       	movw	r20, r18
    150c:	02 c0       	rjmp	.+4      	; 0x1512 <DIO_VidGetPinValue+0xc0>
    150e:	55 95       	asr	r21
    1510:	47 95       	ror	r20
    1512:	8a 95       	dec	r24
    1514:	e2 f7       	brpl	.-8      	; 0x150e <DIO_VidGetPinValue+0xbc>
    1516:	ca 01       	movw	r24, r20
    1518:	81 70       	andi	r24, 0x01	; 1
    151a:	eb 81       	ldd	r30, Y+3	; 0x03
    151c:	fc 81       	ldd	r31, Y+4	; 0x04
    151e:	80 83       	st	Z, r24
    1520:	13 c0       	rjmp	.+38     	; 0x1548 <DIO_VidGetPinValue+0xf6>
			case(Port_D) :*Copy_pu8PinValue= GET_BIT(PIND,Copy_u8PinNumber);break;
    1522:	e0 e3       	ldi	r30, 0x30	; 48
    1524:	f0 e0       	ldi	r31, 0x00	; 0
    1526:	80 81       	ld	r24, Z
    1528:	28 2f       	mov	r18, r24
    152a:	30 e0       	ldi	r19, 0x00	; 0
    152c:	8a 81       	ldd	r24, Y+2	; 0x02
    152e:	88 2f       	mov	r24, r24
    1530:	90 e0       	ldi	r25, 0x00	; 0
    1532:	a9 01       	movw	r20, r18
    1534:	02 c0       	rjmp	.+4      	; 0x153a <DIO_VidGetPinValue+0xe8>
    1536:	55 95       	asr	r21
    1538:	47 95       	ror	r20
    153a:	8a 95       	dec	r24
    153c:	e2 f7       	brpl	.-8      	; 0x1536 <DIO_VidGetPinValue+0xe4>
    153e:	ca 01       	movw	r24, r20
    1540:	81 70       	andi	r24, 0x01	; 1
    1542:	eb 81       	ldd	r30, Y+3	; 0x03
    1544:	fc 81       	ldd	r31, Y+4	; 0x04
    1546:	80 83       	st	Z, r24
			}

}
    1548:	26 96       	adiw	r28, 0x06	; 6
    154a:	0f b6       	in	r0, 0x3f	; 63
    154c:	f8 94       	cli
    154e:	de bf       	out	0x3e, r29	; 62
    1550:	0f be       	out	0x3f, r0	; 63
    1552:	cd bf       	out	0x3d, r28	; 61
    1554:	cf 91       	pop	r28
    1556:	df 91       	pop	r29
    1558:	08 95       	ret

0000155a <DIO_VidSetPortValue>:



/*Set_Port*/

void DIO_VidSetPortValue(u8 copy_u8port , u8 Copy_u8Value ){
    155a:	df 93       	push	r29
    155c:	cf 93       	push	r28
    155e:	00 d0       	rcall	.+0      	; 0x1560 <DIO_VidSetPortValue+0x6>
    1560:	00 d0       	rcall	.+0      	; 0x1562 <DIO_VidSetPortValue+0x8>
    1562:	cd b7       	in	r28, 0x3d	; 61
    1564:	de b7       	in	r29, 0x3e	; 62
    1566:	89 83       	std	Y+1, r24	; 0x01
    1568:	6a 83       	std	Y+2, r22	; 0x02

			switch (copy_u8port)
    156a:	89 81       	ldd	r24, Y+1	; 0x01
    156c:	28 2f       	mov	r18, r24
    156e:	30 e0       	ldi	r19, 0x00	; 0
    1570:	3c 83       	std	Y+4, r19	; 0x04
    1572:	2b 83       	std	Y+3, r18	; 0x03
    1574:	8b 81       	ldd	r24, Y+3	; 0x03
    1576:	9c 81       	ldd	r25, Y+4	; 0x04
    1578:	83 30       	cpi	r24, 0x03	; 3
    157a:	91 05       	cpc	r25, r1
    157c:	d9 f0       	breq	.+54     	; 0x15b4 <DIO_VidSetPortValue+0x5a>
    157e:	2b 81       	ldd	r18, Y+3	; 0x03
    1580:	3c 81       	ldd	r19, Y+4	; 0x04
    1582:	24 30       	cpi	r18, 0x04	; 4
    1584:	31 05       	cpc	r19, r1
    1586:	34 f4       	brge	.+12     	; 0x1594 <DIO_VidSetPortValue+0x3a>
    1588:	8b 81       	ldd	r24, Y+3	; 0x03
    158a:	9c 81       	ldd	r25, Y+4	; 0x04
    158c:	82 30       	cpi	r24, 0x02	; 2
    158e:	91 05       	cpc	r25, r1
    1590:	61 f0       	breq	.+24     	; 0x15aa <DIO_VidSetPortValue+0x50>
    1592:	1e c0       	rjmp	.+60     	; 0x15d0 <DIO_VidSetPortValue+0x76>
    1594:	2b 81       	ldd	r18, Y+3	; 0x03
    1596:	3c 81       	ldd	r19, Y+4	; 0x04
    1598:	24 30       	cpi	r18, 0x04	; 4
    159a:	31 05       	cpc	r19, r1
    159c:	81 f0       	breq	.+32     	; 0x15be <DIO_VidSetPortValue+0x64>
    159e:	8b 81       	ldd	r24, Y+3	; 0x03
    15a0:	9c 81       	ldd	r25, Y+4	; 0x04
    15a2:	85 30       	cpi	r24, 0x05	; 5
    15a4:	91 05       	cpc	r25, r1
    15a6:	81 f0       	breq	.+32     	; 0x15c8 <DIO_VidSetPortValue+0x6e>
    15a8:	13 c0       	rjmp	.+38     	; 0x15d0 <DIO_VidSetPortValue+0x76>
					{
					case(Port_A) :PORTA=Copy_u8Value;break;
    15aa:	eb e3       	ldi	r30, 0x3B	; 59
    15ac:	f0 e0       	ldi	r31, 0x00	; 0
    15ae:	8a 81       	ldd	r24, Y+2	; 0x02
    15b0:	80 83       	st	Z, r24
    15b2:	0e c0       	rjmp	.+28     	; 0x15d0 <DIO_VidSetPortValue+0x76>
					case(Port_B) :PORTB=Copy_u8Value;break;
    15b4:	e8 e3       	ldi	r30, 0x38	; 56
    15b6:	f0 e0       	ldi	r31, 0x00	; 0
    15b8:	8a 81       	ldd	r24, Y+2	; 0x02
    15ba:	80 83       	st	Z, r24
    15bc:	09 c0       	rjmp	.+18     	; 0x15d0 <DIO_VidSetPortValue+0x76>
					case(Port_C) :PORTC=Copy_u8Value;break;
    15be:	e5 e3       	ldi	r30, 0x35	; 53
    15c0:	f0 e0       	ldi	r31, 0x00	; 0
    15c2:	8a 81       	ldd	r24, Y+2	; 0x02
    15c4:	80 83       	st	Z, r24
    15c6:	04 c0       	rjmp	.+8      	; 0x15d0 <DIO_VidSetPortValue+0x76>
					case(Port_D) :PORTD=Copy_u8Value;break;
    15c8:	e2 e3       	ldi	r30, 0x32	; 50
    15ca:	f0 e0       	ldi	r31, 0x00	; 0
    15cc:	8a 81       	ldd	r24, Y+2	; 0x02
    15ce:	80 83       	st	Z, r24
					}

}
    15d0:	0f 90       	pop	r0
    15d2:	0f 90       	pop	r0
    15d4:	0f 90       	pop	r0
    15d6:	0f 90       	pop	r0
    15d8:	cf 91       	pop	r28
    15da:	df 91       	pop	r29
    15dc:	08 95       	ret

000015de <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection(u8 copy_u8port , u8 Copy_u8PortDeriction ){
    15de:	df 93       	push	r29
    15e0:	cf 93       	push	r28
    15e2:	00 d0       	rcall	.+0      	; 0x15e4 <DIO_VidSetPortDirection+0x6>
    15e4:	00 d0       	rcall	.+0      	; 0x15e6 <DIO_VidSetPortDirection+0x8>
    15e6:	cd b7       	in	r28, 0x3d	; 61
    15e8:	de b7       	in	r29, 0x3e	; 62
    15ea:	89 83       	std	Y+1, r24	; 0x01
    15ec:	6a 83       	std	Y+2, r22	; 0x02

		switch (copy_u8port)
    15ee:	89 81       	ldd	r24, Y+1	; 0x01
    15f0:	28 2f       	mov	r18, r24
    15f2:	30 e0       	ldi	r19, 0x00	; 0
    15f4:	3c 83       	std	Y+4, r19	; 0x04
    15f6:	2b 83       	std	Y+3, r18	; 0x03
    15f8:	8b 81       	ldd	r24, Y+3	; 0x03
    15fa:	9c 81       	ldd	r25, Y+4	; 0x04
    15fc:	83 30       	cpi	r24, 0x03	; 3
    15fe:	91 05       	cpc	r25, r1
    1600:	d9 f0       	breq	.+54     	; 0x1638 <DIO_VidSetPortDirection+0x5a>
    1602:	2b 81       	ldd	r18, Y+3	; 0x03
    1604:	3c 81       	ldd	r19, Y+4	; 0x04
    1606:	24 30       	cpi	r18, 0x04	; 4
    1608:	31 05       	cpc	r19, r1
    160a:	34 f4       	brge	.+12     	; 0x1618 <DIO_VidSetPortDirection+0x3a>
    160c:	8b 81       	ldd	r24, Y+3	; 0x03
    160e:	9c 81       	ldd	r25, Y+4	; 0x04
    1610:	82 30       	cpi	r24, 0x02	; 2
    1612:	91 05       	cpc	r25, r1
    1614:	61 f0       	breq	.+24     	; 0x162e <DIO_VidSetPortDirection+0x50>
    1616:	1e c0       	rjmp	.+60     	; 0x1654 <DIO_VidSetPortDirection+0x76>
    1618:	2b 81       	ldd	r18, Y+3	; 0x03
    161a:	3c 81       	ldd	r19, Y+4	; 0x04
    161c:	24 30       	cpi	r18, 0x04	; 4
    161e:	31 05       	cpc	r19, r1
    1620:	81 f0       	breq	.+32     	; 0x1642 <DIO_VidSetPortDirection+0x64>
    1622:	8b 81       	ldd	r24, Y+3	; 0x03
    1624:	9c 81       	ldd	r25, Y+4	; 0x04
    1626:	85 30       	cpi	r24, 0x05	; 5
    1628:	91 05       	cpc	r25, r1
    162a:	81 f0       	breq	.+32     	; 0x164c <DIO_VidSetPortDirection+0x6e>
    162c:	13 c0       	rjmp	.+38     	; 0x1654 <DIO_VidSetPortDirection+0x76>
		{
			case(Port_A) :DDRA = Copy_u8PortDeriction ; break;
    162e:	ea e3       	ldi	r30, 0x3A	; 58
    1630:	f0 e0       	ldi	r31, 0x00	; 0
    1632:	8a 81       	ldd	r24, Y+2	; 0x02
    1634:	80 83       	st	Z, r24
    1636:	0e c0       	rjmp	.+28     	; 0x1654 <DIO_VidSetPortDirection+0x76>
			case(Port_B) :DDRB = Copy_u8PortDeriction ; break;
    1638:	e7 e3       	ldi	r30, 0x37	; 55
    163a:	f0 e0       	ldi	r31, 0x00	; 0
    163c:	8a 81       	ldd	r24, Y+2	; 0x02
    163e:	80 83       	st	Z, r24
    1640:	09 c0       	rjmp	.+18     	; 0x1654 <DIO_VidSetPortDirection+0x76>
			case(Port_C) :DDRC = Copy_u8PortDeriction ; break;
    1642:	e4 e3       	ldi	r30, 0x34	; 52
    1644:	f0 e0       	ldi	r31, 0x00	; 0
    1646:	8a 81       	ldd	r24, Y+2	; 0x02
    1648:	80 83       	st	Z, r24
    164a:	04 c0       	rjmp	.+8      	; 0x1654 <DIO_VidSetPortDirection+0x76>
			case(Port_D) :DDRD = Copy_u8PortDeriction ; break;
    164c:	e1 e3       	ldi	r30, 0x31	; 49
    164e:	f0 e0       	ldi	r31, 0x00	; 0
    1650:	8a 81       	ldd	r24, Y+2	; 0x02
    1652:	80 83       	st	Z, r24
		}
}
    1654:	0f 90       	pop	r0
    1656:	0f 90       	pop	r0
    1658:	0f 90       	pop	r0
    165a:	0f 90       	pop	r0
    165c:	cf 91       	pop	r28
    165e:	df 91       	pop	r29
    1660:	08 95       	ret

00001662 <DIO_VidGetPortValue>:
void DIO_VidGetPortValue(u8 copy_u8port , u8 *Copy_Pu8PortValue ){
    1662:	df 93       	push	r29
    1664:	cf 93       	push	r28
    1666:	00 d0       	rcall	.+0      	; 0x1668 <DIO_VidGetPortValue+0x6>
    1668:	00 d0       	rcall	.+0      	; 0x166a <DIO_VidGetPortValue+0x8>
    166a:	0f 92       	push	r0
    166c:	cd b7       	in	r28, 0x3d	; 61
    166e:	de b7       	in	r29, 0x3e	; 62
    1670:	89 83       	std	Y+1, r24	; 0x01
    1672:	7b 83       	std	Y+3, r23	; 0x03
    1674:	6a 83       	std	Y+2, r22	; 0x02
	switch (copy_u8port)
    1676:	89 81       	ldd	r24, Y+1	; 0x01
    1678:	28 2f       	mov	r18, r24
    167a:	30 e0       	ldi	r19, 0x00	; 0
    167c:	3d 83       	std	Y+5, r19	; 0x05
    167e:	2c 83       	std	Y+4, r18	; 0x04
    1680:	8c 81       	ldd	r24, Y+4	; 0x04
    1682:	9d 81       	ldd	r25, Y+5	; 0x05
    1684:	83 30       	cpi	r24, 0x03	; 3
    1686:	91 05       	cpc	r25, r1
    1688:	e9 f0       	breq	.+58     	; 0x16c4 <DIO_VidGetPortValue+0x62>
    168a:	2c 81       	ldd	r18, Y+4	; 0x04
    168c:	3d 81       	ldd	r19, Y+5	; 0x05
    168e:	24 30       	cpi	r18, 0x04	; 4
    1690:	31 05       	cpc	r19, r1
    1692:	34 f4       	brge	.+12     	; 0x16a0 <DIO_VidGetPortValue+0x3e>
    1694:	8c 81       	ldd	r24, Y+4	; 0x04
    1696:	9d 81       	ldd	r25, Y+5	; 0x05
    1698:	82 30       	cpi	r24, 0x02	; 2
    169a:	91 05       	cpc	r25, r1
    169c:	61 f0       	breq	.+24     	; 0x16b6 <DIO_VidGetPortValue+0x54>
    169e:	26 c0       	rjmp	.+76     	; 0x16ec <DIO_VidGetPortValue+0x8a>
    16a0:	2c 81       	ldd	r18, Y+4	; 0x04
    16a2:	3d 81       	ldd	r19, Y+5	; 0x05
    16a4:	24 30       	cpi	r18, 0x04	; 4
    16a6:	31 05       	cpc	r19, r1
    16a8:	a1 f0       	breq	.+40     	; 0x16d2 <DIO_VidGetPortValue+0x70>
    16aa:	8c 81       	ldd	r24, Y+4	; 0x04
    16ac:	9d 81       	ldd	r25, Y+5	; 0x05
    16ae:	85 30       	cpi	r24, 0x05	; 5
    16b0:	91 05       	cpc	r25, r1
    16b2:	b1 f0       	breq	.+44     	; 0x16e0 <DIO_VidGetPortValue+0x7e>
    16b4:	1b c0       	rjmp	.+54     	; 0x16ec <DIO_VidGetPortValue+0x8a>
				{
				case(Port_A) :*Copy_Pu8PortValue= PINA ; break;
    16b6:	e9 e3       	ldi	r30, 0x39	; 57
    16b8:	f0 e0       	ldi	r31, 0x00	; 0
    16ba:	80 81       	ld	r24, Z
    16bc:	ea 81       	ldd	r30, Y+2	; 0x02
    16be:	fb 81       	ldd	r31, Y+3	; 0x03
    16c0:	80 83       	st	Z, r24
    16c2:	14 c0       	rjmp	.+40     	; 0x16ec <DIO_VidGetPortValue+0x8a>
				case(Port_B) :*Copy_Pu8PortValue= PINB ; break;
    16c4:	e6 e3       	ldi	r30, 0x36	; 54
    16c6:	f0 e0       	ldi	r31, 0x00	; 0
    16c8:	80 81       	ld	r24, Z
    16ca:	ea 81       	ldd	r30, Y+2	; 0x02
    16cc:	fb 81       	ldd	r31, Y+3	; 0x03
    16ce:	80 83       	st	Z, r24
    16d0:	0d c0       	rjmp	.+26     	; 0x16ec <DIO_VidGetPortValue+0x8a>
				case(Port_C) :*Copy_Pu8PortValue= PINC ; break;
    16d2:	e3 e3       	ldi	r30, 0x33	; 51
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	80 81       	ld	r24, Z
    16d8:	ea 81       	ldd	r30, Y+2	; 0x02
    16da:	fb 81       	ldd	r31, Y+3	; 0x03
    16dc:	80 83       	st	Z, r24
    16de:	06 c0       	rjmp	.+12     	; 0x16ec <DIO_VidGetPortValue+0x8a>
				case(Port_D) :*Copy_Pu8PortValue= PIND ; break;
    16e0:	e0 e3       	ldi	r30, 0x30	; 48
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	80 81       	ld	r24, Z
    16e6:	ea 81       	ldd	r30, Y+2	; 0x02
    16e8:	fb 81       	ldd	r31, Y+3	; 0x03
    16ea:	80 83       	st	Z, r24
				}
}
    16ec:	0f 90       	pop	r0
    16ee:	0f 90       	pop	r0
    16f0:	0f 90       	pop	r0
    16f2:	0f 90       	pop	r0
    16f4:	0f 90       	pop	r0
    16f6:	cf 91       	pop	r28
    16f8:	df 91       	pop	r29
    16fa:	08 95       	ret

000016fc <GIE_VidEnable>:
#include "GIE_private.h"
#include "GIE_interface.h"

/*GIE Enable*/

void GIE_VidEnable (void){
    16fc:	df 93       	push	r29
    16fe:	cf 93       	push	r28
    1700:	cd b7       	in	r28, 0x3d	; 61
    1702:	de b7       	in	r29, 0x3e	; 62

	SET_BIT(SREG,SREG_I_BIT);
    1704:	af e5       	ldi	r26, 0x5F	; 95
    1706:	b0 e0       	ldi	r27, 0x00	; 0
    1708:	ef e5       	ldi	r30, 0x5F	; 95
    170a:	f0 e0       	ldi	r31, 0x00	; 0
    170c:	80 81       	ld	r24, Z
    170e:	80 68       	ori	r24, 0x80	; 128
    1710:	8c 93       	st	X, r24




}
    1712:	cf 91       	pop	r28
    1714:	df 91       	pop	r29
    1716:	08 95       	ret

00001718 <GIE_VidDisEnable>:

/*GIE DisEnable*/

void GIE_VidDisEnable (void){
    1718:	df 93       	push	r29
    171a:	cf 93       	push	r28
    171c:	cd b7       	in	r28, 0x3d	; 61
    171e:	de b7       	in	r29, 0x3e	; 62



	CLEAR_BIT(SREG,SREG_I_BIT);
    1720:	af e5       	ldi	r26, 0x5F	; 95
    1722:	b0 e0       	ldi	r27, 0x00	; 0
    1724:	ef e5       	ldi	r30, 0x5F	; 95
    1726:	f0 e0       	ldi	r31, 0x00	; 0
    1728:	80 81       	ld	r24, Z
    172a:	8f 77       	andi	r24, 0x7F	; 127
    172c:	8c 93       	st	X, r24



}
    172e:	cf 91       	pop	r28
    1730:	df 91       	pop	r29
    1732:	08 95       	ret

00001734 <TIMR1_VidInit>:
//}

//*/
                                            /*************************************************************************/

void TIMR1_VidInit(){
    1734:	df 93       	push	r29
    1736:	cf 93       	push	r28
    1738:	cd b7       	in	r28, 0x3d	; 61
    173a:	de b7       	in	r29, 0x3e	; 62

		//set fast pwm non _inverting
	SET_BIT(TCCR1A ,TCCR0_COM1A1_PIN);
    173c:	af e4       	ldi	r26, 0x4F	; 79
    173e:	b0 e0       	ldi	r27, 0x00	; 0
    1740:	ef e4       	ldi	r30, 0x4F	; 79
    1742:	f0 e0       	ldi	r31, 0x00	; 0
    1744:	80 81       	ld	r24, Z
    1746:	80 68       	ori	r24, 0x80	; 128
    1748:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1A ,TCCR0_COM1A0_PIN);
    174a:	af e4       	ldi	r26, 0x4F	; 79
    174c:	b0 e0       	ldi	r27, 0x00	; 0
    174e:	ef e4       	ldi	r30, 0x4F	; 79
    1750:	f0 e0       	ldi	r31, 0x00	; 0
    1752:	80 81       	ld	r24, Z
    1754:	8f 7b       	andi	r24, 0xBF	; 191
    1756:	8c 93       	st	X, r24

	//select wave generation mode
	CLEAR_BIT(TCCR1A ,TCCR0_WGM10_PIN);
    1758:	af e4       	ldi	r26, 0x4F	; 79
    175a:	b0 e0       	ldi	r27, 0x00	; 0
    175c:	ef e4       	ldi	r30, 0x4F	; 79
    175e:	f0 e0       	ldi	r31, 0x00	; 0
    1760:	80 81       	ld	r24, Z
    1762:	8e 7f       	andi	r24, 0xFE	; 254
    1764:	8c 93       	st	X, r24
	SET_BIT(TCCR1A ,TCCR0_WGM11_PIN);
    1766:	af e4       	ldi	r26, 0x4F	; 79
    1768:	b0 e0       	ldi	r27, 0x00	; 0
    176a:	ef e4       	ldi	r30, 0x4F	; 79
    176c:	f0 e0       	ldi	r31, 0x00	; 0
    176e:	80 81       	ld	r24, Z
    1770:	82 60       	ori	r24, 0x02	; 2
    1772:	8c 93       	st	X, r24
	SET_BIT(TCCR1B ,TCCR0_WGM12_PIN);
    1774:	ae e4       	ldi	r26, 0x4E	; 78
    1776:	b0 e0       	ldi	r27, 0x00	; 0
    1778:	ee e4       	ldi	r30, 0x4E	; 78
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	80 81       	ld	r24, Z
    177e:	88 60       	ori	r24, 0x08	; 8
    1780:	8c 93       	st	X, r24
	SET_BIT(TCCR1B ,TCCR0_WGM13_PIN);
    1782:	ae e4       	ldi	r26, 0x4E	; 78
    1784:	b0 e0       	ldi	r27, 0x00	; 0
    1786:	ee e4       	ldi	r30, 0x4E	; 78
    1788:	f0 e0       	ldi	r31, 0x00	; 0
    178a:	80 81       	ld	r24, Z
    178c:	80 61       	ori	r24, 0x10	; 16
    178e:	8c 93       	st	X, r24

	//Select prescaller
	CLEAR_BIT(TCCR1B ,TCCR0_CS10_PIN);
    1790:	ae e4       	ldi	r26, 0x4E	; 78
    1792:	b0 e0       	ldi	r27, 0x00	; 0
    1794:	ee e4       	ldi	r30, 0x4E	; 78
    1796:	f0 e0       	ldi	r31, 0x00	; 0
    1798:	80 81       	ld	r24, Z
    179a:	8e 7f       	andi	r24, 0xFE	; 254
    179c:	8c 93       	st	X, r24
	SET_BIT(TCCR1B ,TCCR0_CS11_PIN);
    179e:	ae e4       	ldi	r26, 0x4E	; 78
    17a0:	b0 e0       	ldi	r27, 0x00	; 0
    17a2:	ee e4       	ldi	r30, 0x4E	; 78
    17a4:	f0 e0       	ldi	r31, 0x00	; 0
    17a6:	80 81       	ld	r24, Z
    17a8:	82 60       	ori	r24, 0x02	; 2
    17aa:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1B ,TCCR0_CS12_PIN);
    17ac:	ae e4       	ldi	r26, 0x4E	; 78
    17ae:	b0 e0       	ldi	r27, 0x00	; 0
    17b0:	ee e4       	ldi	r30, 0x4E	; 78
    17b2:	f0 e0       	ldi	r31, 0x00	; 0
    17b4:	80 81       	ld	r24, Z
    17b6:	8b 7f       	andi	r24, 0xFB	; 251
    17b8:	8c 93       	st	X, r24

}
    17ba:	cf 91       	pop	r28
    17bc:	df 91       	pop	r29
    17be:	08 95       	ret

000017c0 <TIMR_VidSetICR>:

void TIMR_VidSetICR(u16 Copy_u16TOP){
    17c0:	df 93       	push	r29
    17c2:	cf 93       	push	r28
    17c4:	00 d0       	rcall	.+0      	; 0x17c6 <TIMR_VidSetICR+0x6>
    17c6:	cd b7       	in	r28, 0x3d	; 61
    17c8:	de b7       	in	r29, 0x3e	; 62
    17ca:	9a 83       	std	Y+2, r25	; 0x02
    17cc:	89 83       	std	Y+1, r24	; 0x01
	ICR1L = Copy_u16TOP;
    17ce:	e6 e4       	ldi	r30, 0x46	; 70
    17d0:	f0 e0       	ldi	r31, 0x00	; 0
    17d2:	89 81       	ldd	r24, Y+1	; 0x01
    17d4:	9a 81       	ldd	r25, Y+2	; 0x02
    17d6:	91 83       	std	Z+1, r25	; 0x01
    17d8:	80 83       	st	Z, r24
}
    17da:	0f 90       	pop	r0
    17dc:	0f 90       	pop	r0
    17de:	cf 91       	pop	r28
    17e0:	df 91       	pop	r29
    17e2:	08 95       	ret

000017e4 <TIMR_VidSetOCR>:

void TIMR_VidSetOCR(u16 Copy_u16OCR){
    17e4:	df 93       	push	r29
    17e6:	cf 93       	push	r28
    17e8:	00 d0       	rcall	.+0      	; 0x17ea <TIMR_VidSetOCR+0x6>
    17ea:	cd b7       	in	r28, 0x3d	; 61
    17ec:	de b7       	in	r29, 0x3e	; 62
    17ee:	9a 83       	std	Y+2, r25	; 0x02
    17f0:	89 83       	std	Y+1, r24	; 0x01

	OCR1AL = Copy_u16OCR;
    17f2:	ea e4       	ldi	r30, 0x4A	; 74
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	89 81       	ldd	r24, Y+1	; 0x01
    17f8:	9a 81       	ldd	r25, Y+2	; 0x02
    17fa:	91 83       	std	Z+1, r25	; 0x01
    17fc:	80 83       	st	Z, r24

}
    17fe:	0f 90       	pop	r0
    1800:	0f 90       	pop	r0
    1802:	cf 91       	pop	r28
    1804:	df 91       	pop	r29
    1806:	08 95       	ret

00001808 <ICU_INIT>:

                                         /*************************************************************************/
															             /*ICU*/
void ICU_INIT(){
    1808:	df 93       	push	r29
    180a:	cf 93       	push	r28
    180c:	cd b7       	in	r28, 0x3d	; 61
    180e:	de b7       	in	r29, 0x3e	; 62

	//select wave generation mode  normal
	CLEAR_BIT(TCCR1A ,TCCR0_WGM10_PIN);
    1810:	af e4       	ldi	r26, 0x4F	; 79
    1812:	b0 e0       	ldi	r27, 0x00	; 0
    1814:	ef e4       	ldi	r30, 0x4F	; 79
    1816:	f0 e0       	ldi	r31, 0x00	; 0
    1818:	80 81       	ld	r24, Z
    181a:	8e 7f       	andi	r24, 0xFE	; 254
    181c:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1A ,TCCR0_WGM11_PIN);
    181e:	af e4       	ldi	r26, 0x4F	; 79
    1820:	b0 e0       	ldi	r27, 0x00	; 0
    1822:	ef e4       	ldi	r30, 0x4F	; 79
    1824:	f0 e0       	ldi	r31, 0x00	; 0
    1826:	80 81       	ld	r24, Z
    1828:	8d 7f       	andi	r24, 0xFD	; 253
    182a:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1B ,TCCR0_WGM12_PIN);
    182c:	ae e4       	ldi	r26, 0x4E	; 78
    182e:	b0 e0       	ldi	r27, 0x00	; 0
    1830:	ee e4       	ldi	r30, 0x4E	; 78
    1832:	f0 e0       	ldi	r31, 0x00	; 0
    1834:	80 81       	ld	r24, Z
    1836:	87 7f       	andi	r24, 0xF7	; 247
    1838:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1B ,TCCR0_WGM13_PIN);
    183a:	ae e4       	ldi	r26, 0x4E	; 78
    183c:	b0 e0       	ldi	r27, 0x00	; 0
    183e:	ee e4       	ldi	r30, 0x4E	; 78
    1840:	f0 e0       	ldi	r31, 0x00	; 0
    1842:	80 81       	ld	r24, Z
    1844:	8f 7e       	andi	r24, 0xEF	; 239
    1846:	8c 93       	st	X, r24

	//Input Capture Noise Canceler
	SET_BIT(TCCR1B ,TCCR0_ICNC1_PIN);
    1848:	ae e4       	ldi	r26, 0x4E	; 78
    184a:	b0 e0       	ldi	r27, 0x00	; 0
    184c:	ee e4       	ldi	r30, 0x4E	; 78
    184e:	f0 e0       	ldi	r31, 0x00	; 0
    1850:	80 81       	ld	r24, Z
    1852:	80 68       	ori	r24, 0x80	; 128
    1854:	8c 93       	st	X, r24

	//Input Capture raising Edge
	SET_BIT(TCCR1B ,TCCR0_ICES1_PIN);
    1856:	ae e4       	ldi	r26, 0x4E	; 78
    1858:	b0 e0       	ldi	r27, 0x00	; 0
    185a:	ee e4       	ldi	r30, 0x4E	; 78
    185c:	f0 e0       	ldi	r31, 0x00	; 0
    185e:	80 81       	ld	r24, Z
    1860:	80 64       	ori	r24, 0x40	; 64
    1862:	8c 93       	st	X, r24

	//Select prescaller
	CLEAR_BIT(TCCR1B ,TCCR0_CS10_PIN);
    1864:	ae e4       	ldi	r26, 0x4E	; 78
    1866:	b0 e0       	ldi	r27, 0x00	; 0
    1868:	ee e4       	ldi	r30, 0x4E	; 78
    186a:	f0 e0       	ldi	r31, 0x00	; 0
    186c:	80 81       	ld	r24, Z
    186e:	8e 7f       	andi	r24, 0xFE	; 254
    1870:	8c 93       	st	X, r24
	SET_BIT(TCCR1B ,TCCR0_CS11_PIN);
    1872:	ae e4       	ldi	r26, 0x4E	; 78
    1874:	b0 e0       	ldi	r27, 0x00	; 0
    1876:	ee e4       	ldi	r30, 0x4E	; 78
    1878:	f0 e0       	ldi	r31, 0x00	; 0
    187a:	80 81       	ld	r24, Z
    187c:	82 60       	ori	r24, 0x02	; 2
    187e:	8c 93       	st	X, r24
	CLEAR_BIT(TCCR1B ,TCCR0_CS12_PIN);
    1880:	ae e4       	ldi	r26, 0x4E	; 78
    1882:	b0 e0       	ldi	r27, 0x00	; 0
    1884:	ee e4       	ldi	r30, 0x4E	; 78
    1886:	f0 e0       	ldi	r31, 0x00	; 0
    1888:	80 81       	ld	r24, Z
    188a:	8b 7f       	andi	r24, 0xFB	; 251
    188c:	8c 93       	st	X, r24
	// Input Capture Interrupt Enable
	SET_BIT(TIMSK , TIMSK_TICIE1_PIN );
    188e:	a9 e5       	ldi	r26, 0x59	; 89
    1890:	b0 e0       	ldi	r27, 0x00	; 0
    1892:	e9 e5       	ldi	r30, 0x59	; 89
    1894:	f0 e0       	ldi	r31, 0x00	; 0
    1896:	80 81       	ld	r24, Z
    1898:	80 62       	ori	r24, 0x20	; 32
    189a:	8c 93       	st	X, r24

}
    189c:	cf 91       	pop	r28
    189e:	df 91       	pop	r29
    18a0:	08 95       	ret

000018a2 <TIMR1_SetCallBack>:
static void (*TIMR1_SetCallbackFunc)(void) =NULL;

void TIMR1_SetCallBack(void(*copy_Pcallback)(void))
{
    18a2:	df 93       	push	r29
    18a4:	cf 93       	push	r28
    18a6:	00 d0       	rcall	.+0      	; 0x18a8 <TIMR1_SetCallBack+0x6>
    18a8:	cd b7       	in	r28, 0x3d	; 61
    18aa:	de b7       	in	r29, 0x3e	; 62
    18ac:	9a 83       	std	Y+2, r25	; 0x02
    18ae:	89 83       	std	Y+1, r24	; 0x01

	if(copy_Pcallback !=NULL)
    18b0:	89 81       	ldd	r24, Y+1	; 0x01
    18b2:	9a 81       	ldd	r25, Y+2	; 0x02
    18b4:	00 97       	sbiw	r24, 0x00	; 0
    18b6:	31 f0       	breq	.+12     	; 0x18c4 <TIMR1_SetCallBack+0x22>
	{
		TIMR1_SetCallbackFunc=copy_Pcallback;
    18b8:	89 81       	ldd	r24, Y+1	; 0x01
    18ba:	9a 81       	ldd	r25, Y+2	; 0x02
    18bc:	90 93 83 00 	sts	0x0083, r25
    18c0:	80 93 82 00 	sts	0x0082, r24
	}
}
    18c4:	0f 90       	pop	r0
    18c6:	0f 90       	pop	r0
    18c8:	cf 91       	pop	r28
    18ca:	df 91       	pop	r29
    18cc:	08 95       	ret

000018ce <__vector_9>:


void __vector_9(void)__attribute__((signal));

void __vector_9(void)
{
    18ce:	1f 92       	push	r1
    18d0:	0f 92       	push	r0
    18d2:	0f b6       	in	r0, 0x3f	; 63
    18d4:	0f 92       	push	r0
    18d6:	11 24       	eor	r1, r1
    18d8:	2f 93       	push	r18
    18da:	3f 93       	push	r19
    18dc:	4f 93       	push	r20
    18de:	5f 93       	push	r21
    18e0:	6f 93       	push	r22
    18e2:	7f 93       	push	r23
    18e4:	8f 93       	push	r24
    18e6:	9f 93       	push	r25
    18e8:	af 93       	push	r26
    18ea:	bf 93       	push	r27
    18ec:	ef 93       	push	r30
    18ee:	ff 93       	push	r31
    18f0:	df 93       	push	r29
    18f2:	cf 93       	push	r28
    18f4:	cd b7       	in	r28, 0x3d	; 61
    18f6:	de b7       	in	r29, 0x3e	; 62

if(TIMR1_SetCallbackFunc != NULL)
    18f8:	80 91 82 00 	lds	r24, 0x0082
    18fc:	90 91 83 00 	lds	r25, 0x0083
    1900:	00 97       	sbiw	r24, 0x00	; 0
    1902:	29 f0       	breq	.+10     	; 0x190e <__vector_9+0x40>
	{
		TIMR1_SetCallbackFunc();
    1904:	e0 91 82 00 	lds	r30, 0x0082
    1908:	f0 91 83 00 	lds	r31, 0x0083
    190c:	09 95       	icall
	}

}
    190e:	cf 91       	pop	r28
    1910:	df 91       	pop	r29
    1912:	ff 91       	pop	r31
    1914:	ef 91       	pop	r30
    1916:	bf 91       	pop	r27
    1918:	af 91       	pop	r26
    191a:	9f 91       	pop	r25
    191c:	8f 91       	pop	r24
    191e:	7f 91       	pop	r23
    1920:	6f 91       	pop	r22
    1922:	5f 91       	pop	r21
    1924:	4f 91       	pop	r20
    1926:	3f 91       	pop	r19
    1928:	2f 91       	pop	r18
    192a:	0f 90       	pop	r0
    192c:	0f be       	out	0x3f, r0	; 63
    192e:	0f 90       	pop	r0
    1930:	1f 90       	pop	r1
    1932:	18 95       	reti

00001934 <main>:
u16 period ,on_time;
u16 period_arr[20];
u16 on_time_arr[20];
u16 state ;

void main(){
    1934:	df 93       	push	r29
    1936:	cf 93       	push	r28
    1938:	cd b7       	in	r28, 0x3d	; 61
    193a:	de b7       	in	r29, 0x3e	; 62

	DIO_VidSetPinDirection(Port_A ,pin0,output);
    193c:	82 e0       	ldi	r24, 0x02	; 2
    193e:	60 e0       	ldi	r22, 0x00	; 0
    1940:	41 e0       	ldi	r20, 0x01	; 1
    1942:	0e 94 27 09 	call	0x124e	; 0x124e <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(Port_A ,pin1,output);
    1946:	82 e0       	ldi	r24, 0x02	; 2
    1948:	61 e0       	ldi	r22, 0x01	; 1
    194a:	41 e0       	ldi	r20, 0x01	; 1
    194c:	0e 94 27 09 	call	0x124e	; 0x124e <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(Port_A ,pin2,output);
    1950:	82 e0       	ldi	r24, 0x02	; 2
    1952:	62 e0       	ldi	r22, 0x02	; 2
    1954:	41 e0       	ldi	r20, 0x01	; 1
    1956:	0e 94 27 09 	call	0x124e	; 0x124e <DIO_VidSetPinDirection>
	DIO_VidSetPortDirection(Port_C,0xff);
    195a:	84 e0       	ldi	r24, 0x04	; 4
    195c:	6f ef       	ldi	r22, 0xFF	; 255
    195e:	0e 94 ef 0a 	call	0x15de	; 0x15de <DIO_VidSetPortDirection>

	ICU_INIT();
    1962:	0e 94 04 0c 	call	0x1808	; 0x1808 <ICU_INIT>
	TIMR1_SetCallBack(ISR_Blink);
    1966:	86 e1       	ldi	r24, 0x16	; 22
    1968:	9d e0       	ldi	r25, 0x0D	; 13
    196a:	0e 94 51 0c 	call	0x18a2	; 0x18a2 <TIMR1_SetCallBack>
	GIE_VidEnable();
    196e:	0e 94 7e 0b 	call	0x16fc	; 0x16fc <GIE_VidEnable>
	CLCD_VidInit();
    1972:	0e 94 df 06 	call	0xdbe	; 0xdbe <CLCD_VidInit>

	while(1){

		if (state =1)
    1976:	81 e0       	ldi	r24, 0x01	; 1
    1978:	90 e0       	ldi	r25, 0x00	; 0
    197a:	90 93 8b 00 	sts	0x008B, r25
    197e:	80 93 8a 00 	sts	0x008A, r24
		{
			CLCD_VidGotoXY(1,1);
    1982:	81 e0       	ldi	r24, 0x01	; 1
    1984:	90 e0       	ldi	r25, 0x00	; 0
    1986:	61 e0       	ldi	r22, 0x01	; 1
    1988:	70 e0       	ldi	r23, 0x00	; 0
    198a:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_VidGotoXY>
			sprintf(period_arr,"period =%i ",period);
    198e:	8c e8       	ldi	r24, 0x8C	; 140
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	20 91 b4 00 	lds	r18, 0x00B4
    1996:	30 91 b5 00 	lds	r19, 0x00B5
    199a:	00 d0       	rcall	.+0      	; 0x199c <main+0x68>
    199c:	00 d0       	rcall	.+0      	; 0x199e <main+0x6a>
    199e:	00 d0       	rcall	.+0      	; 0x19a0 <main+0x6c>
    19a0:	ed b7       	in	r30, 0x3d	; 61
    19a2:	fe b7       	in	r31, 0x3e	; 62
    19a4:	31 96       	adiw	r30, 0x01	; 1
    19a6:	91 83       	std	Z+1, r25	; 0x01
    19a8:	80 83       	st	Z, r24
    19aa:	80 e6       	ldi	r24, 0x60	; 96
    19ac:	90 e0       	ldi	r25, 0x00	; 0
    19ae:	93 83       	std	Z+3, r25	; 0x03
    19b0:	82 83       	std	Z+2, r24	; 0x02
    19b2:	35 83       	std	Z+5, r19	; 0x05
    19b4:	24 83       	std	Z+4, r18	; 0x04
    19b6:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <sprintf>
    19ba:	8d b7       	in	r24, 0x3d	; 61
    19bc:	9e b7       	in	r25, 0x3e	; 62
    19be:	06 96       	adiw	r24, 0x06	; 6
    19c0:	0f b6       	in	r0, 0x3f	; 63
    19c2:	f8 94       	cli
    19c4:	9e bf       	out	0x3e, r25	; 62
    19c6:	0f be       	out	0x3f, r0	; 63
    19c8:	8d bf       	out	0x3d, r24	; 61
			CLCD_String2(period_arr);
    19ca:	8c e8       	ldi	r24, 0x8C	; 140
    19cc:	90 e0       	ldi	r25, 0x00	; 0
    19ce:	0e 94 b6 07 	call	0xf6c	; 0xf6c <CLCD_String2>

			CLCD_VidGotoXY(2,1);
    19d2:	82 e0       	ldi	r24, 0x02	; 2
    19d4:	90 e0       	ldi	r25, 0x00	; 0
    19d6:	61 e0       	ldi	r22, 0x01	; 1
    19d8:	70 e0       	ldi	r23, 0x00	; 0
    19da:	0e 94 6d 07 	call	0xeda	; 0xeda <CLCD_VidGotoXY>
			sprintf(on_time_arr,"on_time =%i ",on_time);
    19de:	86 eb       	ldi	r24, 0xB6	; 182
    19e0:	90 e0       	ldi	r25, 0x00	; 0
    19e2:	20 91 de 00 	lds	r18, 0x00DE
    19e6:	30 91 df 00 	lds	r19, 0x00DF
    19ea:	00 d0       	rcall	.+0      	; 0x19ec <main+0xb8>
    19ec:	00 d0       	rcall	.+0      	; 0x19ee <main+0xba>
    19ee:	00 d0       	rcall	.+0      	; 0x19f0 <main+0xbc>
    19f0:	ed b7       	in	r30, 0x3d	; 61
    19f2:	fe b7       	in	r31, 0x3e	; 62
    19f4:	31 96       	adiw	r30, 0x01	; 1
    19f6:	91 83       	std	Z+1, r25	; 0x01
    19f8:	80 83       	st	Z, r24
    19fa:	8c e6       	ldi	r24, 0x6C	; 108
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	93 83       	std	Z+3, r25	; 0x03
    1a00:	82 83       	std	Z+2, r24	; 0x02
    1a02:	35 83       	std	Z+5, r19	; 0x05
    1a04:	24 83       	std	Z+4, r18	; 0x04
    1a06:	0e 94 b6 0d 	call	0x1b6c	; 0x1b6c <sprintf>
    1a0a:	8d b7       	in	r24, 0x3d	; 61
    1a0c:	9e b7       	in	r25, 0x3e	; 62
    1a0e:	06 96       	adiw	r24, 0x06	; 6
    1a10:	0f b6       	in	r0, 0x3f	; 63
    1a12:	f8 94       	cli
    1a14:	9e bf       	out	0x3e, r25	; 62
    1a16:	0f be       	out	0x3f, r0	; 63
    1a18:	8d bf       	out	0x3d, r24	; 61
			CLCD_String2(on_time_arr);
    1a1a:	86 eb       	ldi	r24, 0xB6	; 182
    1a1c:	90 e0       	ldi	r25, 0x00	; 0
    1a1e:	0e 94 b6 07 	call	0xf6c	; 0xf6c <CLCD_String2>

			state =0;
    1a22:	10 92 8b 00 	sts	0x008B, r1
    1a26:	10 92 8a 00 	sts	0x008A, r1
    1a2a:	a5 cf       	rjmp	.-182    	; 0x1976 <main+0x42>

00001a2c <ISR_Blink>:
	}


}

void ISR_Blink(void){
    1a2c:	df 93       	push	r29
    1a2e:	cf 93       	push	r28
    1a30:	cd b7       	in	r28, 0x3d	; 61
    1a32:	de b7       	in	r29, 0x3e	; 62
	static u8 counter =1;
	static u16 snip1, snip2 ,snip3;

	if(counter == 1){
    1a34:	80 91 81 00 	lds	r24, 0x0081
    1a38:	81 30       	cpi	r24, 0x01	; 1
    1a3a:	61 f4       	brne	.+24     	; 0x1a54 <ISR_Blink+0x28>

		snip1 = ICR1L;
    1a3c:	e6 e4       	ldi	r30, 0x46	; 70
    1a3e:	f0 e0       	ldi	r31, 0x00	; 0
    1a40:	80 81       	ld	r24, Z
    1a42:	91 81       	ldd	r25, Z+1	; 0x01
    1a44:	90 93 89 00 	sts	0x0089, r25
    1a48:	80 93 88 00 	sts	0x0088, r24

		counter=2;
    1a4c:	82 e0       	ldi	r24, 0x02	; 2
    1a4e:	80 93 81 00 	sts	0x0081, r24
    1a52:	52 c0       	rjmp	.+164    	; 0x1af8 <ISR_Blink+0xcc>
	}

	else if(counter == 2){
    1a54:	80 91 81 00 	lds	r24, 0x0081
    1a58:	82 30       	cpi	r24, 0x02	; 2
    1a5a:	19 f5       	brne	.+70     	; 0x1aa2 <ISR_Blink+0x76>
		snip2 =ICR1L;
    1a5c:	e6 e4       	ldi	r30, 0x46	; 70
    1a5e:	f0 e0       	ldi	r31, 0x00	; 0
    1a60:	80 81       	ld	r24, Z
    1a62:	91 81       	ldd	r25, Z+1	; 0x01
    1a64:	90 93 87 00 	sts	0x0087, r25
    1a68:	80 93 86 00 	sts	0x0086, r24
		period = snip2 -snip1 ;
    1a6c:	20 91 86 00 	lds	r18, 0x0086
    1a70:	30 91 87 00 	lds	r19, 0x0087
    1a74:	80 91 88 00 	lds	r24, 0x0088
    1a78:	90 91 89 00 	lds	r25, 0x0089
    1a7c:	a9 01       	movw	r20, r18
    1a7e:	48 1b       	sub	r20, r24
    1a80:	59 0b       	sbc	r21, r25
    1a82:	ca 01       	movw	r24, r20
    1a84:	90 93 b5 00 	sts	0x00B5, r25
    1a88:	80 93 b4 00 	sts	0x00B4, r24

		CLEAR_BIT(TCCR1B ,TCCR0_ICES1_PIN);   //Falling edge
    1a8c:	ae e4       	ldi	r26, 0x4E	; 78
    1a8e:	b0 e0       	ldi	r27, 0x00	; 0
    1a90:	ee e4       	ldi	r30, 0x4E	; 78
    1a92:	f0 e0       	ldi	r31, 0x00	; 0
    1a94:	80 81       	ld	r24, Z
    1a96:	8f 7b       	andi	r24, 0xBF	; 191
    1a98:	8c 93       	st	X, r24

		counter = 3;
    1a9a:	83 e0       	ldi	r24, 0x03	; 3
    1a9c:	80 93 81 00 	sts	0x0081, r24
    1aa0:	2b c0       	rjmp	.+86     	; 0x1af8 <ISR_Blink+0xcc>
	}
	else if(counter == 3)
    1aa2:	80 91 81 00 	lds	r24, 0x0081
    1aa6:	83 30       	cpi	r24, 0x03	; 3
    1aa8:	39 f5       	brne	.+78     	; 0x1af8 <ISR_Blink+0xcc>
	{
		snip3 =ICR1L;
    1aaa:	e6 e4       	ldi	r30, 0x46	; 70
    1aac:	f0 e0       	ldi	r31, 0x00	; 0
    1aae:	80 81       	ld	r24, Z
    1ab0:	91 81       	ldd	r25, Z+1	; 0x01
    1ab2:	90 93 85 00 	sts	0x0085, r25
    1ab6:	80 93 84 00 	sts	0x0084, r24
		on_time=snip3-snip2;
    1aba:	20 91 84 00 	lds	r18, 0x0084
    1abe:	30 91 85 00 	lds	r19, 0x0085
    1ac2:	80 91 86 00 	lds	r24, 0x0086
    1ac6:	90 91 87 00 	lds	r25, 0x0087
    1aca:	a9 01       	movw	r20, r18
    1acc:	48 1b       	sub	r20, r24
    1ace:	59 0b       	sbc	r21, r25
    1ad0:	ca 01       	movw	r24, r20
    1ad2:	90 93 df 00 	sts	0x00DF, r25
    1ad6:	80 93 de 00 	sts	0x00DE, r24

		GIE_VidDisEnable()	;
    1ada:	0e 94 8c 0b 	call	0x1718	; 0x1718 <GIE_VidDisEnable>
		SET_BIT(TCCR1B ,TCCR0_ICES1_PIN); 		//raising edge
    1ade:	ae e4       	ldi	r26, 0x4E	; 78
    1ae0:	b0 e0       	ldi	r27, 0x00	; 0
    1ae2:	ee e4       	ldi	r30, 0x4E	; 78
    1ae4:	f0 e0       	ldi	r31, 0x00	; 0
    1ae6:	80 81       	ld	r24, Z
    1ae8:	80 64       	ori	r24, 0x40	; 64
    1aea:	8c 93       	st	X, r24

		state =1;
    1aec:	81 e0       	ldi	r24, 0x01	; 1
    1aee:	90 e0       	ldi	r25, 0x00	; 0
    1af0:	90 93 8b 00 	sts	0x008B, r25
    1af4:	80 93 8a 00 	sts	0x008A, r24
	}


}
    1af8:	cf 91       	pop	r28
    1afa:	df 91       	pop	r29
    1afc:	08 95       	ret

00001afe <__prologue_saves__>:
    1afe:	2f 92       	push	r2
    1b00:	3f 92       	push	r3
    1b02:	4f 92       	push	r4
    1b04:	5f 92       	push	r5
    1b06:	6f 92       	push	r6
    1b08:	7f 92       	push	r7
    1b0a:	8f 92       	push	r8
    1b0c:	9f 92       	push	r9
    1b0e:	af 92       	push	r10
    1b10:	bf 92       	push	r11
    1b12:	cf 92       	push	r12
    1b14:	df 92       	push	r13
    1b16:	ef 92       	push	r14
    1b18:	ff 92       	push	r15
    1b1a:	0f 93       	push	r16
    1b1c:	1f 93       	push	r17
    1b1e:	cf 93       	push	r28
    1b20:	df 93       	push	r29
    1b22:	cd b7       	in	r28, 0x3d	; 61
    1b24:	de b7       	in	r29, 0x3e	; 62
    1b26:	ca 1b       	sub	r28, r26
    1b28:	db 0b       	sbc	r29, r27
    1b2a:	0f b6       	in	r0, 0x3f	; 63
    1b2c:	f8 94       	cli
    1b2e:	de bf       	out	0x3e, r29	; 62
    1b30:	0f be       	out	0x3f, r0	; 63
    1b32:	cd bf       	out	0x3d, r28	; 61
    1b34:	09 94       	ijmp

00001b36 <__epilogue_restores__>:
    1b36:	2a 88       	ldd	r2, Y+18	; 0x12
    1b38:	39 88       	ldd	r3, Y+17	; 0x11
    1b3a:	48 88       	ldd	r4, Y+16	; 0x10
    1b3c:	5f 84       	ldd	r5, Y+15	; 0x0f
    1b3e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1b40:	7d 84       	ldd	r7, Y+13	; 0x0d
    1b42:	8c 84       	ldd	r8, Y+12	; 0x0c
    1b44:	9b 84       	ldd	r9, Y+11	; 0x0b
    1b46:	aa 84       	ldd	r10, Y+10	; 0x0a
    1b48:	b9 84       	ldd	r11, Y+9	; 0x09
    1b4a:	c8 84       	ldd	r12, Y+8	; 0x08
    1b4c:	df 80       	ldd	r13, Y+7	; 0x07
    1b4e:	ee 80       	ldd	r14, Y+6	; 0x06
    1b50:	fd 80       	ldd	r15, Y+5	; 0x05
    1b52:	0c 81       	ldd	r16, Y+4	; 0x04
    1b54:	1b 81       	ldd	r17, Y+3	; 0x03
    1b56:	aa 81       	ldd	r26, Y+2	; 0x02
    1b58:	b9 81       	ldd	r27, Y+1	; 0x01
    1b5a:	ce 0f       	add	r28, r30
    1b5c:	d1 1d       	adc	r29, r1
    1b5e:	0f b6       	in	r0, 0x3f	; 63
    1b60:	f8 94       	cli
    1b62:	de bf       	out	0x3e, r29	; 62
    1b64:	0f be       	out	0x3f, r0	; 63
    1b66:	cd bf       	out	0x3d, r28	; 61
    1b68:	ed 01       	movw	r28, r26
    1b6a:	08 95       	ret

00001b6c <sprintf>:
    1b6c:	ae e0       	ldi	r26, 0x0E	; 14
    1b6e:	b0 e0       	ldi	r27, 0x00	; 0
    1b70:	ec eb       	ldi	r30, 0xBC	; 188
    1b72:	fd e0       	ldi	r31, 0x0D	; 13
    1b74:	0c 94 8d 0d 	jmp	0x1b1a	; 0x1b1a <__prologue_saves__+0x1c>
    1b78:	0d 89       	ldd	r16, Y+21	; 0x15
    1b7a:	1e 89       	ldd	r17, Y+22	; 0x16
    1b7c:	86 e0       	ldi	r24, 0x06	; 6
    1b7e:	8c 83       	std	Y+4, r24	; 0x04
    1b80:	1a 83       	std	Y+2, r17	; 0x02
    1b82:	09 83       	std	Y+1, r16	; 0x01
    1b84:	8f ef       	ldi	r24, 0xFF	; 255
    1b86:	9f e7       	ldi	r25, 0x7F	; 127
    1b88:	9e 83       	std	Y+6, r25	; 0x06
    1b8a:	8d 83       	std	Y+5, r24	; 0x05
    1b8c:	9e 01       	movw	r18, r28
    1b8e:	27 5e       	subi	r18, 0xE7	; 231
    1b90:	3f 4f       	sbci	r19, 0xFF	; 255
    1b92:	ce 01       	movw	r24, r28
    1b94:	01 96       	adiw	r24, 0x01	; 1
    1b96:	6f 89       	ldd	r22, Y+23	; 0x17
    1b98:	78 8d       	ldd	r23, Y+24	; 0x18
    1b9a:	a9 01       	movw	r20, r18
    1b9c:	0e 94 da 0d 	call	0x1bb4	; 0x1bb4 <vfprintf>
    1ba0:	2f 81       	ldd	r18, Y+7	; 0x07
    1ba2:	38 85       	ldd	r19, Y+8	; 0x08
    1ba4:	02 0f       	add	r16, r18
    1ba6:	13 1f       	adc	r17, r19
    1ba8:	f8 01       	movw	r30, r16
    1baa:	10 82       	st	Z, r1
    1bac:	2e 96       	adiw	r28, 0x0e	; 14
    1bae:	e4 e0       	ldi	r30, 0x04	; 4
    1bb0:	0c 94 a9 0d 	jmp	0x1b52	; 0x1b52 <__epilogue_restores__+0x1c>

00001bb4 <vfprintf>:
    1bb4:	ab e0       	ldi	r26, 0x0B	; 11
    1bb6:	b0 e0       	ldi	r27, 0x00	; 0
    1bb8:	e0 ee       	ldi	r30, 0xE0	; 224
    1bba:	fd e0       	ldi	r31, 0x0D	; 13
    1bbc:	0c 94 7f 0d 	jmp	0x1afe	; 0x1afe <__prologue_saves__>
    1bc0:	3c 01       	movw	r6, r24
    1bc2:	2b 01       	movw	r4, r22
    1bc4:	5a 01       	movw	r10, r20
    1bc6:	fc 01       	movw	r30, r24
    1bc8:	17 82       	std	Z+7, r1	; 0x07
    1bca:	16 82       	std	Z+6, r1	; 0x06
    1bcc:	83 81       	ldd	r24, Z+3	; 0x03
    1bce:	81 fd       	sbrc	r24, 1
    1bd0:	03 c0       	rjmp	.+6      	; 0x1bd8 <vfprintf+0x24>
    1bd2:	6f ef       	ldi	r22, 0xFF	; 255
    1bd4:	7f ef       	ldi	r23, 0xFF	; 255
    1bd6:	c6 c1       	rjmp	.+908    	; 0x1f64 <vfprintf+0x3b0>
    1bd8:	9a e0       	ldi	r25, 0x0A	; 10
    1bda:	89 2e       	mov	r8, r25
    1bdc:	1e 01       	movw	r2, r28
    1bde:	08 94       	sec
    1be0:	21 1c       	adc	r2, r1
    1be2:	31 1c       	adc	r3, r1
    1be4:	f3 01       	movw	r30, r6
    1be6:	23 81       	ldd	r18, Z+3	; 0x03
    1be8:	f2 01       	movw	r30, r4
    1bea:	23 fd       	sbrc	r18, 3
    1bec:	85 91       	lpm	r24, Z+
    1bee:	23 ff       	sbrs	r18, 3
    1bf0:	81 91       	ld	r24, Z+
    1bf2:	2f 01       	movw	r4, r30
    1bf4:	88 23       	and	r24, r24
    1bf6:	09 f4       	brne	.+2      	; 0x1bfa <vfprintf+0x46>
    1bf8:	b2 c1       	rjmp	.+868    	; 0x1f5e <vfprintf+0x3aa>
    1bfa:	85 32       	cpi	r24, 0x25	; 37
    1bfc:	39 f4       	brne	.+14     	; 0x1c0c <vfprintf+0x58>
    1bfe:	23 fd       	sbrc	r18, 3
    1c00:	85 91       	lpm	r24, Z+
    1c02:	23 ff       	sbrs	r18, 3
    1c04:	81 91       	ld	r24, Z+
    1c06:	2f 01       	movw	r4, r30
    1c08:	85 32       	cpi	r24, 0x25	; 37
    1c0a:	29 f4       	brne	.+10     	; 0x1c16 <vfprintf+0x62>
    1c0c:	90 e0       	ldi	r25, 0x00	; 0
    1c0e:	b3 01       	movw	r22, r6
    1c10:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1c14:	e7 cf       	rjmp	.-50     	; 0x1be4 <vfprintf+0x30>
    1c16:	98 2f       	mov	r25, r24
    1c18:	ff 24       	eor	r15, r15
    1c1a:	ee 24       	eor	r14, r14
    1c1c:	99 24       	eor	r9, r9
    1c1e:	ff e1       	ldi	r31, 0x1F	; 31
    1c20:	ff 15       	cp	r31, r15
    1c22:	d0 f0       	brcs	.+52     	; 0x1c58 <vfprintf+0xa4>
    1c24:	9b 32       	cpi	r25, 0x2B	; 43
    1c26:	69 f0       	breq	.+26     	; 0x1c42 <vfprintf+0x8e>
    1c28:	9c 32       	cpi	r25, 0x2C	; 44
    1c2a:	28 f4       	brcc	.+10     	; 0x1c36 <vfprintf+0x82>
    1c2c:	90 32       	cpi	r25, 0x20	; 32
    1c2e:	59 f0       	breq	.+22     	; 0x1c46 <vfprintf+0x92>
    1c30:	93 32       	cpi	r25, 0x23	; 35
    1c32:	91 f4       	brne	.+36     	; 0x1c58 <vfprintf+0xa4>
    1c34:	0e c0       	rjmp	.+28     	; 0x1c52 <vfprintf+0x9e>
    1c36:	9d 32       	cpi	r25, 0x2D	; 45
    1c38:	49 f0       	breq	.+18     	; 0x1c4c <vfprintf+0x98>
    1c3a:	90 33       	cpi	r25, 0x30	; 48
    1c3c:	69 f4       	brne	.+26     	; 0x1c58 <vfprintf+0xa4>
    1c3e:	41 e0       	ldi	r20, 0x01	; 1
    1c40:	24 c0       	rjmp	.+72     	; 0x1c8a <vfprintf+0xd6>
    1c42:	52 e0       	ldi	r21, 0x02	; 2
    1c44:	f5 2a       	or	r15, r21
    1c46:	84 e0       	ldi	r24, 0x04	; 4
    1c48:	f8 2a       	or	r15, r24
    1c4a:	28 c0       	rjmp	.+80     	; 0x1c9c <vfprintf+0xe8>
    1c4c:	98 e0       	ldi	r25, 0x08	; 8
    1c4e:	f9 2a       	or	r15, r25
    1c50:	25 c0       	rjmp	.+74     	; 0x1c9c <vfprintf+0xe8>
    1c52:	e0 e1       	ldi	r30, 0x10	; 16
    1c54:	fe 2a       	or	r15, r30
    1c56:	22 c0       	rjmp	.+68     	; 0x1c9c <vfprintf+0xe8>
    1c58:	f7 fc       	sbrc	r15, 7
    1c5a:	29 c0       	rjmp	.+82     	; 0x1cae <vfprintf+0xfa>
    1c5c:	89 2f       	mov	r24, r25
    1c5e:	80 53       	subi	r24, 0x30	; 48
    1c60:	8a 30       	cpi	r24, 0x0A	; 10
    1c62:	70 f4       	brcc	.+28     	; 0x1c80 <vfprintf+0xcc>
    1c64:	f6 fe       	sbrs	r15, 6
    1c66:	05 c0       	rjmp	.+10     	; 0x1c72 <vfprintf+0xbe>
    1c68:	98 9c       	mul	r9, r8
    1c6a:	90 2c       	mov	r9, r0
    1c6c:	11 24       	eor	r1, r1
    1c6e:	98 0e       	add	r9, r24
    1c70:	15 c0       	rjmp	.+42     	; 0x1c9c <vfprintf+0xe8>
    1c72:	e8 9c       	mul	r14, r8
    1c74:	e0 2c       	mov	r14, r0
    1c76:	11 24       	eor	r1, r1
    1c78:	e8 0e       	add	r14, r24
    1c7a:	f0 e2       	ldi	r31, 0x20	; 32
    1c7c:	ff 2a       	or	r15, r31
    1c7e:	0e c0       	rjmp	.+28     	; 0x1c9c <vfprintf+0xe8>
    1c80:	9e 32       	cpi	r25, 0x2E	; 46
    1c82:	29 f4       	brne	.+10     	; 0x1c8e <vfprintf+0xda>
    1c84:	f6 fc       	sbrc	r15, 6
    1c86:	6b c1       	rjmp	.+726    	; 0x1f5e <vfprintf+0x3aa>
    1c88:	40 e4       	ldi	r20, 0x40	; 64
    1c8a:	f4 2a       	or	r15, r20
    1c8c:	07 c0       	rjmp	.+14     	; 0x1c9c <vfprintf+0xe8>
    1c8e:	9c 36       	cpi	r25, 0x6C	; 108
    1c90:	19 f4       	brne	.+6      	; 0x1c98 <vfprintf+0xe4>
    1c92:	50 e8       	ldi	r21, 0x80	; 128
    1c94:	f5 2a       	or	r15, r21
    1c96:	02 c0       	rjmp	.+4      	; 0x1c9c <vfprintf+0xe8>
    1c98:	98 36       	cpi	r25, 0x68	; 104
    1c9a:	49 f4       	brne	.+18     	; 0x1cae <vfprintf+0xfa>
    1c9c:	f2 01       	movw	r30, r4
    1c9e:	23 fd       	sbrc	r18, 3
    1ca0:	95 91       	lpm	r25, Z+
    1ca2:	23 ff       	sbrs	r18, 3
    1ca4:	91 91       	ld	r25, Z+
    1ca6:	2f 01       	movw	r4, r30
    1ca8:	99 23       	and	r25, r25
    1caa:	09 f0       	breq	.+2      	; 0x1cae <vfprintf+0xfa>
    1cac:	b8 cf       	rjmp	.-144    	; 0x1c1e <vfprintf+0x6a>
    1cae:	89 2f       	mov	r24, r25
    1cb0:	85 54       	subi	r24, 0x45	; 69
    1cb2:	83 30       	cpi	r24, 0x03	; 3
    1cb4:	18 f0       	brcs	.+6      	; 0x1cbc <vfprintf+0x108>
    1cb6:	80 52       	subi	r24, 0x20	; 32
    1cb8:	83 30       	cpi	r24, 0x03	; 3
    1cba:	38 f4       	brcc	.+14     	; 0x1cca <vfprintf+0x116>
    1cbc:	44 e0       	ldi	r20, 0x04	; 4
    1cbe:	50 e0       	ldi	r21, 0x00	; 0
    1cc0:	a4 0e       	add	r10, r20
    1cc2:	b5 1e       	adc	r11, r21
    1cc4:	5f e3       	ldi	r21, 0x3F	; 63
    1cc6:	59 83       	std	Y+1, r21	; 0x01
    1cc8:	0f c0       	rjmp	.+30     	; 0x1ce8 <vfprintf+0x134>
    1cca:	93 36       	cpi	r25, 0x63	; 99
    1ccc:	31 f0       	breq	.+12     	; 0x1cda <vfprintf+0x126>
    1cce:	93 37       	cpi	r25, 0x73	; 115
    1cd0:	79 f0       	breq	.+30     	; 0x1cf0 <vfprintf+0x13c>
    1cd2:	93 35       	cpi	r25, 0x53	; 83
    1cd4:	09 f0       	breq	.+2      	; 0x1cd8 <vfprintf+0x124>
    1cd6:	56 c0       	rjmp	.+172    	; 0x1d84 <vfprintf+0x1d0>
    1cd8:	20 c0       	rjmp	.+64     	; 0x1d1a <vfprintf+0x166>
    1cda:	f5 01       	movw	r30, r10
    1cdc:	80 81       	ld	r24, Z
    1cde:	89 83       	std	Y+1, r24	; 0x01
    1ce0:	42 e0       	ldi	r20, 0x02	; 2
    1ce2:	50 e0       	ldi	r21, 0x00	; 0
    1ce4:	a4 0e       	add	r10, r20
    1ce6:	b5 1e       	adc	r11, r21
    1ce8:	61 01       	movw	r12, r2
    1cea:	01 e0       	ldi	r16, 0x01	; 1
    1cec:	10 e0       	ldi	r17, 0x00	; 0
    1cee:	12 c0       	rjmp	.+36     	; 0x1d14 <vfprintf+0x160>
    1cf0:	f5 01       	movw	r30, r10
    1cf2:	c0 80       	ld	r12, Z
    1cf4:	d1 80       	ldd	r13, Z+1	; 0x01
    1cf6:	f6 fc       	sbrc	r15, 6
    1cf8:	03 c0       	rjmp	.+6      	; 0x1d00 <vfprintf+0x14c>
    1cfa:	6f ef       	ldi	r22, 0xFF	; 255
    1cfc:	7f ef       	ldi	r23, 0xFF	; 255
    1cfe:	02 c0       	rjmp	.+4      	; 0x1d04 <vfprintf+0x150>
    1d00:	69 2d       	mov	r22, r9
    1d02:	70 e0       	ldi	r23, 0x00	; 0
    1d04:	42 e0       	ldi	r20, 0x02	; 2
    1d06:	50 e0       	ldi	r21, 0x00	; 0
    1d08:	a4 0e       	add	r10, r20
    1d0a:	b5 1e       	adc	r11, r21
    1d0c:	c6 01       	movw	r24, r12
    1d0e:	0e 94 c2 0f 	call	0x1f84	; 0x1f84 <strnlen>
    1d12:	8c 01       	movw	r16, r24
    1d14:	5f e7       	ldi	r21, 0x7F	; 127
    1d16:	f5 22       	and	r15, r21
    1d18:	14 c0       	rjmp	.+40     	; 0x1d42 <vfprintf+0x18e>
    1d1a:	f5 01       	movw	r30, r10
    1d1c:	c0 80       	ld	r12, Z
    1d1e:	d1 80       	ldd	r13, Z+1	; 0x01
    1d20:	f6 fc       	sbrc	r15, 6
    1d22:	03 c0       	rjmp	.+6      	; 0x1d2a <vfprintf+0x176>
    1d24:	6f ef       	ldi	r22, 0xFF	; 255
    1d26:	7f ef       	ldi	r23, 0xFF	; 255
    1d28:	02 c0       	rjmp	.+4      	; 0x1d2e <vfprintf+0x17a>
    1d2a:	69 2d       	mov	r22, r9
    1d2c:	70 e0       	ldi	r23, 0x00	; 0
    1d2e:	42 e0       	ldi	r20, 0x02	; 2
    1d30:	50 e0       	ldi	r21, 0x00	; 0
    1d32:	a4 0e       	add	r10, r20
    1d34:	b5 1e       	adc	r11, r21
    1d36:	c6 01       	movw	r24, r12
    1d38:	0e 94 b7 0f 	call	0x1f6e	; 0x1f6e <strnlen_P>
    1d3c:	8c 01       	movw	r16, r24
    1d3e:	50 e8       	ldi	r21, 0x80	; 128
    1d40:	f5 2a       	or	r15, r21
    1d42:	f3 fe       	sbrs	r15, 3
    1d44:	07 c0       	rjmp	.+14     	; 0x1d54 <vfprintf+0x1a0>
    1d46:	1a c0       	rjmp	.+52     	; 0x1d7c <vfprintf+0x1c8>
    1d48:	80 e2       	ldi	r24, 0x20	; 32
    1d4a:	90 e0       	ldi	r25, 0x00	; 0
    1d4c:	b3 01       	movw	r22, r6
    1d4e:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1d52:	ea 94       	dec	r14
    1d54:	8e 2d       	mov	r24, r14
    1d56:	90 e0       	ldi	r25, 0x00	; 0
    1d58:	08 17       	cp	r16, r24
    1d5a:	19 07       	cpc	r17, r25
    1d5c:	a8 f3       	brcs	.-22     	; 0x1d48 <vfprintf+0x194>
    1d5e:	0e c0       	rjmp	.+28     	; 0x1d7c <vfprintf+0x1c8>
    1d60:	f6 01       	movw	r30, r12
    1d62:	f7 fc       	sbrc	r15, 7
    1d64:	85 91       	lpm	r24, Z+
    1d66:	f7 fe       	sbrs	r15, 7
    1d68:	81 91       	ld	r24, Z+
    1d6a:	6f 01       	movw	r12, r30
    1d6c:	90 e0       	ldi	r25, 0x00	; 0
    1d6e:	b3 01       	movw	r22, r6
    1d70:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1d74:	e1 10       	cpse	r14, r1
    1d76:	ea 94       	dec	r14
    1d78:	01 50       	subi	r16, 0x01	; 1
    1d7a:	10 40       	sbci	r17, 0x00	; 0
    1d7c:	01 15       	cp	r16, r1
    1d7e:	11 05       	cpc	r17, r1
    1d80:	79 f7       	brne	.-34     	; 0x1d60 <vfprintf+0x1ac>
    1d82:	ea c0       	rjmp	.+468    	; 0x1f58 <vfprintf+0x3a4>
    1d84:	94 36       	cpi	r25, 0x64	; 100
    1d86:	11 f0       	breq	.+4      	; 0x1d8c <vfprintf+0x1d8>
    1d88:	99 36       	cpi	r25, 0x69	; 105
    1d8a:	69 f5       	brne	.+90     	; 0x1de6 <vfprintf+0x232>
    1d8c:	f7 fe       	sbrs	r15, 7
    1d8e:	08 c0       	rjmp	.+16     	; 0x1da0 <vfprintf+0x1ec>
    1d90:	f5 01       	movw	r30, r10
    1d92:	20 81       	ld	r18, Z
    1d94:	31 81       	ldd	r19, Z+1	; 0x01
    1d96:	42 81       	ldd	r20, Z+2	; 0x02
    1d98:	53 81       	ldd	r21, Z+3	; 0x03
    1d9a:	84 e0       	ldi	r24, 0x04	; 4
    1d9c:	90 e0       	ldi	r25, 0x00	; 0
    1d9e:	0a c0       	rjmp	.+20     	; 0x1db4 <vfprintf+0x200>
    1da0:	f5 01       	movw	r30, r10
    1da2:	80 81       	ld	r24, Z
    1da4:	91 81       	ldd	r25, Z+1	; 0x01
    1da6:	9c 01       	movw	r18, r24
    1da8:	44 27       	eor	r20, r20
    1daa:	37 fd       	sbrc	r19, 7
    1dac:	40 95       	com	r20
    1dae:	54 2f       	mov	r21, r20
    1db0:	82 e0       	ldi	r24, 0x02	; 2
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	a8 0e       	add	r10, r24
    1db6:	b9 1e       	adc	r11, r25
    1db8:	9f e6       	ldi	r25, 0x6F	; 111
    1dba:	f9 22       	and	r15, r25
    1dbc:	57 ff       	sbrs	r21, 7
    1dbe:	09 c0       	rjmp	.+18     	; 0x1dd2 <vfprintf+0x21e>
    1dc0:	50 95       	com	r21
    1dc2:	40 95       	com	r20
    1dc4:	30 95       	com	r19
    1dc6:	21 95       	neg	r18
    1dc8:	3f 4f       	sbci	r19, 0xFF	; 255
    1dca:	4f 4f       	sbci	r20, 0xFF	; 255
    1dcc:	5f 4f       	sbci	r21, 0xFF	; 255
    1dce:	e0 e8       	ldi	r30, 0x80	; 128
    1dd0:	fe 2a       	or	r15, r30
    1dd2:	ca 01       	movw	r24, r20
    1dd4:	b9 01       	movw	r22, r18
    1dd6:	a1 01       	movw	r20, r2
    1dd8:	2a e0       	ldi	r18, 0x0A	; 10
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__ultoa_invert>
    1de0:	d8 2e       	mov	r13, r24
    1de2:	d2 18       	sub	r13, r2
    1de4:	40 c0       	rjmp	.+128    	; 0x1e66 <vfprintf+0x2b2>
    1de6:	95 37       	cpi	r25, 0x75	; 117
    1de8:	29 f4       	brne	.+10     	; 0x1df4 <vfprintf+0x240>
    1dea:	1f 2d       	mov	r17, r15
    1dec:	1f 7e       	andi	r17, 0xEF	; 239
    1dee:	2a e0       	ldi	r18, 0x0A	; 10
    1df0:	30 e0       	ldi	r19, 0x00	; 0
    1df2:	1d c0       	rjmp	.+58     	; 0x1e2e <vfprintf+0x27a>
    1df4:	1f 2d       	mov	r17, r15
    1df6:	19 7f       	andi	r17, 0xF9	; 249
    1df8:	9f 36       	cpi	r25, 0x6F	; 111
    1dfa:	61 f0       	breq	.+24     	; 0x1e14 <vfprintf+0x260>
    1dfc:	90 37       	cpi	r25, 0x70	; 112
    1dfe:	20 f4       	brcc	.+8      	; 0x1e08 <vfprintf+0x254>
    1e00:	98 35       	cpi	r25, 0x58	; 88
    1e02:	09 f0       	breq	.+2      	; 0x1e06 <vfprintf+0x252>
    1e04:	ac c0       	rjmp	.+344    	; 0x1f5e <vfprintf+0x3aa>
    1e06:	0f c0       	rjmp	.+30     	; 0x1e26 <vfprintf+0x272>
    1e08:	90 37       	cpi	r25, 0x70	; 112
    1e0a:	39 f0       	breq	.+14     	; 0x1e1a <vfprintf+0x266>
    1e0c:	98 37       	cpi	r25, 0x78	; 120
    1e0e:	09 f0       	breq	.+2      	; 0x1e12 <vfprintf+0x25e>
    1e10:	a6 c0       	rjmp	.+332    	; 0x1f5e <vfprintf+0x3aa>
    1e12:	04 c0       	rjmp	.+8      	; 0x1e1c <vfprintf+0x268>
    1e14:	28 e0       	ldi	r18, 0x08	; 8
    1e16:	30 e0       	ldi	r19, 0x00	; 0
    1e18:	0a c0       	rjmp	.+20     	; 0x1e2e <vfprintf+0x27a>
    1e1a:	10 61       	ori	r17, 0x10	; 16
    1e1c:	14 fd       	sbrc	r17, 4
    1e1e:	14 60       	ori	r17, 0x04	; 4
    1e20:	20 e1       	ldi	r18, 0x10	; 16
    1e22:	30 e0       	ldi	r19, 0x00	; 0
    1e24:	04 c0       	rjmp	.+8      	; 0x1e2e <vfprintf+0x27a>
    1e26:	14 fd       	sbrc	r17, 4
    1e28:	16 60       	ori	r17, 0x06	; 6
    1e2a:	20 e1       	ldi	r18, 0x10	; 16
    1e2c:	32 e0       	ldi	r19, 0x02	; 2
    1e2e:	17 ff       	sbrs	r17, 7
    1e30:	08 c0       	rjmp	.+16     	; 0x1e42 <vfprintf+0x28e>
    1e32:	f5 01       	movw	r30, r10
    1e34:	60 81       	ld	r22, Z
    1e36:	71 81       	ldd	r23, Z+1	; 0x01
    1e38:	82 81       	ldd	r24, Z+2	; 0x02
    1e3a:	93 81       	ldd	r25, Z+3	; 0x03
    1e3c:	44 e0       	ldi	r20, 0x04	; 4
    1e3e:	50 e0       	ldi	r21, 0x00	; 0
    1e40:	08 c0       	rjmp	.+16     	; 0x1e52 <vfprintf+0x29e>
    1e42:	f5 01       	movw	r30, r10
    1e44:	80 81       	ld	r24, Z
    1e46:	91 81       	ldd	r25, Z+1	; 0x01
    1e48:	bc 01       	movw	r22, r24
    1e4a:	80 e0       	ldi	r24, 0x00	; 0
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	42 e0       	ldi	r20, 0x02	; 2
    1e50:	50 e0       	ldi	r21, 0x00	; 0
    1e52:	a4 0e       	add	r10, r20
    1e54:	b5 1e       	adc	r11, r21
    1e56:	a1 01       	movw	r20, r2
    1e58:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <__ultoa_invert>
    1e5c:	d8 2e       	mov	r13, r24
    1e5e:	d2 18       	sub	r13, r2
    1e60:	8f e7       	ldi	r24, 0x7F	; 127
    1e62:	f8 2e       	mov	r15, r24
    1e64:	f1 22       	and	r15, r17
    1e66:	f6 fe       	sbrs	r15, 6
    1e68:	0b c0       	rjmp	.+22     	; 0x1e80 <vfprintf+0x2cc>
    1e6a:	5e ef       	ldi	r21, 0xFE	; 254
    1e6c:	f5 22       	and	r15, r21
    1e6e:	d9 14       	cp	r13, r9
    1e70:	38 f4       	brcc	.+14     	; 0x1e80 <vfprintf+0x2cc>
    1e72:	f4 fe       	sbrs	r15, 4
    1e74:	07 c0       	rjmp	.+14     	; 0x1e84 <vfprintf+0x2d0>
    1e76:	f2 fc       	sbrc	r15, 2
    1e78:	05 c0       	rjmp	.+10     	; 0x1e84 <vfprintf+0x2d0>
    1e7a:	8f ee       	ldi	r24, 0xEF	; 239
    1e7c:	f8 22       	and	r15, r24
    1e7e:	02 c0       	rjmp	.+4      	; 0x1e84 <vfprintf+0x2d0>
    1e80:	1d 2d       	mov	r17, r13
    1e82:	01 c0       	rjmp	.+2      	; 0x1e86 <vfprintf+0x2d2>
    1e84:	19 2d       	mov	r17, r9
    1e86:	f4 fe       	sbrs	r15, 4
    1e88:	0d c0       	rjmp	.+26     	; 0x1ea4 <vfprintf+0x2f0>
    1e8a:	fe 01       	movw	r30, r28
    1e8c:	ed 0d       	add	r30, r13
    1e8e:	f1 1d       	adc	r31, r1
    1e90:	80 81       	ld	r24, Z
    1e92:	80 33       	cpi	r24, 0x30	; 48
    1e94:	19 f4       	brne	.+6      	; 0x1e9c <vfprintf+0x2e8>
    1e96:	99 ee       	ldi	r25, 0xE9	; 233
    1e98:	f9 22       	and	r15, r25
    1e9a:	08 c0       	rjmp	.+16     	; 0x1eac <vfprintf+0x2f8>
    1e9c:	1f 5f       	subi	r17, 0xFF	; 255
    1e9e:	f2 fe       	sbrs	r15, 2
    1ea0:	05 c0       	rjmp	.+10     	; 0x1eac <vfprintf+0x2f8>
    1ea2:	03 c0       	rjmp	.+6      	; 0x1eaa <vfprintf+0x2f6>
    1ea4:	8f 2d       	mov	r24, r15
    1ea6:	86 78       	andi	r24, 0x86	; 134
    1ea8:	09 f0       	breq	.+2      	; 0x1eac <vfprintf+0x2f8>
    1eaa:	1f 5f       	subi	r17, 0xFF	; 255
    1eac:	0f 2d       	mov	r16, r15
    1eae:	f3 fc       	sbrc	r15, 3
    1eb0:	14 c0       	rjmp	.+40     	; 0x1eda <vfprintf+0x326>
    1eb2:	f0 fe       	sbrs	r15, 0
    1eb4:	0f c0       	rjmp	.+30     	; 0x1ed4 <vfprintf+0x320>
    1eb6:	1e 15       	cp	r17, r14
    1eb8:	10 f0       	brcs	.+4      	; 0x1ebe <vfprintf+0x30a>
    1eba:	9d 2c       	mov	r9, r13
    1ebc:	0b c0       	rjmp	.+22     	; 0x1ed4 <vfprintf+0x320>
    1ebe:	9d 2c       	mov	r9, r13
    1ec0:	9e 0c       	add	r9, r14
    1ec2:	91 1a       	sub	r9, r17
    1ec4:	1e 2d       	mov	r17, r14
    1ec6:	06 c0       	rjmp	.+12     	; 0x1ed4 <vfprintf+0x320>
    1ec8:	80 e2       	ldi	r24, 0x20	; 32
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	b3 01       	movw	r22, r6
    1ece:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1ed2:	1f 5f       	subi	r17, 0xFF	; 255
    1ed4:	1e 15       	cp	r17, r14
    1ed6:	c0 f3       	brcs	.-16     	; 0x1ec8 <vfprintf+0x314>
    1ed8:	04 c0       	rjmp	.+8      	; 0x1ee2 <vfprintf+0x32e>
    1eda:	1e 15       	cp	r17, r14
    1edc:	10 f4       	brcc	.+4      	; 0x1ee2 <vfprintf+0x32e>
    1ede:	e1 1a       	sub	r14, r17
    1ee0:	01 c0       	rjmp	.+2      	; 0x1ee4 <vfprintf+0x330>
    1ee2:	ee 24       	eor	r14, r14
    1ee4:	04 ff       	sbrs	r16, 4
    1ee6:	0f c0       	rjmp	.+30     	; 0x1f06 <vfprintf+0x352>
    1ee8:	80 e3       	ldi	r24, 0x30	; 48
    1eea:	90 e0       	ldi	r25, 0x00	; 0
    1eec:	b3 01       	movw	r22, r6
    1eee:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1ef2:	02 ff       	sbrs	r16, 2
    1ef4:	1d c0       	rjmp	.+58     	; 0x1f30 <vfprintf+0x37c>
    1ef6:	01 fd       	sbrc	r16, 1
    1ef8:	03 c0       	rjmp	.+6      	; 0x1f00 <vfprintf+0x34c>
    1efa:	88 e7       	ldi	r24, 0x78	; 120
    1efc:	90 e0       	ldi	r25, 0x00	; 0
    1efe:	0e c0       	rjmp	.+28     	; 0x1f1c <vfprintf+0x368>
    1f00:	88 e5       	ldi	r24, 0x58	; 88
    1f02:	90 e0       	ldi	r25, 0x00	; 0
    1f04:	0b c0       	rjmp	.+22     	; 0x1f1c <vfprintf+0x368>
    1f06:	80 2f       	mov	r24, r16
    1f08:	86 78       	andi	r24, 0x86	; 134
    1f0a:	91 f0       	breq	.+36     	; 0x1f30 <vfprintf+0x37c>
    1f0c:	01 ff       	sbrs	r16, 1
    1f0e:	02 c0       	rjmp	.+4      	; 0x1f14 <vfprintf+0x360>
    1f10:	8b e2       	ldi	r24, 0x2B	; 43
    1f12:	01 c0       	rjmp	.+2      	; 0x1f16 <vfprintf+0x362>
    1f14:	80 e2       	ldi	r24, 0x20	; 32
    1f16:	f7 fc       	sbrc	r15, 7
    1f18:	8d e2       	ldi	r24, 0x2D	; 45
    1f1a:	90 e0       	ldi	r25, 0x00	; 0
    1f1c:	b3 01       	movw	r22, r6
    1f1e:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1f22:	06 c0       	rjmp	.+12     	; 0x1f30 <vfprintf+0x37c>
    1f24:	80 e3       	ldi	r24, 0x30	; 48
    1f26:	90 e0       	ldi	r25, 0x00	; 0
    1f28:	b3 01       	movw	r22, r6
    1f2a:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1f2e:	9a 94       	dec	r9
    1f30:	d9 14       	cp	r13, r9
    1f32:	c0 f3       	brcs	.-16     	; 0x1f24 <vfprintf+0x370>
    1f34:	da 94       	dec	r13
    1f36:	f1 01       	movw	r30, r2
    1f38:	ed 0d       	add	r30, r13
    1f3a:	f1 1d       	adc	r31, r1
    1f3c:	80 81       	ld	r24, Z
    1f3e:	90 e0       	ldi	r25, 0x00	; 0
    1f40:	b3 01       	movw	r22, r6
    1f42:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1f46:	dd 20       	and	r13, r13
    1f48:	a9 f7       	brne	.-22     	; 0x1f34 <vfprintf+0x380>
    1f4a:	06 c0       	rjmp	.+12     	; 0x1f58 <vfprintf+0x3a4>
    1f4c:	80 e2       	ldi	r24, 0x20	; 32
    1f4e:	90 e0       	ldi	r25, 0x00	; 0
    1f50:	b3 01       	movw	r22, r6
    1f52:	0e 94 cd 0f 	call	0x1f9a	; 0x1f9a <fputc>
    1f56:	ea 94       	dec	r14
    1f58:	ee 20       	and	r14, r14
    1f5a:	c1 f7       	brne	.-16     	; 0x1f4c <vfprintf+0x398>
    1f5c:	43 ce       	rjmp	.-890    	; 0x1be4 <vfprintf+0x30>
    1f5e:	f3 01       	movw	r30, r6
    1f60:	66 81       	ldd	r22, Z+6	; 0x06
    1f62:	77 81       	ldd	r23, Z+7	; 0x07
    1f64:	cb 01       	movw	r24, r22
    1f66:	2b 96       	adiw	r28, 0x0b	; 11
    1f68:	e2 e1       	ldi	r30, 0x12	; 18
    1f6a:	0c 94 9b 0d 	jmp	0x1b36	; 0x1b36 <__epilogue_restores__>

00001f6e <strnlen_P>:
    1f6e:	fc 01       	movw	r30, r24
    1f70:	05 90       	lpm	r0, Z+
    1f72:	61 50       	subi	r22, 0x01	; 1
    1f74:	70 40       	sbci	r23, 0x00	; 0
    1f76:	01 10       	cpse	r0, r1
    1f78:	d8 f7       	brcc	.-10     	; 0x1f70 <strnlen_P+0x2>
    1f7a:	80 95       	com	r24
    1f7c:	90 95       	com	r25
    1f7e:	8e 0f       	add	r24, r30
    1f80:	9f 1f       	adc	r25, r31
    1f82:	08 95       	ret

00001f84 <strnlen>:
    1f84:	fc 01       	movw	r30, r24
    1f86:	61 50       	subi	r22, 0x01	; 1
    1f88:	70 40       	sbci	r23, 0x00	; 0
    1f8a:	01 90       	ld	r0, Z+
    1f8c:	01 10       	cpse	r0, r1
    1f8e:	d8 f7       	brcc	.-10     	; 0x1f86 <strnlen+0x2>
    1f90:	80 95       	com	r24
    1f92:	90 95       	com	r25
    1f94:	8e 0f       	add	r24, r30
    1f96:	9f 1f       	adc	r25, r31
    1f98:	08 95       	ret

00001f9a <fputc>:
    1f9a:	0f 93       	push	r16
    1f9c:	1f 93       	push	r17
    1f9e:	cf 93       	push	r28
    1fa0:	df 93       	push	r29
    1fa2:	8c 01       	movw	r16, r24
    1fa4:	eb 01       	movw	r28, r22
    1fa6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fa8:	81 ff       	sbrs	r24, 1
    1faa:	1b c0       	rjmp	.+54     	; 0x1fe2 <fputc+0x48>
    1fac:	82 ff       	sbrs	r24, 2
    1fae:	0d c0       	rjmp	.+26     	; 0x1fca <fputc+0x30>
    1fb0:	2e 81       	ldd	r18, Y+6	; 0x06
    1fb2:	3f 81       	ldd	r19, Y+7	; 0x07
    1fb4:	8c 81       	ldd	r24, Y+4	; 0x04
    1fb6:	9d 81       	ldd	r25, Y+5	; 0x05
    1fb8:	28 17       	cp	r18, r24
    1fba:	39 07       	cpc	r19, r25
    1fbc:	64 f4       	brge	.+24     	; 0x1fd6 <fputc+0x3c>
    1fbe:	e8 81       	ld	r30, Y
    1fc0:	f9 81       	ldd	r31, Y+1	; 0x01
    1fc2:	01 93       	st	Z+, r16
    1fc4:	f9 83       	std	Y+1, r31	; 0x01
    1fc6:	e8 83       	st	Y, r30
    1fc8:	06 c0       	rjmp	.+12     	; 0x1fd6 <fputc+0x3c>
    1fca:	e8 85       	ldd	r30, Y+8	; 0x08
    1fcc:	f9 85       	ldd	r31, Y+9	; 0x09
    1fce:	80 2f       	mov	r24, r16
    1fd0:	09 95       	icall
    1fd2:	89 2b       	or	r24, r25
    1fd4:	31 f4       	brne	.+12     	; 0x1fe2 <fputc+0x48>
    1fd6:	8e 81       	ldd	r24, Y+6	; 0x06
    1fd8:	9f 81       	ldd	r25, Y+7	; 0x07
    1fda:	01 96       	adiw	r24, 0x01	; 1
    1fdc:	9f 83       	std	Y+7, r25	; 0x07
    1fde:	8e 83       	std	Y+6, r24	; 0x06
    1fe0:	02 c0       	rjmp	.+4      	; 0x1fe6 <fputc+0x4c>
    1fe2:	0f ef       	ldi	r16, 0xFF	; 255
    1fe4:	1f ef       	ldi	r17, 0xFF	; 255
    1fe6:	c8 01       	movw	r24, r16
    1fe8:	df 91       	pop	r29
    1fea:	cf 91       	pop	r28
    1fec:	1f 91       	pop	r17
    1fee:	0f 91       	pop	r16
    1ff0:	08 95       	ret

00001ff2 <__ultoa_invert>:
    1ff2:	fa 01       	movw	r30, r20
    1ff4:	aa 27       	eor	r26, r26
    1ff6:	28 30       	cpi	r18, 0x08	; 8
    1ff8:	51 f1       	breq	.+84     	; 0x204e <__ultoa_invert+0x5c>
    1ffa:	20 31       	cpi	r18, 0x10	; 16
    1ffc:	81 f1       	breq	.+96     	; 0x205e <__ultoa_invert+0x6c>
    1ffe:	e8 94       	clt
    2000:	6f 93       	push	r22
    2002:	6e 7f       	andi	r22, 0xFE	; 254
    2004:	6e 5f       	subi	r22, 0xFE	; 254
    2006:	7f 4f       	sbci	r23, 0xFF	; 255
    2008:	8f 4f       	sbci	r24, 0xFF	; 255
    200a:	9f 4f       	sbci	r25, 0xFF	; 255
    200c:	af 4f       	sbci	r26, 0xFF	; 255
    200e:	b1 e0       	ldi	r27, 0x01	; 1
    2010:	3e d0       	rcall	.+124    	; 0x208e <__ultoa_invert+0x9c>
    2012:	b4 e0       	ldi	r27, 0x04	; 4
    2014:	3c d0       	rcall	.+120    	; 0x208e <__ultoa_invert+0x9c>
    2016:	67 0f       	add	r22, r23
    2018:	78 1f       	adc	r23, r24
    201a:	89 1f       	adc	r24, r25
    201c:	9a 1f       	adc	r25, r26
    201e:	a1 1d       	adc	r26, r1
    2020:	68 0f       	add	r22, r24
    2022:	79 1f       	adc	r23, r25
    2024:	8a 1f       	adc	r24, r26
    2026:	91 1d       	adc	r25, r1
    2028:	a1 1d       	adc	r26, r1
    202a:	6a 0f       	add	r22, r26
    202c:	71 1d       	adc	r23, r1
    202e:	81 1d       	adc	r24, r1
    2030:	91 1d       	adc	r25, r1
    2032:	a1 1d       	adc	r26, r1
    2034:	20 d0       	rcall	.+64     	; 0x2076 <__ultoa_invert+0x84>
    2036:	09 f4       	brne	.+2      	; 0x203a <__ultoa_invert+0x48>
    2038:	68 94       	set
    203a:	3f 91       	pop	r19
    203c:	2a e0       	ldi	r18, 0x0A	; 10
    203e:	26 9f       	mul	r18, r22
    2040:	11 24       	eor	r1, r1
    2042:	30 19       	sub	r19, r0
    2044:	30 5d       	subi	r19, 0xD0	; 208
    2046:	31 93       	st	Z+, r19
    2048:	de f6       	brtc	.-74     	; 0x2000 <__ultoa_invert+0xe>
    204a:	cf 01       	movw	r24, r30
    204c:	08 95       	ret
    204e:	46 2f       	mov	r20, r22
    2050:	47 70       	andi	r20, 0x07	; 7
    2052:	40 5d       	subi	r20, 0xD0	; 208
    2054:	41 93       	st	Z+, r20
    2056:	b3 e0       	ldi	r27, 0x03	; 3
    2058:	0f d0       	rcall	.+30     	; 0x2078 <__ultoa_invert+0x86>
    205a:	c9 f7       	brne	.-14     	; 0x204e <__ultoa_invert+0x5c>
    205c:	f6 cf       	rjmp	.-20     	; 0x204a <__ultoa_invert+0x58>
    205e:	46 2f       	mov	r20, r22
    2060:	4f 70       	andi	r20, 0x0F	; 15
    2062:	40 5d       	subi	r20, 0xD0	; 208
    2064:	4a 33       	cpi	r20, 0x3A	; 58
    2066:	18 f0       	brcs	.+6      	; 0x206e <__ultoa_invert+0x7c>
    2068:	49 5d       	subi	r20, 0xD9	; 217
    206a:	31 fd       	sbrc	r19, 1
    206c:	40 52       	subi	r20, 0x20	; 32
    206e:	41 93       	st	Z+, r20
    2070:	02 d0       	rcall	.+4      	; 0x2076 <__ultoa_invert+0x84>
    2072:	a9 f7       	brne	.-22     	; 0x205e <__ultoa_invert+0x6c>
    2074:	ea cf       	rjmp	.-44     	; 0x204a <__ultoa_invert+0x58>
    2076:	b4 e0       	ldi	r27, 0x04	; 4
    2078:	a6 95       	lsr	r26
    207a:	97 95       	ror	r25
    207c:	87 95       	ror	r24
    207e:	77 95       	ror	r23
    2080:	67 95       	ror	r22
    2082:	ba 95       	dec	r27
    2084:	c9 f7       	brne	.-14     	; 0x2078 <__ultoa_invert+0x86>
    2086:	00 97       	sbiw	r24, 0x00	; 0
    2088:	61 05       	cpc	r22, r1
    208a:	71 05       	cpc	r23, r1
    208c:	08 95       	ret
    208e:	9b 01       	movw	r18, r22
    2090:	ac 01       	movw	r20, r24
    2092:	0a 2e       	mov	r0, r26
    2094:	06 94       	lsr	r0
    2096:	57 95       	ror	r21
    2098:	47 95       	ror	r20
    209a:	37 95       	ror	r19
    209c:	27 95       	ror	r18
    209e:	ba 95       	dec	r27
    20a0:	c9 f7       	brne	.-14     	; 0x2094 <__ultoa_invert+0xa2>
    20a2:	62 0f       	add	r22, r18
    20a4:	73 1f       	adc	r23, r19
    20a6:	84 1f       	adc	r24, r20
    20a8:	95 1f       	adc	r25, r21
    20aa:	a0 1d       	adc	r26, r0
    20ac:	08 95       	ret

000020ae <_exit>:
    20ae:	f8 94       	cli

000020b0 <__stop_program>:
    20b0:	ff cf       	rjmp	.-2      	; 0x20b0 <__stop_program>
